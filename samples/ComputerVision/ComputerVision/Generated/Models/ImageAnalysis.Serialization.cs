// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace ComputerVision.Models
{
    public partial class ImageAnalysis
    {
        internal static ImageAnalysis DeserializeImageAnalysis(JsonElement element)
        {
            Optional<IReadOnlyList<Category>> categories = default;
            Optional<AdultInfo> adult = default;
            Optional<ColorInfo> color = default;
            Optional<ImageType> imageType = default;
            Optional<IReadOnlyList<ImageTag>> tags = default;
            Optional<ImageDescriptionDetails> description = default;
            Optional<IReadOnlyList<FaceDescription>> faces = default;
            Optional<IReadOnlyList<DetectedObject>> objects = default;
            Optional<IReadOnlyList<DetectedBrand>> brands = default;
            Optional<string> requestId = default;
            Optional<ImageMetadata> metadata = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("categories"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        categories = null;
                        continue;
                    }
                    List<Category> array = new List<Category>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        if (item.ValueKind == JsonValueKind.Null)
                        {
                            array.Add(null);
                        }
                        else
                        {
                            array.Add(Category.DeserializeCategory(item));
                        }
                    }
                    categories = array;
                    continue;
                }
                if (property.NameEquals("adult"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        adult = null;
                        continue;
                    }
                    adult = AdultInfo.DeserializeAdultInfo(property.Value);
                    continue;
                }
                if (property.NameEquals("color"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        color = null;
                        continue;
                    }
                    color = ColorInfo.DeserializeColorInfo(property.Value);
                    continue;
                }
                if (property.NameEquals("imageType"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        imageType = null;
                        continue;
                    }
                    imageType = ImageType.DeserializeImageType(property.Value);
                    continue;
                }
                if (property.NameEquals("tags"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        tags = null;
                        continue;
                    }
                    List<ImageTag> array = new List<ImageTag>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        if (item.ValueKind == JsonValueKind.Null)
                        {
                            array.Add(null);
                        }
                        else
                        {
                            array.Add(ImageTag.DeserializeImageTag(item));
                        }
                    }
                    tags = array;
                    continue;
                }
                if (property.NameEquals("description"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        description = null;
                        continue;
                    }
                    description = ImageDescriptionDetails.DeserializeImageDescriptionDetails(property.Value);
                    continue;
                }
                if (property.NameEquals("faces"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        faces = null;
                        continue;
                    }
                    List<FaceDescription> array = new List<FaceDescription>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        if (item.ValueKind == JsonValueKind.Null)
                        {
                            array.Add(null);
                        }
                        else
                        {
                            array.Add(FaceDescription.DeserializeFaceDescription(item));
                        }
                    }
                    faces = array;
                    continue;
                }
                if (property.NameEquals("objects"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        objects = null;
                        continue;
                    }
                    List<DetectedObject> array = new List<DetectedObject>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        if (item.ValueKind == JsonValueKind.Null)
                        {
                            array.Add(null);
                        }
                        else
                        {
                            array.Add(DetectedObject.DeserializeDetectedObject(item));
                        }
                    }
                    objects = array;
                    continue;
                }
                if (property.NameEquals("brands"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        brands = null;
                        continue;
                    }
                    List<DetectedBrand> array = new List<DetectedBrand>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        if (item.ValueKind == JsonValueKind.Null)
                        {
                            array.Add(null);
                        }
                        else
                        {
                            array.Add(DetectedBrand.DeserializeDetectedBrand(item));
                        }
                    }
                    brands = array;
                    continue;
                }
                if (property.NameEquals("requestId"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        requestId = null;
                        continue;
                    }
                    requestId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("metadata"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        metadata = null;
                        continue;
                    }
                    metadata = ImageMetadata.DeserializeImageMetadata(property.Value);
                    continue;
                }
            }
            return new ImageAnalysis(Optional.ToList(categories), adult.Value, color.Value, imageType.Value, Optional.ToList(tags), description.Value, Optional.ToList(faces), Optional.ToList(objects), Optional.ToList(brands), requestId.Value, metadata.Value);
        }
    }
}
