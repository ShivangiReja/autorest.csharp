// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace ComputerVision.Models
{
    internal static class VisualFeatureTypesExtensions
    {
        public static string ToSerialString(this VisualFeatureTypes value) => value switch
        {
            VisualFeatureTypes.ImageType => "ImageType",
            VisualFeatureTypes.Faces => "Faces",
            VisualFeatureTypes.Adult => "Adult",
            VisualFeatureTypes.Categories => "Categories",
            VisualFeatureTypes.Color => "Color",
            VisualFeatureTypes.Tags => "Tags",
            VisualFeatureTypes.Description => "Description",
            VisualFeatureTypes.Objects => "Objects",
            VisualFeatureTypes.Brands => "Brands",
            _ => throw new ArgumentOutOfRangeException(nameof(value), value, "Unknown VisualFeatureTypes value.")
        };

        public static VisualFeatureTypes ToVisualFeatureTypes(this string value)
        {
            if (string.Equals(value, "ImageType", StringComparison.InvariantCultureIgnoreCase)) return VisualFeatureTypes.ImageType;
            if (string.Equals(value, "Faces", StringComparison.InvariantCultureIgnoreCase)) return VisualFeatureTypes.Faces;
            if (string.Equals(value, "Adult", StringComparison.InvariantCultureIgnoreCase)) return VisualFeatureTypes.Adult;
            if (string.Equals(value, "Categories", StringComparison.InvariantCultureIgnoreCase)) return VisualFeatureTypes.Categories;
            if (string.Equals(value, "Color", StringComparison.InvariantCultureIgnoreCase)) return VisualFeatureTypes.Color;
            if (string.Equals(value, "Tags", StringComparison.InvariantCultureIgnoreCase)) return VisualFeatureTypes.Tags;
            if (string.Equals(value, "Description", StringComparison.InvariantCultureIgnoreCase)) return VisualFeatureTypes.Description;
            if (string.Equals(value, "Objects", StringComparison.InvariantCultureIgnoreCase)) return VisualFeatureTypes.Objects;
            if (string.Equals(value, "Brands", StringComparison.InvariantCultureIgnoreCase)) return VisualFeatureTypes.Brands;
            throw new ArgumentOutOfRangeException(nameof(value), value, "Unknown VisualFeatureTypes value.");
        }
    }
}
