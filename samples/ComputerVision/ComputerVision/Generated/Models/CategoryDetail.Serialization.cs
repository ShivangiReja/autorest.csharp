// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace ComputerVision.Models
{
    public partial class CategoryDetail
    {
        internal static CategoryDetail DeserializeCategoryDetail(JsonElement element)
        {
            Optional<IReadOnlyList<CelebritiesModel>> celebrities = default;
            Optional<IReadOnlyList<LandmarksModel>> landmarks = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("celebrities"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        celebrities = null;
                        continue;
                    }
                    List<CelebritiesModel> array = new List<CelebritiesModel>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        if (item.ValueKind == JsonValueKind.Null)
                        {
                            array.Add(null);
                        }
                        else
                        {
                            array.Add(CelebritiesModel.DeserializeCelebritiesModel(item));
                        }
                    }
                    celebrities = array;
                    continue;
                }
                if (property.NameEquals("landmarks"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        landmarks = null;
                        continue;
                    }
                    List<LandmarksModel> array = new List<LandmarksModel>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        if (item.ValueKind == JsonValueKind.Null)
                        {
                            array.Add(null);
                        }
                        else
                        {
                            array.Add(LandmarksModel.DeserializeLandmarksModel(item));
                        }
                    }
                    landmarks = array;
                    continue;
                }
            }
            return new CategoryDetail(Optional.ToList(celebrities), Optional.ToList(landmarks));
        }
    }
}
