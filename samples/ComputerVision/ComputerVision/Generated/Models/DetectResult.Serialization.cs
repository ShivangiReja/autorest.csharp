// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace ComputerVision.Models
{
    public partial class DetectResult
    {
        internal static DetectResult DeserializeDetectResult(JsonElement element)
        {
            Optional<IReadOnlyList<DetectedObject>> objects = default;
            Optional<string> requestId = default;
            Optional<ImageMetadata> metadata = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("objects"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        objects = null;
                        continue;
                    }
                    List<DetectedObject> array = new List<DetectedObject>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        if (item.ValueKind == JsonValueKind.Null)
                        {
                            array.Add(null);
                        }
                        else
                        {
                            array.Add(DetectedObject.DeserializeDetectedObject(item));
                        }
                    }
                    objects = array;
                    continue;
                }
                if (property.NameEquals("requestId"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        requestId = null;
                        continue;
                    }
                    requestId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("metadata"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        metadata = null;
                        continue;
                    }
                    metadata = ImageMetadata.DeserializeImageMetadata(property.Value);
                    continue;
                }
            }
            return new DetectResult(Optional.ToList(objects), requestId.Value, metadata.Value);
        }
    }
}
