// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace ComputerVision.Models
{
    public partial class ImageDescriptionDetails
    {
        internal static ImageDescriptionDetails DeserializeImageDescriptionDetails(JsonElement element)
        {
            Optional<IReadOnlyList<string>> tags = default;
            Optional<IReadOnlyList<ImageCaption>> captions = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("tags"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        tags = null;
                        continue;
                    }
                    List<string> array = new List<string>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        if (item.ValueKind == JsonValueKind.Null)
                        {
                            array.Add(null);
                        }
                        else
                        {
                            array.Add(item.GetString());
                        }
                    }
                    tags = array;
                    continue;
                }
                if (property.NameEquals("captions"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        captions = null;
                        continue;
                    }
                    List<ImageCaption> array = new List<ImageCaption>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        if (item.ValueKind == JsonValueKind.Null)
                        {
                            array.Add(null);
                        }
                        else
                        {
                            array.Add(ImageCaption.DeserializeImageCaption(item));
                        }
                    }
                    captions = array;
                    continue;
                }
            }
            return new ImageDescriptionDetails(Optional.ToList(tags), Optional.ToList(captions));
        }
    }
}
