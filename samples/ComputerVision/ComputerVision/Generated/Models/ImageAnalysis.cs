// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;

namespace ComputerVision.Models
{
    /// <summary> Result of AnalyzeImage operation. </summary>
    public partial class ImageAnalysis
    {
        /// <summary> Initializes a new instance of ImageAnalysis. </summary>
        internal ImageAnalysis()
        {
            Categories = new ChangeTrackingList<Category>();
            Tags = new ChangeTrackingList<ImageTag>();
            Faces = new ChangeTrackingList<FaceDescription>();
            Objects = new ChangeTrackingList<DetectedObject>();
            Brands = new ChangeTrackingList<DetectedBrand>();
        }

        /// <summary> Initializes a new instance of ImageAnalysis. </summary>
        /// <param name="categories"> An array indicating identified categories. </param>
        /// <param name="adult"> An object describing whether the image contains adult-oriented content and/or is racy. </param>
        /// <param name="color"> An object providing additional metadata describing color attributes. </param>
        /// <param name="imageType"> An object providing possible image types and matching confidence levels. </param>
        /// <param name="tags"> A list of tags with confidence level. </param>
        /// <param name="description"> A collection of content tags, along with a list of captions sorted by confidence level, and image metadata. </param>
        /// <param name="faces"> An array of possible faces within the image. </param>
        /// <param name="objects"> Array of objects describing what was detected in the image. </param>
        /// <param name="brands"> Array of brands detected in the image. </param>
        /// <param name="requestId"> Id of the REST API request. </param>
        /// <param name="metadata"> Image metadata. </param>
        internal ImageAnalysis(IReadOnlyList<Category> categories, AdultInfo adult, ColorInfo color, ImageType imageType, IReadOnlyList<ImageTag> tags, ImageDescriptionDetails description, IReadOnlyList<FaceDescription> faces, IReadOnlyList<DetectedObject> objects, IReadOnlyList<DetectedBrand> brands, string requestId, ImageMetadata metadata)
        {
            Categories = categories;
            Adult = adult;
            Color = color;
            ImageType = imageType;
            Tags = tags;
            Description = description;
            Faces = faces;
            Objects = objects;
            Brands = brands;
            RequestId = requestId;
            Metadata = metadata;
        }

        /// <summary> An array indicating identified categories. </summary>
        public IReadOnlyList<Category> Categories { get; }
        /// <summary> An object describing whether the image contains adult-oriented content and/or is racy. </summary>
        public AdultInfo Adult { get; }
        /// <summary> An object providing additional metadata describing color attributes. </summary>
        public ColorInfo Color { get; }
        /// <summary> An object providing possible image types and matching confidence levels. </summary>
        public ImageType ImageType { get; }
        /// <summary> A list of tags with confidence level. </summary>
        public IReadOnlyList<ImageTag> Tags { get; }
        /// <summary> A collection of content tags, along with a list of captions sorted by confidence level, and image metadata. </summary>
        public ImageDescriptionDetails Description { get; }
        /// <summary> An array of possible faces within the image. </summary>
        public IReadOnlyList<FaceDescription> Faces { get; }
        /// <summary> Array of objects describing what was detected in the image. </summary>
        public IReadOnlyList<DetectedObject> Objects { get; }
        /// <summary> Array of brands detected in the image. </summary>
        public IReadOnlyList<DetectedBrand> Brands { get; }
        /// <summary> Id of the REST API request. </summary>
        public string RequestId { get; }
        /// <summary> Image metadata. </summary>
        public ImageMetadata Metadata { get; }
    }
}
