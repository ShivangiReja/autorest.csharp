!<!CodeModel> 
info: !<!Info> 
  title: ComputerVision
schemas: !<!Schemas> 
  numbers:
    - !<!NumberSchema> &ref_5
      type: number
      precision: 32
      language: !<!Languages> 
        default:
          name: Number
          description: Probability of the tag.
      protocol: !<!Protocols> {}
    - !<!NumberSchema> &ref_8
      type: number
      precision: 32
      language: !<!Languages> 
        default:
          name: Number
          description: Coordinate of the left boundary.
      protocol: !<!Protocols> {}
    - !<!NumberSchema> &ref_9
      type: number
      precision: 32
      language: !<!Languages> 
        default:
          name: Number
          description: Coordinate of the top boundary.
      protocol: !<!Protocols> {}
    - !<!NumberSchema> &ref_10
      type: number
      precision: 32
      language: !<!Languages> 
        default:
          name: Number
          description: Width.
      protocol: !<!Protocols> {}
    - !<!NumberSchema> &ref_11
      type: number
      precision: 32
      language: !<!Languages> 
        default:
          name: Number
          description: Height.
      protocol: !<!Protocols> {}
  strings:
    - !<!StringSchema> &ref_0
      type: string
      language: !<!Languages> 
        default:
          name: String
          description: simple string
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_25
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: '3.1'
      language: !<!Languages> 
        default:
          name: String
          description: ''
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_7
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: '3.1'
      language: !<!Languages> 
        default:
          name: PredictionTagName
          description: Name of the predicted tag.
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_16
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: '3.1'
      language: !<!Languages> 
        default:
          name: CustomVisionErrorMessage
          description: A message explaining the error reported by the service.
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_17
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: '3.1'
      language: !<!Languages> 
        default:
          name: ImageUrl
          description: Url of the image.
      protocol: !<!Protocols> {}
  choices:
    - !<!ChoiceSchema> &ref_12
      choices:
        - !<!ChoiceValue> 
          value: Regular
          language:
            default:
              name: Regular
              description: ''
        - !<!ChoiceValue> 
          value: Negative
          language:
            default:
              name: Negative
              description: ''
        - !<!ChoiceValue> 
          value: GeneralProduct
          language:
            default:
              name: GeneralProduct
              description: ''
      type: choice
      apiVersions:
        - !<!ApiVersion> 
          version: '3.1'
      choiceType: *ref_0
      language: !<!Languages> 
        default:
          name: TagType
          description: Type of the predicted tag.
      protocol: !<!Protocols> {}
    - !<!ChoiceSchema> &ref_15
      choices:
        - !<!ChoiceValue> 
          value: NoError
          language:
            default:
              name: NoError
              description: ''
        - !<!ChoiceValue> 
          value: BadRequest
          language:
            default:
              name: BadRequest
              description: ''
        - !<!ChoiceValue> 
          value: BadRequestExceededBatchSize
          language:
            default:
              name: BadRequestExceededBatchSize
              description: ''
        - !<!ChoiceValue> 
          value: BadRequestNotSupported
          language:
            default:
              name: BadRequestNotSupported
              description: ''
        - !<!ChoiceValue> 
          value: BadRequestInvalidIds
          language:
            default:
              name: BadRequestInvalidIds
              description: ''
        - !<!ChoiceValue> 
          value: BadRequestProjectName
          language:
            default:
              name: BadRequestProjectName
              description: ''
        - !<!ChoiceValue> 
          value: BadRequestProjectNameNotUnique
          language:
            default:
              name: BadRequestProjectNameNotUnique
              description: ''
        - !<!ChoiceValue> 
          value: BadRequestProjectDescription
          language:
            default:
              name: BadRequestProjectDescription
              description: ''
        - !<!ChoiceValue> 
          value: BadRequestProjectUnknownDomain
          language:
            default:
              name: BadRequestProjectUnknownDomain
              description: ''
        - !<!ChoiceValue> 
          value: BadRequestProjectUnknownClassification
          language:
            default:
              name: BadRequestProjectUnknownClassification
              description: ''
        - !<!ChoiceValue> 
          value: BadRequestProjectUnsupportedDomainTypeChange
          language:
            default:
              name: BadRequestProjectUnsupportedDomainTypeChange
              description: ''
        - !<!ChoiceValue> 
          value: BadRequestProjectUnsupportedExportPlatform
          language:
            default:
              name: BadRequestProjectUnsupportedExportPlatform
              description: ''
        - !<!ChoiceValue> 
          value: BadRequestProjectImagePreprocessingSettings
          language:
            default:
              name: BadRequestProjectImagePreprocessingSettings
              description: ''
        - !<!ChoiceValue> 
          value: BadRequestProjectDuplicated
          language:
            default:
              name: BadRequestProjectDuplicated
              description: ''
        - !<!ChoiceValue> 
          value: BadRequestIterationName
          language:
            default:
              name: BadRequestIterationName
              description: ''
        - !<!ChoiceValue> 
          value: BadRequestIterationNameNotUnique
          language:
            default:
              name: BadRequestIterationNameNotUnique
              description: ''
        - !<!ChoiceValue> 
          value: BadRequestIterationDescription
          language:
            default:
              name: BadRequestIterationDescription
              description: ''
        - !<!ChoiceValue> 
          value: BadRequestIterationIsNotTrained
          language:
            default:
              name: BadRequestIterationIsNotTrained
              description: ''
        - !<!ChoiceValue> 
          value: BadRequestIterationValidationFailed
          language:
            default:
              name: BadRequestIterationValidationFailed
              description: ''
        - !<!ChoiceValue> 
          value: BadRequestWorkspaceCannotBeModified
          language:
            default:
              name: BadRequestWorkspaceCannotBeModified
              description: ''
        - !<!ChoiceValue> 
          value: BadRequestWorkspaceNotDeletable
          language:
            default:
              name: BadRequestWorkspaceNotDeletable
              description: ''
        - !<!ChoiceValue> 
          value: BadRequestTagName
          language:
            default:
              name: BadRequestTagName
              description: ''
        - !<!ChoiceValue> 
          value: BadRequestTagNameNotUnique
          language:
            default:
              name: BadRequestTagNameNotUnique
              description: ''
        - !<!ChoiceValue> 
          value: BadRequestTagDescription
          language:
            default:
              name: BadRequestTagDescription
              description: ''
        - !<!ChoiceValue> 
          value: BadRequestTagType
          language:
            default:
              name: BadRequestTagType
              description: ''
        - !<!ChoiceValue> 
          value: BadRequestMultipleNegativeTag
          language:
            default:
              name: BadRequestMultipleNegativeTag
              description: ''
        - !<!ChoiceValue> 
          value: BadRequestMultipleGeneralProductTag
          language:
            default:
              name: BadRequestMultipleGeneralProductTag
              description: ''
        - !<!ChoiceValue> 
          value: BadRequestImageTags
          language:
            default:
              name: BadRequestImageTags
              description: ''
        - !<!ChoiceValue> 
          value: BadRequestImageRegions
          language:
            default:
              name: BadRequestImageRegions
              description: ''
        - !<!ChoiceValue> 
          value: BadRequestNegativeAndRegularTagOnSameImage
          language:
            default:
              name: BadRequestNegativeAndRegularTagOnSameImage
              description: ''
        - !<!ChoiceValue> 
          value: BadRequestUnsupportedDomain
          language:
            default:
              name: BadRequestUnsupportedDomain
              description: ''
        - !<!ChoiceValue> 
          value: BadRequestRequiredParamIsNull
          language:
            default:
              name: BadRequestRequiredParamIsNull
              description: ''
        - !<!ChoiceValue> 
          value: BadRequestIterationIsPublished
          language:
            default:
              name: BadRequestIterationIsPublished
              description: ''
        - !<!ChoiceValue> 
          value: BadRequestInvalidPublishName
          language:
            default:
              name: BadRequestInvalidPublishName
              description: ''
        - !<!ChoiceValue> 
          value: BadRequestInvalidPublishTarget
          language:
            default:
              name: BadRequestInvalidPublishTarget
              description: ''
        - !<!ChoiceValue> 
          value: BadRequestUnpublishFailed
          language:
            default:
              name: BadRequestUnpublishFailed
              description: ''
        - !<!ChoiceValue> 
          value: BadRequestIterationNotPublished
          language:
            default:
              name: BadRequestIterationNotPublished
              description: ''
        - !<!ChoiceValue> 
          value: BadRequestSubscriptionApi
          language:
            default:
              name: BadRequestSubscriptionApi
              description: ''
        - !<!ChoiceValue> 
          value: BadRequestExceedProjectLimit
          language:
            default:
              name: BadRequestExceedProjectLimit
              description: ''
        - !<!ChoiceValue> 
          value: BadRequestExceedIterationPerProjectLimit
          language:
            default:
              name: BadRequestExceedIterationPerProjectLimit
              description: ''
        - !<!ChoiceValue> 
          value: BadRequestExceedTagPerProjectLimit
          language:
            default:
              name: BadRequestExceedTagPerProjectLimit
              description: ''
        - !<!ChoiceValue> 
          value: BadRequestExceedTagPerImageLimit
          language:
            default:
              name: BadRequestExceedTagPerImageLimit
              description: ''
        - !<!ChoiceValue> 
          value: BadRequestExceededQuota
          language:
            default:
              name: BadRequestExceededQuota
              description: ''
        - !<!ChoiceValue> 
          value: BadRequestCannotMigrateProjectWithName
          language:
            default:
              name: BadRequestCannotMigrateProjectWithName
              description: ''
        - !<!ChoiceValue> 
          value: BadRequestNotLimitedTrial
          language:
            default:
              name: BadRequestNotLimitedTrial
              description: ''
        - !<!ChoiceValue> 
          value: BadRequestImageBatch
          language:
            default:
              name: BadRequestImageBatch
              description: ''
        - !<!ChoiceValue> 
          value: BadRequestImageStream
          language:
            default:
              name: BadRequestImageStream
              description: ''
        - !<!ChoiceValue> 
          value: BadRequestImageUrl
          language:
            default:
              name: BadRequestImageUrl
              description: ''
        - !<!ChoiceValue> 
          value: BadRequestImageFormat
          language:
            default:
              name: BadRequestImageFormat
              description: ''
        - !<!ChoiceValue> 
          value: BadRequestImageSizeBytes
          language:
            default:
              name: BadRequestImageSizeBytes
              description: ''
        - !<!ChoiceValue> 
          value: BadRequestImageDimensions
          language:
            default:
              name: BadRequestImageDimensions
              description: ''
        - !<!ChoiceValue> 
          value: BadRequestImageExceededCount
          language:
            default:
              name: BadRequestImageExceededCount
              description: ''
        - !<!ChoiceValue> 
          value: BadRequestTrainingNotNeeded
          language:
            default:
              name: BadRequestTrainingNotNeeded
              description: ''
        - !<!ChoiceValue> 
          value: BadRequestTrainingNotNeededButTrainingPipelineUpdated
          language:
            default:
              name: BadRequestTrainingNotNeededButTrainingPipelineUpdated
              description: ''
        - !<!ChoiceValue> 
          value: BadRequestTrainingValidationFailed
          language:
            default:
              name: BadRequestTrainingValidationFailed
              description: ''
        - !<!ChoiceValue> 
          value: BadRequestClassificationTrainingValidationFailed
          language:
            default:
              name: BadRequestClassificationTrainingValidationFailed
              description: ''
        - !<!ChoiceValue> 
          value: BadRequestMultiClassClassificationTrainingValidationFailed
          language:
            default:
              name: BadRequestMultiClassClassificationTrainingValidationFailed
              description: ''
        - !<!ChoiceValue> 
          value: BadRequestMultiLabelClassificationTrainingValidationFailed
          language:
            default:
              name: BadRequestMultiLabelClassificationTrainingValidationFailed
              description: ''
        - !<!ChoiceValue> 
          value: BadRequestDetectionTrainingValidationFailed
          language:
            default:
              name: BadRequestDetectionTrainingValidationFailed
              description: ''
        - !<!ChoiceValue> 
          value: BadRequestTrainingAlreadyInProgress
          language:
            default:
              name: BadRequestTrainingAlreadyInProgress
              description: ''
        - !<!ChoiceValue> 
          value: BadRequestDetectionTrainingNotAllowNegativeTag
          language:
            default:
              name: BadRequestDetectionTrainingNotAllowNegativeTag
              description: ''
        - !<!ChoiceValue> 
          value: BadRequestInvalidEmailAddress
          language:
            default:
              name: BadRequestInvalidEmailAddress
              description: ''
        - !<!ChoiceValue> 
          value: BadRequestDomainNotSupportedForAdvancedTraining
          language:
            default:
              name: BadRequestDomainNotSupportedForAdvancedTraining
              description: ''
        - !<!ChoiceValue> 
          value: BadRequestExportPlatformNotSupportedForAdvancedTraining
          language:
            default:
              name: BadRequestExportPlatformNotSupportedForAdvancedTraining
              description: ''
        - !<!ChoiceValue> 
          value: BadRequestReservedBudgetInHoursNotEnoughForAdvancedTraining
          language:
            default:
              name: BadRequestReservedBudgetInHoursNotEnoughForAdvancedTraining
              description: ''
        - !<!ChoiceValue> 
          value: BadRequestExportValidationFailed
          language:
            default:
              name: BadRequestExportValidationFailed
              description: ''
        - !<!ChoiceValue> 
          value: BadRequestExportAlreadyInProgress
          language:
            default:
              name: BadRequestExportAlreadyInProgress
              description: ''
        - !<!ChoiceValue> 
          value: BadRequestPredictionIdsMissing
          language:
            default:
              name: BadRequestPredictionIdsMissing
              description: ''
        - !<!ChoiceValue> 
          value: BadRequestPredictionIdsExceededCount
          language:
            default:
              name: BadRequestPredictionIdsExceededCount
              description: ''
        - !<!ChoiceValue> 
          value: BadRequestPredictionTagsExceededCount
          language:
            default:
              name: BadRequestPredictionTagsExceededCount
              description: ''
        - !<!ChoiceValue> 
          value: BadRequestPredictionResultsExceededCount
          language:
            default:
              name: BadRequestPredictionResultsExceededCount
              description: ''
        - !<!ChoiceValue> 
          value: BadRequestPredictionInvalidApplicationName
          language:
            default:
              name: BadRequestPredictionInvalidApplicationName
              description: ''
        - !<!ChoiceValue> 
          value: BadRequestPredictionInvalidQueryParameters
          language:
            default:
              name: BadRequestPredictionInvalidQueryParameters
              description: ''
        - !<!ChoiceValue> 
          value: BadRequestInvalidImportToken
          language:
            default:
              name: BadRequestInvalidImportToken
              description: ''
        - !<!ChoiceValue> 
          value: BadRequestExportWhileTraining
          language:
            default:
              name: BadRequestExportWhileTraining
              description: ''
        - !<!ChoiceValue> 
          value: BadRequestImageMetadataKey
          language:
            default:
              name: BadRequestImageMetadataKey
              description: ''
        - !<!ChoiceValue> 
          value: BadRequestImageMetadataValue
          language:
            default:
              name: BadRequestImageMetadataValue
              description: ''
        - !<!ChoiceValue> 
          value: BadRequestOperationNotSupported
          language:
            default:
              name: BadRequestOperationNotSupported
              description: ''
        - !<!ChoiceValue> 
          value: BadRequestInvalidArtifactUri
          language:
            default:
              name: BadRequestInvalidArtifactUri
              description: ''
        - !<!ChoiceValue> 
          value: BadRequestCustomerManagedKeyRevoked
          language:
            default:
              name: BadRequestCustomerManagedKeyRevoked
              description: ''
        - !<!ChoiceValue> 
          value: BadRequestInvalid
          language:
            default:
              name: BadRequestInvalid
              description: ''
        - !<!ChoiceValue> 
          value: UnsupportedMediaType
          language:
            default:
              name: UnsupportedMediaType
              description: ''
        - !<!ChoiceValue> 
          value: Forbidden
          language:
            default:
              name: Forbidden
              description: ''
        - !<!ChoiceValue> 
          value: ForbiddenUser
          language:
            default:
              name: ForbiddenUser
              description: ''
        - !<!ChoiceValue> 
          value: ForbiddenUserResource
          language:
            default:
              name: ForbiddenUserResource
              description: ''
        - !<!ChoiceValue> 
          value: ForbiddenUserSignupDisabled
          language:
            default:
              name: ForbiddenUserSignupDisabled
              description: ''
        - !<!ChoiceValue> 
          value: ForbiddenUserSignupAllowanceExceeded
          language:
            default:
              name: ForbiddenUserSignupAllowanceExceeded
              description: ''
        - !<!ChoiceValue> 
          value: ForbiddenUserDoesNotExist
          language:
            default:
              name: ForbiddenUserDoesNotExist
              description: ''
        - !<!ChoiceValue> 
          value: ForbiddenUserDisabled
          language:
            default:
              name: ForbiddenUserDisabled
              description: ''
        - !<!ChoiceValue> 
          value: ForbiddenUserInsufficientCapability
          language:
            default:
              name: ForbiddenUserInsufficientCapability
              description: ''
        - !<!ChoiceValue> 
          value: ForbiddenDRModeEnabled
          language:
            default:
              name: ForbiddenDRModeEnabled
              description: ''
        - !<!ChoiceValue> 
          value: ForbiddenInvalid
          language:
            default:
              name: ForbiddenInvalid
              description: ''
        - !<!ChoiceValue> 
          value: NotFound
          language:
            default:
              name: NotFound
              description: ''
        - !<!ChoiceValue> 
          value: NotFoundProject
          language:
            default:
              name: NotFoundProject
              description: ''
        - !<!ChoiceValue> 
          value: NotFoundProjectDefaultIteration
          language:
            default:
              name: NotFoundProjectDefaultIteration
              description: ''
        - !<!ChoiceValue> 
          value: NotFoundIteration
          language:
            default:
              name: NotFoundIteration
              description: ''
        - !<!ChoiceValue> 
          value: NotFoundIterationPerformance
          language:
            default:
              name: NotFoundIterationPerformance
              description: ''
        - !<!ChoiceValue> 
          value: NotFoundTag
          language:
            default:
              name: NotFoundTag
              description: ''
        - !<!ChoiceValue> 
          value: NotFoundImage
          language:
            default:
              name: NotFoundImage
              description: ''
        - !<!ChoiceValue> 
          value: NotFoundDomain
          language:
            default:
              name: NotFoundDomain
              description: ''
        - !<!ChoiceValue> 
          value: NotFoundApimSubscription
          language:
            default:
              name: NotFoundApimSubscription
              description: ''
        - !<!ChoiceValue> 
          value: NotFoundInvalid
          language:
            default:
              name: NotFoundInvalid
              description: ''
        - !<!ChoiceValue> 
          value: Conflict
          language:
            default:
              name: Conflict
              description: ''
        - !<!ChoiceValue> 
          value: ConflictInvalid
          language:
            default:
              name: ConflictInvalid
              description: ''
        - !<!ChoiceValue> 
          value: ErrorUnknown
          language:
            default:
              name: ErrorUnknown
              description: ''
        - !<!ChoiceValue> 
          value: ErrorIterationCopyFailed
          language:
            default:
              name: ErrorIterationCopyFailed
              description: ''
        - !<!ChoiceValue> 
          value: ErrorPreparePerformanceMigrationFailed
          language:
            default:
              name: ErrorPreparePerformanceMigrationFailed
              description: ''
        - !<!ChoiceValue> 
          value: ErrorProjectInvalidWorkspace
          language:
            default:
              name: ErrorProjectInvalidWorkspace
              description: ''
        - !<!ChoiceValue> 
          value: ErrorProjectInvalidPipelineConfiguration
          language:
            default:
              name: ErrorProjectInvalidPipelineConfiguration
              description: ''
        - !<!ChoiceValue> 
          value: ErrorProjectInvalidDomain
          language:
            default:
              name: ErrorProjectInvalidDomain
              description: ''
        - !<!ChoiceValue> 
          value: ErrorProjectTrainingRequestFailed
          language:
            default:
              name: ErrorProjectTrainingRequestFailed
              description: ''
        - !<!ChoiceValue> 
          value: ErrorProjectImportRequestFailed
          language:
            default:
              name: ErrorProjectImportRequestFailed
              description: ''
        - !<!ChoiceValue> 
          value: ErrorProjectExportRequestFailed
          language:
            default:
              name: ErrorProjectExportRequestFailed
              description: ''
        - !<!ChoiceValue> 
          value: ErrorFeaturizationServiceUnavailable
          language:
            default:
              name: ErrorFeaturizationServiceUnavailable
              description: ''
        - !<!ChoiceValue> 
          value: ErrorFeaturizationQueueTimeout
          language:
            default:
              name: ErrorFeaturizationQueueTimeout
              description: ''
        - !<!ChoiceValue> 
          value: ErrorFeaturizationInvalidFeaturizer
          language:
            default:
              name: ErrorFeaturizationInvalidFeaturizer
              description: ''
        - !<!ChoiceValue> 
          value: ErrorFeaturizationAugmentationUnavailable
          language:
            default:
              name: ErrorFeaturizationAugmentationUnavailable
              description: ''
        - !<!ChoiceValue> 
          value: ErrorFeaturizationUnrecognizedJob
          language:
            default:
              name: ErrorFeaturizationUnrecognizedJob
              description: ''
        - !<!ChoiceValue> 
          value: ErrorFeaturizationAugmentationError
          language:
            default:
              name: ErrorFeaturizationAugmentationError
              description: ''
        - !<!ChoiceValue> 
          value: ErrorExporterInvalidPlatform
          language:
            default:
              name: ErrorExporterInvalidPlatform
              description: ''
        - !<!ChoiceValue> 
          value: ErrorExporterInvalidFeaturizer
          language:
            default:
              name: ErrorExporterInvalidFeaturizer
              description: ''
        - !<!ChoiceValue> 
          value: ErrorExporterInvalidClassifier
          language:
            default:
              name: ErrorExporterInvalidClassifier
              description: ''
        - !<!ChoiceValue> 
          value: ErrorPredictionServiceUnavailable
          language:
            default:
              name: ErrorPredictionServiceUnavailable
              description: ''
        - !<!ChoiceValue> 
          value: ErrorPredictionModelNotFound
          language:
            default:
              name: ErrorPredictionModelNotFound
              description: ''
        - !<!ChoiceValue> 
          value: ErrorPredictionModelNotCached
          language:
            default:
              name: ErrorPredictionModelNotCached
              description: ''
        - !<!ChoiceValue> 
          value: ErrorPrediction
          language:
            default:
              name: ErrorPrediction
              description: ''
        - !<!ChoiceValue> 
          value: ErrorPredictionStorage
          language:
            default:
              name: ErrorPredictionStorage
              description: ''
        - !<!ChoiceValue> 
          value: ErrorRegionProposal
          language:
            default:
              name: ErrorRegionProposal
              description: ''
        - !<!ChoiceValue> 
          value: ErrorUnknownBaseModel
          language:
            default:
              name: ErrorUnknownBaseModel
              description: ''
        - !<!ChoiceValue> 
          value: ErrorInvalid
          language:
            default:
              name: ErrorInvalid
              description: ''
      type: choice
      apiVersions:
        - !<!ApiVersion> 
          version: '3.1'
      choiceType: *ref_0
      language: !<!Languages> 
        default:
          name: CustomVisionErrorCodes
          description: The error code.
      protocol: !<!Protocols> {}
  constants:
    - !<!ConstantSchema> &ref_26
      type: constant
      value: !<!ConstantValue> 
        value: multipart/form-data
      valueType: *ref_0
      language: !<!Languages> 
        default:
          name: MultipartFormData
          description: Content Type 'multipart/form-data'
      protocol: !<!Protocols> {}
    - !<!ConstantSchema> &ref_27
      type: constant
      value: !<!ConstantValue> 
        value: 'application/json, application/xml, text/xml'
      valueType: *ref_0
      language: !<!Languages> 
        default:
          name: Accept
          description: 'Accept: application/json, application/xml, text/xml'
      protocol: !<!Protocols> {}
    - !<!ConstantSchema> &ref_38
      type: constant
      value: !<!ConstantValue> 
        value: application/json
      valueType: *ref_0
      language: !<!Languages> 
        default:
          name: ApplicationJson
          description: Content Type 'application/json'
      protocol: !<!Protocols> {}
  binaries:
    - !<!BinarySchema> &ref_18
      type: binary
      apiVersions:
        - !<!ApiVersion> 
          version: '3.1'
      language: !<!Languages> 
        default:
          name: binary
          description: 'Binary image data. Supported formats are JPEG, GIF, PNG, and BMP. Supports images up to 4MB.'
      protocol: !<!Protocols> {}
    - !<!BinarySchema> &ref_19
      type: binary
      apiVersions:
        - !<!ApiVersion> 
          version: '3.1'
      language: !<!Languages> 
        default:
          name: binary
          description: 'Binary image data. Supported formats are JPEG, GIF, PNG, and BMP. Supports images up to 4MB.'
      protocol: !<!Protocols> {}
    - !<!BinarySchema> &ref_20
      type: binary
      apiVersions:
        - !<!ApiVersion> 
          version: '3.1'
      language: !<!Languages> 
        default:
          name: binary
          description: 'Binary image data. Supported formats are JPEG, GIF, PNG, and BMP. Supports images up to 4MB.'
      protocol: !<!Protocols> {}
    - !<!BinarySchema> &ref_21
      type: binary
      apiVersions:
        - !<!ApiVersion> 
          version: '3.1'
      language: !<!Languages> 
        default:
          name: binary
          description: 'Binary image data. Supported formats are JPEG, GIF, PNG, and BMP. Supports images up to 4MB.'
      protocol: !<!Protocols> {}
  dateTimes:
    - !<!DateTimeSchema> &ref_4
      type: date-time
      format: date-time
      apiVersions:
        - !<!ApiVersion> 
          version: '3.1'
      language: !<!Languages> 
        default:
          name: ImagePredictionCreated
          description: Date this prediction was created.
      protocol: !<!Protocols> {}
  uuids:
    - !<!UuidSchema> &ref_24
      type: uuid
      apiVersions:
        - !<!ApiVersion> 
          version: '3.1'
      language: !<!Languages> 
        default:
          name: Uuid
          description: ''
      protocol: !<!Protocols> {}
    - !<!UuidSchema> &ref_1
      type: uuid
      apiVersions:
        - !<!ApiVersion> 
          version: '3.1'
      language: !<!Languages> 
        default:
          name: ImagePredictionId
          description: Prediction Id.
      protocol: !<!Protocols> {}
    - !<!UuidSchema> &ref_2
      type: uuid
      apiVersions:
        - !<!ApiVersion> 
          version: '3.1'
      language: !<!Languages> 
        default:
          name: ImagePredictionProject
          description: Project Id.
      protocol: !<!Protocols> {}
    - !<!UuidSchema> &ref_3
      type: uuid
      apiVersions:
        - !<!ApiVersion> 
          version: '3.1'
      language: !<!Languages> 
        default:
          name: ImagePredictionIteration
          description: Iteration Id.
      protocol: !<!Protocols> {}
    - !<!UuidSchema> &ref_6
      type: uuid
      apiVersions:
        - !<!ApiVersion> 
          version: '3.1'
      language: !<!Languages> 
        default:
          name: PredictionTagId
          description: Id of the predicted tag.
      protocol: !<!Protocols> {}
  objects:
    - !<!ObjectSchema> &ref_32
      type: object
      apiVersions:
        - !<!ApiVersion> 
          version: '3.1'
      properties:
        - !<!Property> 
          schema: *ref_1
          nullable: false
          readOnly: true
          serializedName: id
          language: !<!Languages> 
            default:
              name: id
              description: Prediction Id.
          protocol: !<!Protocols> {}
        - !<!Property> 
          schema: *ref_2
          nullable: false
          readOnly: true
          serializedName: project
          language: !<!Languages> 
            default:
              name: project
              description: Project Id.
          protocol: !<!Protocols> {}
        - !<!Property> 
          schema: *ref_3
          nullable: false
          readOnly: true
          serializedName: iteration
          language: !<!Languages> 
            default:
              name: iteration
              description: Iteration Id.
          protocol: !<!Protocols> {}
        - !<!Property> 
          schema: *ref_4
          nullable: false
          readOnly: true
          serializedName: created
          language: !<!Languages> 
            default:
              name: created
              description: Date this prediction was created.
          protocol: !<!Protocols> {}
        - !<!Property> 
          schema: !<!ArraySchema> &ref_22
            type: array
            apiVersions:
              - !<!ApiVersion> 
                version: '3.1'
            elementType: !<!ObjectSchema> &ref_13
              type: object
              apiVersions:
                - !<!ApiVersion> 
                  version: '3.1'
              properties:
                - !<!Property> 
                  schema: *ref_5
                  nullable: false
                  readOnly: true
                  serializedName: probability
                  language: !<!Languages> 
                    default:
                      name: probability
                      description: Probability of the tag.
                  protocol: !<!Protocols> {}
                - !<!Property> 
                  schema: *ref_6
                  nullable: false
                  readOnly: true
                  serializedName: tagId
                  language: !<!Languages> 
                    default:
                      name: tagId
                      description: Id of the predicted tag.
                  protocol: !<!Protocols> {}
                - !<!Property> 
                  schema: *ref_7
                  nullable: true
                  readOnly: true
                  serializedName: tagName
                  language: !<!Languages> 
                    default:
                      name: tagName
                      description: Name of the predicted tag.
                  protocol: !<!Protocols> {}
                - !<!Property> 
                  schema: !<!ObjectSchema> &ref_14
                    type: object
                    apiVersions:
                      - !<!ApiVersion> 
                        version: '3.1'
                    properties:
                      - !<!Property> 
                        schema: *ref_8
                        nullable: false
                        readOnly: false
                        required: true
                        serializedName: left
                        language: !<!Languages> 
                          default:
                            name: left
                            description: Coordinate of the left boundary.
                        protocol: !<!Protocols> {}
                      - !<!Property> 
                        schema: *ref_9
                        nullable: false
                        readOnly: false
                        required: true
                        serializedName: top
                        language: !<!Languages> 
                          default:
                            name: top
                            description: Coordinate of the top boundary.
                        protocol: !<!Protocols> {}
                      - !<!Property> 
                        schema: *ref_10
                        nullable: false
                        readOnly: false
                        required: true
                        serializedName: width
                        language: !<!Languages> 
                          default:
                            name: width
                            description: Width.
                        protocol: !<!Protocols> {}
                      - !<!Property> 
                        schema: *ref_11
                        nullable: false
                        readOnly: false
                        required: true
                        serializedName: height
                        language: !<!Languages> 
                          default:
                            name: height
                            description: Height.
                        protocol: !<!Protocols> {}
                    serializationFormats:
                      - json
                      - xml
                    usage:
                      - output
                    language: !<!Languages> 
                      default:
                        name: BoundingBox
                        description: Bounding box that defines a region of an image.
                        namespace: ''
                    protocol: !<!Protocols> {}
                  nullable: true
                  readOnly: true
                  serializedName: boundingBox
                  extensions:
                    x-nullable: true
                  language: !<!Languages> 
                    default:
                      name: boundingBox
                      description: Bounding box of the prediction.
                  protocol: !<!Protocols> {}
                - !<!Property> 
                  schema: *ref_12
                  nullable: true
                  readOnly: true
                  serializedName: tagType
                  language: !<!Languages> 
                    default:
                      name: tagType
                      description: Type of the predicted tag.
                  protocol: !<!Protocols> {}
              serializationFormats:
                - json
                - xml
              usage:
                - output
              language: !<!Languages> 
                default:
                  name: Prediction
                  description: Prediction result.
                  namespace: ''
              protocol: !<!Protocols> {}
            language: !<!Languages> 
              default:
                name: ImagePredictionPredictions
                description: List of predictions.
            protocol: !<!Protocols> {}
          readOnly: true
          serializedName: predictions
          language: !<!Languages> 
            default:
              name: predictions
              description: List of predictions.
          protocol: !<!Protocols> {}
      serializationFormats:
        - json
        - xml
      usage:
        - output
      language: !<!Languages> 
        default:
          name: ImagePrediction
          description: Result of an image prediction request.
          namespace: ''
      protocol: !<!Protocols> {}
    - *ref_13
    - *ref_14
    - !<!ObjectSchema> &ref_33
      type: object
      apiVersions:
        - !<!ApiVersion> 
          version: '3.1'
      properties:
        - !<!Property> 
          schema: *ref_15
          required: true
          serializedName: code
          language: !<!Languages> 
            default:
              name: code
              description: The error code.
          protocol: !<!Protocols> {}
        - !<!Property> 
          schema: *ref_16
          required: true
          serializedName: message
          language: !<!Languages> 
            default:
              name: message
              description: A message explaining the error reported by the service.
          protocol: !<!Protocols> {}
      serializationFormats:
        - json
        - xml
      usage:
        - exception
      language: !<!Languages> 
        default:
          name: CustomVisionError
          description: ''
          namespace: ''
      protocol: !<!Protocols> {}
    - !<!ObjectSchema> &ref_39
      type: object
      apiVersions:
        - !<!ApiVersion> 
          version: '3.1'
      properties:
        - !<!Property> 
          schema: *ref_17
          nullable: false
          readOnly: false
          required: true
          serializedName: url
          language: !<!Languages> 
            default:
              name: url
              description: Url of the image.
          protocol: !<!Protocols> {}
      serializationFormats:
        - json
      usage:
        - input
      language: !<!Languages> 
        default:
          name: ImageUrl
          description: Image url.
          namespace: ''
      protocol: !<!Protocols> {}
    - !<!ObjectSchema> 
      type: object
      apiVersions:
        - !<!ApiVersion> 
          version: '3.1'
      properties:
        - !<!Property> 
          schema: *ref_18
          required: true
          serializedName: imageData
          language: !<!Languages> 
            default:
              name: imageData
              description: 'Binary image data. Supported formats are JPEG, GIF, PNG, and BMP. Supports images up to 4MB.'
          protocol: !<!Protocols> {}
      language: !<!Languages> 
        default:
          name: Paths192Hh8GProjectidClassifyIterationsPublishednameImagePostRequestbodyContentMultipartFormDataSchema
          description: ''
          namespace: ''
      protocol: !<!Protocols> {}
    - !<!ObjectSchema> 
      type: object
      apiVersions:
        - !<!ApiVersion> 
          version: '3.1'
      properties:
        - !<!Property> 
          schema: *ref_19
          required: true
          serializedName: imageData
          language: !<!Languages> 
            default:
              name: imageData
              description: 'Binary image data. Supported formats are JPEG, GIF, PNG, and BMP. Supports images up to 4MB.'
          protocol: !<!Protocols> {}
      language: !<!Languages> 
        default:
          name: Paths1Ue2NurProjectidClassifyIterationsPublishednameImageNostorePostRequestbodyContentMultipartFormDataSchema
          description: ''
          namespace: ''
      protocol: !<!Protocols> {}
    - !<!ObjectSchema> 
      type: object
      apiVersions:
        - !<!ApiVersion> 
          version: '3.1'
      properties:
        - !<!Property> 
          schema: *ref_20
          required: true
          serializedName: imageData
          language: !<!Languages> 
            default:
              name: imageData
              description: 'Binary image data. Supported formats are JPEG, GIF, PNG, and BMP. Supports images up to 4MB.'
          protocol: !<!Protocols> {}
      language: !<!Languages> 
        default:
          name: Paths10UpierProjectidDetectIterationsPublishednameImagePostRequestbodyContentMultipartFormDataSchema
          description: ''
          namespace: ''
      protocol: !<!Protocols> {}
    - !<!ObjectSchema> 
      type: object
      apiVersions:
        - !<!ApiVersion> 
          version: '3.1'
      properties:
        - !<!Property> 
          schema: *ref_21
          required: true
          serializedName: imageData
          language: !<!Languages> 
            default:
              name: imageData
              description: 'Binary image data. Supported formats are JPEG, GIF, PNG, and BMP. Supports images up to 4MB.'
          protocol: !<!Protocols> {}
      language: !<!Languages> 
        default:
          name: Paths8ZelhrProjectidDetectIterationsPublishednameImageNostorePostRequestbodyContentMultipartFormDataSchema
          description: ''
          namespace: ''
      protocol: !<!Protocols> {}
  arrays:
    - *ref_22
globalParameters:
  - !<!Parameter> &ref_23
    schema: *ref_0
    implementation: Client
    required: true
    extensions:
      x-in: path
      x-ms-priority: 0
      x-ms-skip-url-encoding: true
      x-name: Endpoint
      x-required: true
      x-type: string
    language: !<!Languages> 
      default:
        name: Endpoint
        description: Supported Cognitive Services endpoints.
        serializedName: Endpoint
    protocol: !<!Protocols> 
      http: !<!HttpParameter> 
        in: uri
operationGroups:
  - !<!OperationGroup> 
    $key: ''
    operations:
      - !<!Operation> 
        apiVersions:
          - !<!ApiVersion> 
            version: '3.1'
        parameters:
          - *ref_23
          - !<!Parameter> &ref_29
            schema: *ref_24
            implementation: Method
            required: true
            language: !<!Languages> 
              default:
                name: projectId
                description: The project id.
                serializedName: projectId
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: path
          - !<!Parameter> &ref_30
            schema: *ref_25
            implementation: Method
            required: true
            language: !<!Languages> 
              default:
                name: publishedName
                description: Specifies the name of the model to evaluate against.
                serializedName: publishedName
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: path
          - !<!Parameter> &ref_31
            schema: *ref_25
            implementation: Method
            language: !<!Languages> 
              default:
                name: application
                description: Optional. Specifies the name of application using the endpoint.
                serializedName: application
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: query
        requests:
          - !<!Request> 
            parameters:
              - !<!Parameter> 
                schema: *ref_26
                implementation: Method
                origin: 'modelerfour:synthesized/content-type'
                required: true
                language: !<!Languages> 
                  default:
                    name: contentType
                    description: Body Parameter content-type
                    serializedName: Content-Type
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: header
              - !<!Parameter> &ref_28
                schema: *ref_18
                implementation: Method
                required: true
                language: !<!Languages> 
                  default:
                    name: imageData
                    description: 'Binary image data. Supported formats are JPEG, GIF, PNG, and BMP. Supports images up to 4MB.'
                    serializedName: imageData
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: body
              - !<!Parameter> 
                schema: *ref_27
                implementation: Method
                origin: 'modelerfour:synthesized/accept'
                required: true
                language: !<!Languages> 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: header
            signatureParameters:
              - *ref_28
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpMultipartRequest> 
                path: '/{projectId}/classify/iterations/{publishedName}/image'
                method: post
                knownMediaType: multipart
                mediaTypes:
                  - multipart/form-data
                multipart: true
                uri: '{Endpoint}/customvision/v3.1/prediction'
        signatureParameters:
          - *ref_29
          - *ref_30
          - *ref_31
        responses:
          - !<!SchemaResponse> 
            schema: *ref_32
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
          - !<!SchemaResponse> 
            schema: *ref_32
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: xml
                mediaTypes:
                  - application/xml
                  - text/xml
                statusCodes:
                  - '200'
        exceptions:
          - !<!SchemaResponse> 
            schema: *ref_33
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
          - !<!SchemaResponse> 
            schema: *ref_33
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: xml
                mediaTypes:
                  - application/xml
                  - text/xml
                statusCodes:
                  - default
        extensions:
          x-ms-examples:
            Successful ClassifyImage request:
              parameters:
                Content-Type: application/json
                Endpoint: 'https://westus.api.cognitive.microsoft.com'
                Prediction-Key: '{API Key}'
                imageData: multipart-form-data
                projectId: 64b822c5-8082-4b36-a426-27225f4aa18c
                publishedName: MyModel1
              responses:
                '200':
                  body:
                    created: '2019-03-06T02:15:00Z'
                    id: 951098b2-9b69-427b-bddb-d5cb618874e3
                    iteration: fe1e83c4-6f50-4899-9544-6bb08cf0e15a
                    predictions:
                      - probability: 0.05149666
                        tagId: e31ff107-5505-4753-be42-b369b21b026c
                        tagName: Hemlock
                      - probability: 0.000193528482
                        tagId: 349d72ac-0948-4d51-b1e4-c14a1f9b848a
                        tagName: Japanese Cherry
                    project: 64b822c5-8082-4b36-a426-27225f4aa18c
                  headers: {}
        language: !<!Languages> 
          default:
            name: ClassifyImage
            description: Classify an image and saves the result.
            summary: Classify an image and saves the result.
        protocol: !<!Protocols> {}
      - !<!Operation> 
        apiVersions:
          - !<!ApiVersion> 
            version: '3.1'
        parameters:
          - *ref_23
          - !<!Parameter> &ref_35
            schema: *ref_24
            implementation: Method
            required: true
            language: !<!Languages> 
              default:
                name: projectId
                description: The project id.
                serializedName: projectId
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: path
          - !<!Parameter> &ref_36
            schema: *ref_25
            implementation: Method
            required: true
            language: !<!Languages> 
              default:
                name: publishedName
                description: Specifies the name of the model to evaluate against.
                serializedName: publishedName
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: path
          - !<!Parameter> &ref_37
            schema: *ref_25
            implementation: Method
            language: !<!Languages> 
              default:
                name: application
                description: Optional. Specifies the name of application using the endpoint.
                serializedName: application
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: query
        requests:
          - !<!Request> 
            parameters:
              - !<!Parameter> 
                schema: *ref_26
                implementation: Method
                origin: 'modelerfour:synthesized/content-type'
                required: true
                language: !<!Languages> 
                  default:
                    name: contentType
                    description: Body Parameter content-type
                    serializedName: Content-Type
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: header
              - !<!Parameter> &ref_34
                schema: *ref_19
                implementation: Method
                required: true
                language: !<!Languages> 
                  default:
                    name: imageData
                    description: 'Binary image data. Supported formats are JPEG, GIF, PNG, and BMP. Supports images up to 4MB.'
                    serializedName: imageData
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: body
              - !<!Parameter> 
                schema: *ref_27
                implementation: Method
                origin: 'modelerfour:synthesized/accept'
                required: true
                language: !<!Languages> 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: header
            signatureParameters:
              - *ref_34
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpMultipartRequest> 
                path: '/{projectId}/classify/iterations/{publishedName}/image/nostore'
                method: post
                knownMediaType: multipart
                mediaTypes:
                  - multipart/form-data
                multipart: true
                uri: '{Endpoint}/customvision/v3.1/prediction'
        signatureParameters:
          - *ref_35
          - *ref_36
          - *ref_37
        responses:
          - !<!SchemaResponse> 
            schema: *ref_32
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
          - !<!SchemaResponse> 
            schema: *ref_32
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: xml
                mediaTypes:
                  - application/xml
                  - text/xml
                statusCodes:
                  - '200'
        exceptions:
          - !<!SchemaResponse> 
            schema: *ref_33
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
          - !<!SchemaResponse> 
            schema: *ref_33
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: xml
                mediaTypes:
                  - application/xml
                  - text/xml
                statusCodes:
                  - default
        extensions:
          x-ms-examples:
            Successful ClassifyImageWithNoStore request:
              parameters:
                Content-Type: application/json
                Endpoint: 'https://westus.api.cognitive.microsoft.com'
                Prediction-Key: '{API Key}'
                imageData: multipart-form-data
                projectId: 64b822c5-8082-4b36-a426-27225f4aa18c
                publishedName: MyModel1
              responses:
                '200':
                  body:
                    created: '2019-03-06T02:15:00Z'
                    id: 951098b2-9b69-427b-bddb-d5cb618874e3
                    iteration: fe1e83c4-6f50-4899-9544-6bb08cf0e15a
                    predictions:
                      - probability: 0.05149666
                        tagId: e31ff107-5505-4753-be42-b369b21b026c
                        tagName: Hemlock
                      - probability: 0.000193528482
                        tagId: 349d72ac-0948-4d51-b1e4-c14a1f9b848a
                        tagName: Japanese Cherry
                    project: 64b822c5-8082-4b36-a426-27225f4aa18c
                  headers: {}
        language: !<!Languages> 
          default:
            name: ClassifyImageWithNoStore
            description: Classify an image without saving the result.
            summary: Classify an image without saving the result.
        protocol: !<!Protocols> {}
      - !<!Operation> 
        apiVersions:
          - !<!ApiVersion> 
            version: '3.1'
        parameters:
          - *ref_23
          - !<!Parameter> &ref_41
            schema: *ref_24
            implementation: Method
            required: true
            language: !<!Languages> 
              default:
                name: projectId
                description: The project id.
                serializedName: projectId
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: path
          - !<!Parameter> &ref_42
            schema: *ref_25
            implementation: Method
            required: true
            language: !<!Languages> 
              default:
                name: publishedName
                description: Specifies the name of the model to evaluate against.
                serializedName: publishedName
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: path
          - !<!Parameter> &ref_43
            schema: *ref_25
            implementation: Method
            language: !<!Languages> 
              default:
                name: application
                description: Optional. Specifies the name of application using the endpoint.
                serializedName: application
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: query
        requests:
          - !<!Request> 
            parameters:
              - !<!Parameter> 
                schema: *ref_38
                implementation: Method
                origin: 'modelerfour:synthesized/content-type'
                required: true
                language: !<!Languages> 
                  default:
                    name: contentType
                    description: Body Parameter content-type
                    serializedName: Content-Type
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: header
              - !<!Parameter> &ref_40
                schema: *ref_39
                implementation: Method
                required: true
                language: !<!Languages> 
                  default:
                    name: imageUrl
                    description: An ImageUrl that contains the url of the image to be evaluated.
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: body
                    style: json
              - !<!Parameter> 
                schema: *ref_27
                implementation: Method
                origin: 'modelerfour:synthesized/accept'
                required: true
                language: !<!Languages> 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: header
            signatureParameters:
              - *ref_40
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpWithBodyRequest> 
                path: '/{projectId}/classify/iterations/{publishedName}/url'
                method: post
                knownMediaType: json
                mediaTypes:
                  - application/json
                uri: '{Endpoint}/customvision/v3.1/prediction'
        signatureParameters:
          - *ref_41
          - *ref_42
          - *ref_43
        responses:
          - !<!SchemaResponse> 
            schema: *ref_32
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
          - !<!SchemaResponse> 
            schema: *ref_32
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: xml
                mediaTypes:
                  - application/xml
                  - text/xml
                statusCodes:
                  - '200'
        exceptions:
          - !<!SchemaResponse> 
            schema: *ref_33
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
          - !<!SchemaResponse> 
            schema: *ref_33
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: xml
                mediaTypes:
                  - application/xml
                  - text/xml
                statusCodes:
                  - default
        extensions:
          x-ms-examples:
            Successful ClassifyImageUrl request:
              parameters:
                Content-Type: application/json
                Endpoint: 'https://westus.api.cognitive.microsoft.com'
                Prediction-Key: '{API Key}'
                imageUrl:
                  url: '{Image URL}'
                projectId: 64b822c5-8082-4b36-a426-27225f4aa18c
                publishedName: MyModel1
              responses:
                '200':
                  body:
                    created: '2019-03-06T02:15:00Z'
                    id: 951098b2-9b69-427b-bddb-d5cb618874e3
                    iteration: fe1e83c4-6f50-4899-9544-6bb08cf0e15a
                    predictions:
                      - probability: 0.05149666
                        tagId: e31ff107-5505-4753-be42-b369b21b026c
                        tagName: Hemlock
                      - probability: 0.000193528482
                        tagId: 349d72ac-0948-4d51-b1e4-c14a1f9b848a
                        tagName: Japanese Cherry
                    project: 64b822c5-8082-4b36-a426-27225f4aa18c
                  headers: {}
        language: !<!Languages> 
          default:
            name: ClassifyImageUrl
            description: Classify an image url and saves the result.
            summary: Classify an image url and saves the result.
        protocol: !<!Protocols> {}
      - !<!Operation> 
        apiVersions:
          - !<!ApiVersion> 
            version: '3.1'
        parameters:
          - *ref_23
          - !<!Parameter> &ref_45
            schema: *ref_24
            implementation: Method
            required: true
            language: !<!Languages> 
              default:
                name: projectId
                description: The project id.
                serializedName: projectId
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: path
          - !<!Parameter> &ref_46
            schema: *ref_25
            implementation: Method
            required: true
            language: !<!Languages> 
              default:
                name: publishedName
                description: Specifies the name of the model to evaluate against.
                serializedName: publishedName
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: path
          - !<!Parameter> &ref_47
            schema: *ref_25
            implementation: Method
            language: !<!Languages> 
              default:
                name: application
                description: Optional. Specifies the name of application using the endpoint.
                serializedName: application
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: query
        requests:
          - !<!Request> 
            parameters:
              - !<!Parameter> 
                schema: *ref_38
                implementation: Method
                origin: 'modelerfour:synthesized/content-type'
                required: true
                language: !<!Languages> 
                  default:
                    name: contentType
                    description: Body Parameter content-type
                    serializedName: Content-Type
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: header
              - !<!Parameter> &ref_44
                schema: *ref_39
                implementation: Method
                required: true
                language: !<!Languages> 
                  default:
                    name: imageUrl
                    description: 'An {Iris.Web.Api.Models.ImageUrl} that contains the url of the image to be evaluated.'
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: body
                    style: json
              - !<!Parameter> 
                schema: *ref_27
                implementation: Method
                origin: 'modelerfour:synthesized/accept'
                required: true
                language: !<!Languages> 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: header
            signatureParameters:
              - *ref_44
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpWithBodyRequest> 
                path: '/{projectId}/classify/iterations/{publishedName}/url/nostore'
                method: post
                knownMediaType: json
                mediaTypes:
                  - application/json
                uri: '{Endpoint}/customvision/v3.1/prediction'
        signatureParameters:
          - *ref_45
          - *ref_46
          - *ref_47
        responses:
          - !<!SchemaResponse> 
            schema: *ref_32
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
          - !<!SchemaResponse> 
            schema: *ref_32
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: xml
                mediaTypes:
                  - application/xml
                  - text/xml
                statusCodes:
                  - '200'
        exceptions:
          - !<!SchemaResponse> 
            schema: *ref_33
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
          - !<!SchemaResponse> 
            schema: *ref_33
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: xml
                mediaTypes:
                  - application/xml
                  - text/xml
                statusCodes:
                  - default
        extensions:
          x-ms-examples:
            Successful ClassifyImageUrlWithNoStore request:
              parameters:
                Content-Type: application/json
                Endpoint: 'https://westus.api.cognitive.microsoft.com'
                Prediction-Key: '{API Key}'
                imageUrl:
                  url: '{Image URL}'
                projectId: 64b822c5-8082-4b36-a426-27225f4aa18c
                publishedName: MyModel1
              responses:
                '200':
                  body:
                    created: '2019-03-06T02:15:00Z'
                    id: 951098b2-9b69-427b-bddb-d5cb618874e3
                    iteration: fe1e83c4-6f50-4899-9544-6bb08cf0e15a
                    predictions:
                      - probability: 0.05149666
                        tagId: e31ff107-5505-4753-be42-b369b21b026c
                        tagName: Hemlock
                      - probability: 0.000193528482
                        tagId: 349d72ac-0948-4d51-b1e4-c14a1f9b848a
                        tagName: Japanese Cherry
                    project: 64b822c5-8082-4b36-a426-27225f4aa18c
                  headers: {}
        language: !<!Languages> 
          default:
            name: ClassifyImageUrlWithNoStore
            description: Classify an image url without saving the result.
            summary: Classify an image url without saving the result.
        protocol: !<!Protocols> {}
      - !<!Operation> 
        apiVersions:
          - !<!ApiVersion> 
            version: '3.1'
        parameters:
          - *ref_23
          - !<!Parameter> &ref_49
            schema: *ref_24
            implementation: Method
            required: true
            language: !<!Languages> 
              default:
                name: projectId
                description: The project id.
                serializedName: projectId
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: path
          - !<!Parameter> &ref_50
            schema: *ref_25
            implementation: Method
            required: true
            language: !<!Languages> 
              default:
                name: publishedName
                description: Specifies the name of the model to evaluate against.
                serializedName: publishedName
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: path
          - !<!Parameter> &ref_51
            schema: *ref_25
            implementation: Method
            language: !<!Languages> 
              default:
                name: application
                description: Optional. Specifies the name of application using the endpoint.
                serializedName: application
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: query
        requests:
          - !<!Request> 
            parameters:
              - !<!Parameter> 
                schema: *ref_26
                implementation: Method
                origin: 'modelerfour:synthesized/content-type'
                required: true
                language: !<!Languages> 
                  default:
                    name: contentType
                    description: Body Parameter content-type
                    serializedName: Content-Type
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: header
              - !<!Parameter> &ref_48
                schema: *ref_20
                implementation: Method
                required: true
                language: !<!Languages> 
                  default:
                    name: imageData
                    description: 'Binary image data. Supported formats are JPEG, GIF, PNG, and BMP. Supports images up to 4MB.'
                    serializedName: imageData
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: body
              - !<!Parameter> 
                schema: *ref_27
                implementation: Method
                origin: 'modelerfour:synthesized/accept'
                required: true
                language: !<!Languages> 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: header
            signatureParameters:
              - *ref_48
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpMultipartRequest> 
                path: '/{projectId}/detect/iterations/{publishedName}/image'
                method: post
                knownMediaType: multipart
                mediaTypes:
                  - multipart/form-data
                multipart: true
                uri: '{Endpoint}/customvision/v3.1/prediction'
        signatureParameters:
          - *ref_49
          - *ref_50
          - *ref_51
        responses:
          - !<!SchemaResponse> 
            schema: *ref_32
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
          - !<!SchemaResponse> 
            schema: *ref_32
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: xml
                mediaTypes:
                  - application/xml
                  - text/xml
                statusCodes:
                  - '200'
        exceptions:
          - !<!SchemaResponse> 
            schema: *ref_33
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
          - !<!SchemaResponse> 
            schema: *ref_33
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: xml
                mediaTypes:
                  - application/xml
                  - text/xml
                statusCodes:
                  - default
        extensions:
          x-ms-examples:
            Successful DetectImage request:
              parameters:
                Content-Type: application/json
                Endpoint: 'https://westus.api.cognitive.microsoft.com'
                Prediction-Key: '{API Key}'
                imageData: multipart-form-data
                projectId: 64b822c5-8082-4b36-a426-27225f4aa18c
                publishedName: MyModel1
              responses:
                '200':
                  body:
                    created: '2019-03-10T06:10:28Z'
                    id: 64615ba1-b53f-e911-b05b-f8633f7a2ef1
                    iteration: 45c79472-7198-46e1-8ed7-bad2ca111957
                    predictions:
                      - boundingBox:
                          height: 0.156851858
                          left: 0.955476165
                          top: 0
                          width: 0.0412225723
                        probability: 0.05149666
                        tagId: 7e703b80-3c7a-4c3c-bf48-9673c6891a75
                        tagName: Tag 1
                      - boundingBox:
                          height: 0.6830492
                          left: 0.062178582
                          top: 0
                          width: 0.9378114
                        probability: 0.000193528482
                        tagId: a0d06a54-18e4-4787-a9f9-27a9c13a91e8
                        tagName: Tag 2
                    project: fb5bc587-b53f-e911-b05b-f8633f7a2ef1
                  headers: {}
        language: !<!Languages> 
          default:
            name: DetectImage
            description: Detect objects in an image and saves the result.
            summary: Detect objects in an image and saves the result.
        protocol: !<!Protocols> {}
      - !<!Operation> 
        apiVersions:
          - !<!ApiVersion> 
            version: '3.1'
        parameters:
          - *ref_23
          - !<!Parameter> &ref_53
            schema: *ref_24
            implementation: Method
            required: true
            language: !<!Languages> 
              default:
                name: projectId
                description: The project id.
                serializedName: projectId
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: path
          - !<!Parameter> &ref_54
            schema: *ref_25
            implementation: Method
            required: true
            language: !<!Languages> 
              default:
                name: publishedName
                description: Specifies the name of the model to evaluate against.
                serializedName: publishedName
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: path
          - !<!Parameter> &ref_55
            schema: *ref_25
            implementation: Method
            language: !<!Languages> 
              default:
                name: application
                description: Optional. Specifies the name of application using the endpoint.
                serializedName: application
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: query
        requests:
          - !<!Request> 
            parameters:
              - !<!Parameter> 
                schema: *ref_26
                implementation: Method
                origin: 'modelerfour:synthesized/content-type'
                required: true
                language: !<!Languages> 
                  default:
                    name: contentType
                    description: Body Parameter content-type
                    serializedName: Content-Type
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: header
              - !<!Parameter> &ref_52
                schema: *ref_21
                implementation: Method
                required: true
                language: !<!Languages> 
                  default:
                    name: imageData
                    description: 'Binary image data. Supported formats are JPEG, GIF, PNG, and BMP. Supports images up to 4MB.'
                    serializedName: imageData
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: body
              - !<!Parameter> 
                schema: *ref_27
                implementation: Method
                origin: 'modelerfour:synthesized/accept'
                required: true
                language: !<!Languages> 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: header
            signatureParameters:
              - *ref_52
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpMultipartRequest> 
                path: '/{projectId}/detect/iterations/{publishedName}/image/nostore'
                method: post
                knownMediaType: multipart
                mediaTypes:
                  - multipart/form-data
                multipart: true
                uri: '{Endpoint}/customvision/v3.1/prediction'
        signatureParameters:
          - *ref_53
          - *ref_54
          - *ref_55
        responses:
          - !<!SchemaResponse> 
            schema: *ref_32
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
          - !<!SchemaResponse> 
            schema: *ref_32
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: xml
                mediaTypes:
                  - application/xml
                  - text/xml
                statusCodes:
                  - '200'
        exceptions:
          - !<!SchemaResponse> 
            schema: *ref_33
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
          - !<!SchemaResponse> 
            schema: *ref_33
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: xml
                mediaTypes:
                  - application/xml
                  - text/xml
                statusCodes:
                  - default
        extensions:
          x-ms-examples:
            Successful DetectImageWithNoStore request:
              parameters:
                Content-Type: application/json
                Endpoint: 'https://westus.api.cognitive.microsoft.com'
                Prediction-Key: '{API Key}'
                imageData: multipart-form-data
                projectId: 64b822c5-8082-4b36-a426-27225f4aa18c
                publishedName: MyModel1
              responses:
                '200':
                  body:
                    created: '2019-03-10T06:10:28Z'
                    id: 64615ba1-b53f-e911-b05b-f8633f7a2ef1
                    iteration: 45c79472-7198-46e1-8ed7-bad2ca111957
                    predictions:
                      - boundingBox:
                          height: 0.156851858
                          left: 0.955476165
                          top: 0
                          width: 0.0412225723
                        probability: 0.05149666
                        tagId: 7e703b80-3c7a-4c3c-bf48-9673c6891a75
                        tagName: Tag 1
                      - boundingBox:
                          height: 0.6830492
                          left: 0.062178582
                          top: 0
                          width: 0.9378114
                        probability: 0.000193528482
                        tagId: a0d06a54-18e4-4787-a9f9-27a9c13a91e8
                        tagName: Tag 2
                    project: fb5bc587-b53f-e911-b05b-f8633f7a2ef1
                  headers: {}
        language: !<!Languages> 
          default:
            name: DetectImageWithNoStore
            description: Detect objects in an image without saving the result.
            summary: Detect objects in an image without saving the result.
        protocol: !<!Protocols> {}
      - !<!Operation> 
        apiVersions:
          - !<!ApiVersion> 
            version: '3.1'
        parameters:
          - *ref_23
          - !<!Parameter> &ref_57
            schema: *ref_24
            implementation: Method
            required: true
            language: !<!Languages> 
              default:
                name: projectId
                description: The project id.
                serializedName: projectId
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: path
          - !<!Parameter> &ref_58
            schema: *ref_25
            implementation: Method
            required: true
            language: !<!Languages> 
              default:
                name: publishedName
                description: Specifies the name of the model to evaluate against.
                serializedName: publishedName
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: path
          - !<!Parameter> &ref_59
            schema: *ref_25
            implementation: Method
            language: !<!Languages> 
              default:
                name: application
                description: Optional. Specifies the name of application using the endpoint.
                serializedName: application
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: query
        requests:
          - !<!Request> 
            parameters:
              - !<!Parameter> 
                schema: *ref_38
                implementation: Method
                origin: 'modelerfour:synthesized/content-type'
                required: true
                language: !<!Languages> 
                  default:
                    name: contentType
                    description: Body Parameter content-type
                    serializedName: Content-Type
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: header
              - !<!Parameter> &ref_56
                schema: *ref_39
                implementation: Method
                required: true
                language: !<!Languages> 
                  default:
                    name: imageUrl
                    description: An ImageUrl that contains the url of the image to be evaluated.
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: body
                    style: json
              - !<!Parameter> 
                schema: *ref_27
                implementation: Method
                origin: 'modelerfour:synthesized/accept'
                required: true
                language: !<!Languages> 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: header
            signatureParameters:
              - *ref_56
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpWithBodyRequest> 
                path: '/{projectId}/detect/iterations/{publishedName}/url'
                method: post
                knownMediaType: json
                mediaTypes:
                  - application/json
                uri: '{Endpoint}/customvision/v3.1/prediction'
        signatureParameters:
          - *ref_57
          - *ref_58
          - *ref_59
        responses:
          - !<!SchemaResponse> 
            schema: *ref_32
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
          - !<!SchemaResponse> 
            schema: *ref_32
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: xml
                mediaTypes:
                  - application/xml
                  - text/xml
                statusCodes:
                  - '200'
        exceptions:
          - !<!SchemaResponse> 
            schema: *ref_33
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
          - !<!SchemaResponse> 
            schema: *ref_33
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: xml
                mediaTypes:
                  - application/xml
                  - text/xml
                statusCodes:
                  - default
        extensions:
          x-ms-examples:
            Successful DetectImageUrl request:
              parameters:
                Content-Type: application/json
                Endpoint: 'https://westus.api.cognitive.microsoft.com'
                Prediction-Key: '{API Key}'
                imageUrl:
                  url: '{Image URL}'
                projectId: 64b822c5-8082-4b36-a426-27225f4aa18c
                publishedName: MyModel1
              responses:
                '200':
                  body:
                    created: '2019-03-10T06:10:28Z'
                    id: 64615ba1-b53f-e911-b05b-f8633f7a2ef1
                    iteration: 45c79472-7198-46e1-8ed7-bad2ca111957
                    predictions:
                      - boundingBox:
                          height: 0.156851858
                          left: 0.955476165
                          top: 0
                          width: 0.0412225723
                        probability: 0.05149666
                        tagId: 7e703b80-3c7a-4c3c-bf48-9673c6891a75
                        tagName: Tag 1
                      - boundingBox:
                          height: 0.6830492
                          left: 0.062178582
                          top: 0
                          width: 0.9378114
                        probability: 0.000193528482
                        tagId: a0d06a54-18e4-4787-a9f9-27a9c13a91e8
                        tagName: Tag 2
                    project: fb5bc587-b53f-e911-b05b-f8633f7a2ef1
                  headers: {}
        language: !<!Languages> 
          default:
            name: DetectImageUrl
            description: Detect objects in an image url and saves the result.
            summary: Detect objects in an image url and saves the result.
        protocol: !<!Protocols> {}
      - !<!Operation> 
        apiVersions:
          - !<!ApiVersion> 
            version: '3.1'
        parameters:
          - *ref_23
          - !<!Parameter> &ref_61
            schema: *ref_24
            implementation: Method
            required: true
            language: !<!Languages> 
              default:
                name: projectId
                description: The project id.
                serializedName: projectId
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: path
          - !<!Parameter> &ref_62
            schema: *ref_25
            implementation: Method
            required: true
            language: !<!Languages> 
              default:
                name: publishedName
                description: Specifies the name of the model to evaluate against.
                serializedName: publishedName
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: path
          - !<!Parameter> &ref_63
            schema: *ref_25
            implementation: Method
            language: !<!Languages> 
              default:
                name: application
                description: Optional. Specifies the name of application using the endpoint.
                serializedName: application
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: query
        requests:
          - !<!Request> 
            parameters:
              - !<!Parameter> 
                schema: *ref_38
                implementation: Method
                origin: 'modelerfour:synthesized/content-type'
                required: true
                language: !<!Languages> 
                  default:
                    name: contentType
                    description: Body Parameter content-type
                    serializedName: Content-Type
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: header
              - !<!Parameter> &ref_60
                schema: *ref_39
                implementation: Method
                required: true
                language: !<!Languages> 
                  default:
                    name: imageUrl
                    description: 'An {Iris.Web.Api.Models.ImageUrl} that contains the url of the image to be evaluated.'
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: body
                    style: json
              - !<!Parameter> 
                schema: *ref_27
                implementation: Method
                origin: 'modelerfour:synthesized/accept'
                required: true
                language: !<!Languages> 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: header
            signatureParameters:
              - *ref_60
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpWithBodyRequest> 
                path: '/{projectId}/detect/iterations/{publishedName}/url/nostore'
                method: post
                knownMediaType: json
                mediaTypes:
                  - application/json
                uri: '{Endpoint}/customvision/v3.1/prediction'
        signatureParameters:
          - *ref_61
          - *ref_62
          - *ref_63
        responses:
          - !<!SchemaResponse> 
            schema: *ref_32
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
          - !<!SchemaResponse> 
            schema: *ref_32
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: xml
                mediaTypes:
                  - application/xml
                  - text/xml
                statusCodes:
                  - '200'
        exceptions:
          - !<!SchemaResponse> 
            schema: *ref_33
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
          - !<!SchemaResponse> 
            schema: *ref_33
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: xml
                mediaTypes:
                  - application/xml
                  - text/xml
                statusCodes:
                  - default
        extensions:
          x-ms-examples:
            Successful DetectImageUrlWithNoStore request:
              parameters:
                Content-Type: application/json
                Endpoint: 'https://westus.api.cognitive.microsoft.com'
                Prediction-Key: '{API Key}'
                imageUrl:
                  url: '{Image URL}'
                projectId: 64b822c5-8082-4b36-a426-27225f4aa18c
                publishedName: MyModel1
              responses:
                '200':
                  body:
                    created: '2019-03-10T06:10:28Z'
                    id: 64615ba1-b53f-e911-b05b-f8633f7a2ef1
                    iteration: 45c79472-7198-46e1-8ed7-bad2ca111957
                    predictions:
                      - boundingBox:
                          height: 0.156851858
                          left: 0.955476165
                          top: 0
                          width: 0.0412225723
                        probability: 0.05149666
                        tagId: 7e703b80-3c7a-4c3c-bf48-9673c6891a75
                        tagName: Tag 1
                      - boundingBox:
                          height: 0.6830492
                          left: 0.062178582
                          top: 0
                          width: 0.9378114
                        probability: 0.000193528482
                        tagId: a0d06a54-18e4-4787-a9f9-27a9c13a91e8
                        tagName: Tag 2
                    project: fb5bc587-b53f-e911-b05b-f8633f7a2ef1
                  headers: {}
        language: !<!Languages> 
          default:
            name: DetectImageUrlWithNoStore
            description: Detect objects in an image url without saving the result.
            summary: Detect objects in an image url without saving the result.
        protocol: !<!Protocols> {}
    language: !<!Languages> 
      default:
        name: ''
        description: ''
    protocol: !<!Protocols> {}
security: !<!Security> 
  authenticationRequired: true
language: !<!Languages> 
  default:
    name: ComputerVision
    description: ''
protocol: !<!Protocols> 
  http: !<!HttpModel> {}
