!<!CodeModel> 
info: !<!Info> 
  description: >-
    The Computer Vision API provides state-of-the-art algorithms to process images and return information. For example, it can be used to determine if an image contains mature content, or it can be used to find all the faces in an image. 
    It also has other features like estimating dominant and accent colors, categorizing the content of images, and describing an image with complete English sentences.  Additionally, it can also intelligently generate images thumbnails for
    displaying large images effectively.
  title: ComputerVision
schemas: !<!Schemas> 
  booleans:
    - !<!BooleanSchema> &ref_12
      type: boolean
      language: !<!Languages> 
        default:
          name: Boolean
          description: A value indicating if the image contains adult-oriented content.
      protocol: !<!Protocols> {}
    - !<!BooleanSchema> &ref_13
      type: boolean
      language: !<!Languages> 
        default:
          name: Boolean
          description: A value indicating if the image is racy.
      protocol: !<!Protocols> {}
    - !<!BooleanSchema> &ref_14
      type: boolean
      language: !<!Languages> 
        default:
          name: Boolean
          description: A value indicating if the image is gory.
      protocol: !<!Protocols> {}
    - !<!BooleanSchema> &ref_22
      type: boolean
      language: !<!Languages> 
        default:
          name: Boolean
          description: A value indicating if the image is black and white.
      protocol: !<!Protocols> {}
    - !<!BooleanSchema> &ref_143
      type: boolean
      apiVersions:
        - !<!ApiVersion> 
          version: '3.0'
      defaultValue: true
      language: !<!Languages> 
        default:
          name: Boolean
          description: ''
      protocol: !<!Protocols> {}
    - !<!BooleanSchema> &ref_155
      type: boolean
      apiVersions:
        - !<!ApiVersion> 
          version: '3.0'
      defaultValue: false
      language: !<!Languages> 
        default:
          name: Boolean
          description: ''
      protocol: !<!Protocols> {}
  numbers:
    - !<!NumberSchema> &ref_3
      type: number
      precision: 64
      language: !<!Languages> 
        default:
          name: Number
          description: Scoring of the category.
      protocol: !<!Protocols> {}
    - !<!NumberSchema> &ref_5
      type: number
      precision: 64
      language: !<!Languages> 
        default:
          name: Number
          description: Confidence level for the celebrity recognition as a value ranging from 0 to 1.
      protocol: !<!Protocols> {}
    - !<!NumberSchema> &ref_6
      type: integer
      precision: 32
      language: !<!Languages> 
        default:
          name: Integer
          description: 'X-coordinate of the top left point of the face, in pixels.'
      protocol: !<!Protocols> {}
    - !<!NumberSchema> &ref_7
      type: integer
      precision: 32
      language: !<!Languages> 
        default:
          name: Integer
          description: 'Y-coordinate of the top left point of the face, in pixels.'
      protocol: !<!Protocols> {}
    - !<!NumberSchema> &ref_8
      type: integer
      precision: 32
      language: !<!Languages> 
        default:
          name: Integer
          description: 'Width measured from the top-left point of the face, in pixels.'
      protocol: !<!Protocols> {}
    - !<!NumberSchema> &ref_9
      type: integer
      precision: 32
      language: !<!Languages> 
        default:
          name: Integer
          description: 'Height measured from the top-left point of the face, in pixels.'
      protocol: !<!Protocols> {}
    - !<!NumberSchema> &ref_11
      type: number
      precision: 64
      language: !<!Languages> 
        default:
          name: Number
          description: Confidence level for the landmark recognition as a value ranging from 0 to 1.
      protocol: !<!Protocols> {}
    - !<!NumberSchema> &ref_15
      type: number
      precision: 64
      language: !<!Languages> 
        default:
          name: Number
          description: Score from 0 to 1 that indicates how much the content is considered adult-oriented within the image.
      protocol: !<!Protocols> {}
    - !<!NumberSchema> &ref_16
      type: number
      precision: 64
      language: !<!Languages> 
        default:
          name: Number
          description: Score from 0 to 1 that indicates how suggestive is the image.
      protocol: !<!Protocols> {}
    - !<!NumberSchema> &ref_17
      type: number
      precision: 64
      language: !<!Languages> 
        default:
          name: Number
          description: Score from 0 to 1 that indicates how gory is the image.
      protocol: !<!Protocols> {}
    - !<!NumberSchema> &ref_23
      type: integer
      precision: 32
      language: !<!Languages> 
        default:
          name: Integer
          description: Confidence level that the image is a clip art.
      protocol: !<!Protocols> {}
    - !<!NumberSchema> &ref_24
      type: integer
      precision: 32
      language: !<!Languages> 
        default:
          name: Integer
          description: Confidence level that the image is a line drawing.
      protocol: !<!Protocols> {}
    - !<!NumberSchema> &ref_26
      type: number
      precision: 64
      language: !<!Languages> 
        default:
          name: Number
          description: The level of confidence that the entity was observed.
      protocol: !<!Protocols> {}
    - !<!NumberSchema> &ref_30
      type: number
      precision: 64
      language: !<!Languages> 
        default:
          name: Number
          description: The level of confidence the service has in the caption.
      protocol: !<!Protocols> {}
    - !<!NumberSchema> &ref_31
      type: integer
      precision: 32
      language: !<!Languages> 
        default:
          name: Integer
          description: Possible age of the face.
      protocol: !<!Protocols> {}
    - !<!NumberSchema> &ref_34
      type: integer
      precision: 32
      language: !<!Languages> 
        default:
          name: Integer
          description: 'X-coordinate of the top left point of the area, in pixels.'
      protocol: !<!Protocols> {}
    - !<!NumberSchema> &ref_35
      type: integer
      precision: 32
      language: !<!Languages> 
        default:
          name: Integer
          description: 'Y-coordinate of the top left point of the area, in pixels.'
      protocol: !<!Protocols> {}
    - !<!NumberSchema> &ref_36
      type: integer
      precision: 32
      language: !<!Languages> 
        default:
          name: Integer
          description: 'Width measured from the top-left point of the area, in pixels.'
      protocol: !<!Protocols> {}
    - !<!NumberSchema> &ref_37
      type: integer
      precision: 32
      language: !<!Languages> 
        default:
          name: Integer
          description: 'Height measured from the top-left point of the area, in pixels.'
      protocol: !<!Protocols> {}
    - !<!NumberSchema> &ref_39
      type: number
      precision: 64
      language: !<!Languages> 
        default:
          name: Number
          description: 'Confidence score of having observed the object in the image, as a value ranging from 0 to 1.'
      protocol: !<!Protocols> {}
    - !<!NumberSchema> &ref_43
      type: number
      precision: 64
      language: !<!Languages> 
        default:
          name: Number
          description: 'Confidence score of having observed the brand in the image, as a value ranging from 0 to 1.'
      protocol: !<!Protocols> {}
    - !<!NumberSchema> &ref_46
      type: integer
      precision: 32
      language: !<!Languages> 
        default:
          name: Integer
          description: 'Image width, in pixels.'
      protocol: !<!Protocols> {}
    - !<!NumberSchema> &ref_47
      type: integer
      precision: 32
      language: !<!Languages> 
        default:
          name: Integer
          description: 'Image height, in pixels.'
      protocol: !<!Protocols> {}
    - !<!NumberSchema> &ref_126
      type: integer
      apiVersions:
        - !<!ApiVersion> 
          version: '3.0'
      defaultValue: 1
      precision: 32
      language: !<!Languages> 
        default:
          name: Integer
          description: ''
      protocol: !<!Protocols> {}
    - !<!NumberSchema> &ref_76
      type: number
      precision: 64
      language: !<!Languages> 
        default:
          name: Number
          description: >-
            The angle, in radians, of the detected text with respect to the closest horizontal or vertical direction. After rotating the input image clockwise by this angle, the recognized text lines become horizontal or vertical. In
            combination with the orientation property it can be used to overlay recognition results correctly on the original image, by rotating either the original image or recognition results by a suitable angle around the center of the
            original image. If the angle cannot be confidently detected, this property is not present. If the image contains text at different angles, only part of the text will be recognized correctly.
      protocol: !<!Protocols> {}
    - !<!NumberSchema> &ref_154
      type: integer
      apiVersions:
        - !<!ApiVersion> 
          version: '3.0'
      maximum: 1024
      minimum: 1
      precision: 32
      language: !<!Languages> 
        default:
          name: Integer
          description: ''
      protocol: !<!Protocols> {}
  strings:
    - !<!StringSchema> &ref_0
      type: string
      language: !<!Languages> 
        default:
          name: String
          description: simple string
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_1
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: '3.0'
      language: !<!Languages> 
        default:
          name: ImageUrl
          description: Publicly reachable URL of an image.
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_2
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: '3.0'
      language: !<!Languages> 
        default:
          name: CategoryName
          description: Name of the category.
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_4
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: '3.0'
      language: !<!Languages> 
        default:
          name: CelebritiesModelName
          description: Name of the celebrity.
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_10
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: '3.0'
      language: !<!Languages> 
        default:
          name: LandmarksModelName
          description: Name of the landmark.
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_18
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: '3.0'
      language: !<!Languages> 
        default:
          name: ColorInfoDominantColorForeground
          description: Possible dominant foreground color.
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_19
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: '3.0'
      language: !<!Languages> 
        default:
          name: ColorInfoDominantColorBackground
          description: Possible dominant background color.
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_20
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: '3.0'
      language: !<!Languages> 
        default:
          name: ColorInfoDominantColorsItem
          description: ''
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_21
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: '3.0'
      language: !<!Languages> 
        default:
          name: ColorInfoAccentColor
          description: Possible accent color.
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_25
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: '3.0'
      language: !<!Languages> 
        default:
          name: ImageTagName
          description: Name of the entity.
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_27
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: '3.0'
      language: !<!Languages> 
        default:
          name: ImageTagHint
          description: Optional hint/details for this tag.
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_28
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: '3.0'
      language: !<!Languages> 
        default:
          name: ImageDescriptionDetailsTagsItem
          description: ''
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_29
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: '3.0'
      language: !<!Languages> 
        default:
          name: ImageCaptionText
          description: The text of the caption.
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_38
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: '3.0'
      language: !<!Languages> 
        default:
          name: DetectedObject
          description: Label for the object.
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_40
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: '3.0'
      language: !<!Languages> 
        default:
          name: ObjectHierarchyObject
          description: Label for the object.
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_42
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: '3.0'
      language: !<!Languages> 
        default:
          name: DetectedBrandName
          description: Label for the brand.
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_45
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: '3.0'
      language: !<!Languages> 
        default:
          name: ImageAnalysisRequestId
          description: Id of the REST API request.
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_48
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: '3.0'
      language: !<!Languages> 
        default:
          name: ImageMetadataFormat
          description: Image format.
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_64
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: '3.0'
      language: !<!Languages> 
        default:
          name: ComputerVisionErrorMessage
          description: A message explaining the error reported by the service.
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_65
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: '3.0'
      language: !<!Languages> 
        default:
          name: ComputerVisionErrorRequestId
          description: A unique request identifier.
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_66
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: '3.0'
      language: !<!Languages> 
        default:
          name: ImageDescriptionRequestId
          description: Id of the REST API request.
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_69
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: '3.0'
      language: !<!Languages> 
        default:
          name: DetectResultRequestId
          description: Id of the REST API request.
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_70
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: '3.0'
      language: !<!Languages> 
        default:
          name: ModelDescriptionName
          description: The name of the model.
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_71
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: '3.0'
      language: !<!Languages> 
        default:
          name: ModelDescriptionCategoriesItem
          description: ''
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_137
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: '3.0'
      language: !<!Languages> 
        default:
          name: String
          description: ''
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_74
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: '3.0'
      language: !<!Languages> 
        default:
          name: DomainModelResultsRequestId
          description: Id of the REST API request.
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_75
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: '3.0'
      language: !<!Languages> 
        default:
          name: OcrResultLanguage
          description: The BCP-47 language code of the text in the image.
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_77
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: '3.0'
      language: !<!Languages> 
        default:
          name: OcrResultOrientation
          description: "Orientation of the text recognized in the image, if requested. The value (up, down, left, or right) refers to the direction that the top of the recognized text is facing, after the image has been rotated around its center according to the detected text angle (see textAngle property).\r\nIf detection of the orientation was not requested, or no text is detected, the value is 'NotDetected'."
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_78
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: '3.0'
      language: !<!Languages> 
        default:
          name: OcrRegionBoundingBox
          description: >-
            Bounding box of a recognized region. The four integers represent the x-coordinate of the left edge, the y-coordinate of the top edge, width, and height of the bounding box, in the coordinate system of the input image, after it
            has been rotated around its center according to the detected text angle (see textAngle property), with the origin at the top-left corner, and the y-axis pointing down.
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_79
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: '3.0'
      language: !<!Languages> 
        default:
          name: OcrLineBoundingBox
          description: >-
            Bounding box of a recognized line. The four integers represent the x-coordinate of the left edge, the y-coordinate of the top edge, width, and height of the bounding box, in the coordinate system of the input image, after it has
            been rotated around its center according to the detected text angle (see textAngle property), with the origin at the top-left corner, and the y-axis pointing down.
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_80
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: '3.0'
      language: !<!Languages> 
        default:
          name: OcrWordBoundingBox
          description: >-
            Bounding box of a recognized word. The four integers represent the x-coordinate of the left edge, the y-coordinate of the top edge, width, and height of the bounding box, in the coordinate system of the input image, after it has
            been rotated around its center according to the detected text angle (see textAngle property), with the origin at the top-left corner, and the y-axis pointing down.
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_81
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: '3.0'
      language: !<!Languages> 
        default:
          name: OcrWordText
          description: String value of a recognized word.
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_85
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: '3.0'
      language: !<!Languages> 
        default:
          name: TagResultRequestId
          description: Id of the REST API request.
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_86
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: '3.0'
      language: !<!Languages> 
        default:
          name: AreaOfInterestResultRequestId
          description: Id of the REST API request.
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_87
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: '3.0'
      language: !<!Languages> 
        default:
          name: LandmarkResultsRequestId
          description: Id of the REST API request.
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_88
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: '3.0'
      language: !<!Languages> 
        default:
          name: CelebrityResultsRequestId
          description: Id of the REST API request.
      protocol: !<!Protocols> {}
  choices:
    - !<!ChoiceSchema> &ref_112
      choices:
        - !<!ChoiceValue> 
          value: en
          language:
            default:
              name: En
              description: ''
        - !<!ChoiceValue> 
          value: es
          language:
            default:
              name: Es
              description: ''
        - !<!ChoiceValue> 
          value: ja
          language:
            default:
              name: Ja
              description: ''
        - !<!ChoiceValue> 
          value: pt
          language:
            default:
              name: Pt
              description: ''
        - !<!ChoiceValue> 
          value: zh
          language:
            default:
              name: Zh
              description: ''
      type: choice
      apiVersions:
        - !<!ApiVersion> 
          version: '3.0'
      choiceType: *ref_0
      defaultValue: en
      language: !<!Languages> 
        default:
          name: Enum0
          description: ''
      protocol: !<!Protocols> {}
    - !<!ChoiceSchema> &ref_63
      choices:
        - !<!ChoiceValue> 
          value: InvalidImageFormat
          language:
            default:
              name: InvalidImageFormat
              description: ''
        - !<!ChoiceValue> 
          value: UnsupportedMediaType
          language:
            default:
              name: UnsupportedMediaType
              description: ''
        - !<!ChoiceValue> 
          value: InvalidImageUrl
          language:
            default:
              name: InvalidImageUrl
              description: ''
        - !<!ChoiceValue> 
          value: NotSupportedFeature
          language:
            default:
              name: NotSupportedFeature
              description: ''
        - !<!ChoiceValue> 
          value: NotSupportedImage
          language:
            default:
              name: NotSupportedImage
              description: ''
        - !<!ChoiceValue> 
          value: Timeout
          language:
            default:
              name: Timeout
              description: ''
        - !<!ChoiceValue> 
          value: InternalServerError
          language:
            default:
              name: InternalServerError
              description: ''
        - !<!ChoiceValue> 
          value: InvalidImageSize
          language:
            default:
              name: InvalidImageSize
              description: ''
        - !<!ChoiceValue> 
          value: BadArgument
          language:
            default:
              name: BadArgument
              description: ''
        - !<!ChoiceValue> 
          value: DetectFaceError
          language:
            default:
              name: DetectFaceError
              description: ''
        - !<!ChoiceValue> 
          value: NotSupportedLanguage
          language:
            default:
              name: NotSupportedLanguage
              description: ''
        - !<!ChoiceValue> 
          value: InvalidThumbnailSize
          language:
            default:
              name: InvalidThumbnailSize
              description: ''
        - !<!ChoiceValue> 
          value: InvalidDetails
          language:
            default:
              name: InvalidDetails
              description: ''
        - !<!ChoiceValue> 
          value: InvalidModel
          language:
            default:
              name: InvalidModel
              description: ''
        - !<!ChoiceValue> 
          value: CancelledRequest
          language:
            default:
              name: CancelledRequest
              description: ''
        - !<!ChoiceValue> 
          value: NotSupportedVisualFeature
          language:
            default:
              name: NotSupportedVisualFeature
              description: ''
        - !<!ChoiceValue> 
          value: FailedToProcess
          language:
            default:
              name: FailedToProcess
              description: ''
        - !<!ChoiceValue> 
          value: Unspecified
          language:
            default:
              name: Unspecified
              description: ''
        - !<!ChoiceValue> 
          value: StorageException
          language:
            default:
              name: StorageException
              description: ''
      type: choice
      apiVersions:
        - !<!ApiVersion> 
          version: '3.0'
      choiceType: *ref_0
      extensions:
        x-internal-autorest-anonymous-schema:
          anonymous: true
      language: !<!Languages> 
        default:
          name: ComputerVisionErrorCodes
          description: The error code.
      protocol: !<!Protocols> {}
  sealedChoices:
    - !<!SealedChoiceSchema> &ref_89
      choices:
        - !<!ChoiceValue> 
          value: ImageType
          language:
            default:
              name: ImageType
              description: ''
        - !<!ChoiceValue> 
          value: Faces
          language:
            default:
              name: Faces
              description: ''
        - !<!ChoiceValue> 
          value: Adult
          language:
            default:
              name: Adult
              description: ''
        - !<!ChoiceValue> 
          value: Categories
          language:
            default:
              name: Categories
              description: ''
        - !<!ChoiceValue> 
          value: Color
          language:
            default:
              name: Color
              description: ''
        - !<!ChoiceValue> 
          value: Tags
          language:
            default:
              name: Tags
              description: ''
        - !<!ChoiceValue> 
          value: Description
          language:
            default:
              name: Description
              description: ''
        - !<!ChoiceValue> 
          value: Objects
          language:
            default:
              name: Objects
              description: ''
        - !<!ChoiceValue> 
          value: Brands
          language:
            default:
              name: Brands
              description: ''
      type: sealed-choice
      apiVersions:
        - !<!ApiVersion> 
          version: '3.0'
      choiceType: *ref_0
      language: !<!Languages> 
        default:
          name: VisualFeatureTypes
          description: ''
      protocol: !<!Protocols> {}
    - !<!SealedChoiceSchema> &ref_90
      choices:
        - !<!ChoiceValue> 
          value: Celebrities
          language:
            default:
              name: Celebrities
              description: ''
        - !<!ChoiceValue> 
          value: Landmarks
          language:
            default:
              name: Landmarks
              description: ''
      type: sealed-choice
      apiVersions:
        - !<!ApiVersion> 
          version: '3.0'
      choiceType: *ref_0
      language: !<!Languages> 
        default:
          name: Details
          description: ''
      protocol: !<!Protocols> {}
    - !<!SealedChoiceSchema> &ref_91
      choices:
        - !<!ChoiceValue> 
          value: Celebrities
          language:
            default:
              name: Celebrities
              description: ''
        - !<!ChoiceValue> 
          value: Landmarks
          language:
            default:
              name: Landmarks
              description: ''
      type: sealed-choice
      apiVersions:
        - !<!ApiVersion> 
          version: '3.0'
      choiceType: *ref_0
      language: !<!Languages> 
        default:
          name: DescriptionExclude
          description: ''
      protocol: !<!Protocols> {}
    - !<!SealedChoiceSchema> &ref_32
      choices:
        - !<!ChoiceValue> 
          value: Male
          language:
            default:
              name: Male
              description: ''
        - !<!ChoiceValue> 
          value: Female
          language:
            default:
              name: Female
              description: ''
      type: sealed-choice
      apiVersions:
        - !<!ApiVersion> 
          version: '3.0'
      choiceType: *ref_0
      language: !<!Languages> 
        default:
          name: Gender
          description: Possible gender of the face.
      protocol: !<!Protocols> {}
    - !<!SealedChoiceSchema> &ref_144
      choices:
        - !<!ChoiceValue> 
          value: unk
          language:
            default:
              name: Unk
              description: ''
        - !<!ChoiceValue> 
          value: zh-Hans
          language:
            default:
              name: ZhHans
              description: ''
        - !<!ChoiceValue> 
          value: zh-Hant
          language:
            default:
              name: ZhHant
              description: ''
        - !<!ChoiceValue> 
          value: cs
          language:
            default:
              name: Cs
              description: ''
        - !<!ChoiceValue> 
          value: da
          language:
            default:
              name: Da
              description: ''
        - !<!ChoiceValue> 
          value: nl
          language:
            default:
              name: Nl
              description: ''
        - !<!ChoiceValue> 
          value: en
          language:
            default:
              name: En
              description: ''
        - !<!ChoiceValue> 
          value: fi
          language:
            default:
              name: Fi
              description: ''
        - !<!ChoiceValue> 
          value: fr
          language:
            default:
              name: Fr
              description: ''
        - !<!ChoiceValue> 
          value: de
          language:
            default:
              name: De
              description: ''
        - !<!ChoiceValue> 
          value: el
          language:
            default:
              name: El
              description: ''
        - !<!ChoiceValue> 
          value: hu
          language:
            default:
              name: Hu
              description: ''
        - !<!ChoiceValue> 
          value: it
          language:
            default:
              name: It
              description: ''
        - !<!ChoiceValue> 
          value: ja
          language:
            default:
              name: Ja
              description: ''
        - !<!ChoiceValue> 
          value: ko
          language:
            default:
              name: Ko
              description: ''
        - !<!ChoiceValue> 
          value: nb
          language:
            default:
              name: Nb
              description: ''
        - !<!ChoiceValue> 
          value: pl
          language:
            default:
              name: Pl
              description: ''
        - !<!ChoiceValue> 
          value: pt
          language:
            default:
              name: Pt
              description: ''
        - !<!ChoiceValue> 
          value: ru
          language:
            default:
              name: Ru
              description: ''
        - !<!ChoiceValue> 
          value: es
          language:
            default:
              name: Es
              description: ''
        - !<!ChoiceValue> 
          value: sv
          language:
            default:
              name: Sv
              description: ''
        - !<!ChoiceValue> 
          value: tr
          language:
            default:
              name: Tr
              description: ''
        - !<!ChoiceValue> 
          value: ar
          language:
            default:
              name: Ar
              description: ''
        - !<!ChoiceValue> 
          value: ro
          language:
            default:
              name: Ro
              description: ''
        - !<!ChoiceValue> 
          value: sr-Cyrl
          language:
            default:
              name: SrCyrl
              description: ''
        - !<!ChoiceValue> 
          value: sr-Latn
          language:
            default:
              name: SrLatn
              description: ''
        - !<!ChoiceValue> 
          value: sk
          language:
            default:
              name: Sk
              description: ''
      type: sealed-choice
      apiVersions:
        - !<!ApiVersion> 
          version: '3.0'
      choiceType: *ref_0
      defaultValue: unk
      language: !<!Languages> 
        default:
          name: OcrLanguages
          description: ''
      protocol: !<!Protocols> {}
  constants:
    - !<!ConstantSchema> &ref_114
      type: constant
      value: !<!ConstantValue> 
        value: application/json
      valueType: *ref_0
      language: !<!Languages> 
        default:
          name: ApplicationJson
          description: Content Type 'application/json'
      protocol: !<!Protocols> {}
    - !<!ConstantSchema> &ref_116
      type: constant
      value: !<!ConstantValue> 
        value: application/json
      valueType: *ref_0
      language: !<!Languages> 
        default:
          name: Accept
          description: 'Accept: application/json'
      protocol: !<!Protocols> {}
    - !<!ConstantSchema> &ref_156
      type: constant
      value: !<!ConstantValue> 
        value: application/octet-stream
      valueType: *ref_0
      language: !<!Languages> 
        default:
          name: Accept
          description: 'Accept: application/octet-stream'
      protocol: !<!Protocols> {}
    - !<!ConstantSchema> &ref_166
      type: constant
      value: !<!ConstantValue> 
        value: application/octet-stream
      valueType: *ref_0
      language: !<!Languages> 
        default:
          name: ApplicationOctetStream
          description: Content Type 'application/octet-stream'
      protocol: !<!Protocols> {}
    - !<!ConstantSchema> &ref_169
      type: constant
      value: !<!ConstantValue> 
        value: multipart/form-data
      valueType: *ref_0
      language: !<!Languages> 
        default:
          name: MultipartFormData
          description: Content Type 'multipart/form-data'
      protocol: !<!Protocols> {}
  any:
    - !<!AnySchema> &ref_73
      type: any
      language: !<!Languages> 
        default:
          name: any
          description: Any object
      protocol: !<!Protocols> {}
  binaries:
    - !<!BinarySchema> &ref_167
      type: binary
      apiVersions:
        - !<!ApiVersion> 
          version: '3.0'
      language: !<!Languages> 
        default:
          name: binary
          description: ''
      protocol: !<!Protocols> {}
    - !<!BinarySchema> &ref_174
      type: binary
      apiVersions:
        - !<!ApiVersion> 
          version: '3.0'
      language: !<!Languages> 
        default:
          name: binary
          description: ''
      protocol: !<!Protocols> {}
    - !<!BinarySchema> &ref_176
      type: binary
      apiVersions:
        - !<!ApiVersion> 
          version: '3.0'
      language: !<!Languages> 
        default:
          name: binary
          description: ''
      protocol: !<!Protocols> {}
    - !<!BinarySchema> &ref_181
      type: binary
      apiVersions:
        - !<!ApiVersion> 
          version: '3.0'
      language: !<!Languages> 
        default:
          name: binary
          description: ''
      protocol: !<!Protocols> {}
    - !<!BinarySchema> &ref_183
      type: binary
      apiVersions:
        - !<!ApiVersion> 
          version: '3.0'
      language: !<!Languages> 
        default:
          name: binary
          description: ''
      protocol: !<!Protocols> {}
    - !<!BinarySchema> &ref_188
      type: binary
      apiVersions:
        - !<!ApiVersion> 
          version: '3.0'
      language: !<!Languages> 
        default:
          name: binary
          description: ''
      protocol: !<!Protocols> {}
    - !<!BinarySchema> &ref_192
      type: binary
      apiVersions:
        - !<!ApiVersion> 
          version: '3.0'
      language: !<!Languages> 
        default:
          name: binary
          description: ''
      protocol: !<!Protocols> {}
    - !<!BinarySchema> &ref_196
      type: binary
      apiVersions:
        - !<!ApiVersion> 
          version: '3.0'
      language: !<!Languages> 
        default:
          name: binary
          description: ''
      protocol: !<!Protocols> {}
  objects:
    - !<!ObjectSchema> &ref_115
      type: object
      apiVersions:
        - !<!ApiVersion> 
          version: '3.0'
      properties:
        - !<!Property> &ref_118
          schema: *ref_1
          required: true
          serializedName: url
          language: !<!Languages> 
            default:
              name: url
              description: Publicly reachable URL of an image.
          protocol: !<!Protocols> {}
      serializationFormats:
        - json
      usage:
        - input
      language: !<!Languages> 
        default:
          name: ImageUrl
          description: ''
          namespace: ''
      protocol: !<!Protocols> {}
    - !<!ObjectSchema> &ref_124
      type: object
      apiVersions:
        - !<!ApiVersion> 
          version: '3.0'
      properties:
        - !<!Property> 
          schema: !<!ArraySchema> &ref_94
            type: array
            apiVersions:
              - !<!ApiVersion> 
                version: '3.0'
            elementType: !<!ObjectSchema> &ref_49
              type: object
              apiVersions:
                - !<!ApiVersion> 
                  version: '3.0'
              properties:
                - !<!Property> 
                  schema: *ref_2
                  nullable: true
                  serializedName: name
                  language: !<!Languages> 
                    default:
                      name: name
                      description: Name of the category.
                  protocol: !<!Protocols> {}
                - !<!Property> 
                  schema: *ref_3
                  nullable: false
                  serializedName: score
                  language: !<!Languages> 
                    default:
                      name: score
                      description: Scoring of the category.
                  protocol: !<!Protocols> {}
                - !<!Property> 
                  schema: !<!ObjectSchema> &ref_50
                    type: object
                    apiVersions:
                      - !<!ApiVersion> 
                        version: '3.0'
                    properties:
                      - !<!Property> 
                        schema: !<!ArraySchema> &ref_92
                          type: array
                          apiVersions:
                            - !<!ApiVersion> 
                              version: '3.0'
                          elementType: !<!ObjectSchema> &ref_51
                            type: object
                            apiVersions:
                              - !<!ApiVersion> 
                                version: '3.0'
                            properties:
                              - !<!Property> 
                                schema: *ref_4
                                nullable: true
                                serializedName: name
                                language: !<!Languages> 
                                  default:
                                    name: name
                                    description: Name of the celebrity.
                                protocol: !<!Protocols> {}
                              - !<!Property> 
                                schema: *ref_5
                                nullable: false
                                serializedName: confidence
                                language: !<!Languages> 
                                  default:
                                    name: confidence
                                    description: Confidence level for the celebrity recognition as a value ranging from 0 to 1.
                                protocol: !<!Protocols> {}
                              - !<!Property> 
                                schema: !<!ObjectSchema> &ref_33
                                  type: object
                                  apiVersions:
                                    - !<!ApiVersion> 
                                      version: '3.0'
                                  properties:
                                    - !<!Property> 
                                      schema: *ref_6
                                      nullable: false
                                      serializedName: left
                                      language: !<!Languages> 
                                        default:
                                          name: left
                                          description: 'X-coordinate of the top left point of the face, in pixels.'
                                      protocol: !<!Protocols> {}
                                    - !<!Property> 
                                      schema: *ref_7
                                      nullable: false
                                      serializedName: top
                                      language: !<!Languages> 
                                        default:
                                          name: top
                                          description: 'Y-coordinate of the top left point of the face, in pixels.'
                                      protocol: !<!Protocols> {}
                                    - !<!Property> 
                                      schema: *ref_8
                                      nullable: false
                                      serializedName: width
                                      language: !<!Languages> 
                                        default:
                                          name: width
                                          description: 'Width measured from the top-left point of the face, in pixels.'
                                      protocol: !<!Protocols> {}
                                    - !<!Property> 
                                      schema: *ref_9
                                      nullable: false
                                      serializedName: height
                                      language: !<!Languages> 
                                        default:
                                          name: height
                                          description: 'Height measured from the top-left point of the face, in pixels.'
                                      protocol: !<!Protocols> {}
                                  serializationFormats:
                                    - json
                                  usage:
                                    - output
                                  language: !<!Languages> 
                                    default:
                                      name: FaceRectangle
                                      description: An object describing face rectangle.
                                      namespace: ''
                                  protocol: !<!Protocols> {}
                                nullable: true
                                serializedName: faceRectangle
                                language: !<!Languages> 
                                  default:
                                    name: faceRectangle
                                    description: Location of the identified face in the image.
                                protocol: !<!Protocols> {}
                            serializationFormats:
                              - json
                            usage:
                              - output
                            language: !<!Languages> 
                              default:
                                name: CelebritiesModel
                                description: An object describing possible celebrity identification.
                                namespace: ''
                            protocol: !<!Protocols> {}
                          nullableItems: true
                          language: !<!Languages> 
                            default:
                              name: CategoryDetailCelebrities
                              description: An array of celebrities if any identified.
                          protocol: !<!Protocols> {}
                        nullable: true
                        serializedName: celebrities
                        language: !<!Languages> 
                          default:
                            name: celebrities
                            description: An array of celebrities if any identified.
                        protocol: !<!Protocols> {}
                      - !<!Property> 
                        schema: !<!ArraySchema> &ref_93
                          type: array
                          apiVersions:
                            - !<!ApiVersion> 
                              version: '3.0'
                          elementType: !<!ObjectSchema> &ref_52
                            type: object
                            apiVersions:
                              - !<!ApiVersion> 
                                version: '3.0'
                            properties:
                              - !<!Property> 
                                schema: *ref_10
                                nullable: true
                                serializedName: name
                                language: !<!Languages> 
                                  default:
                                    name: name
                                    description: Name of the landmark.
                                protocol: !<!Protocols> {}
                              - !<!Property> 
                                schema: *ref_11
                                nullable: false
                                serializedName: confidence
                                language: !<!Languages> 
                                  default:
                                    name: confidence
                                    description: Confidence level for the landmark recognition as a value ranging from 0 to 1.
                                protocol: !<!Protocols> {}
                            serializationFormats:
                              - json
                            usage:
                              - output
                            language: !<!Languages> 
                              default:
                                name: LandmarksModel
                                description: A landmark recognized in the image.
                                namespace: ''
                            protocol: !<!Protocols> {}
                          nullableItems: true
                          language: !<!Languages> 
                            default:
                              name: CategoryDetailLandmarks
                              description: An array of landmarks if any identified.
                          protocol: !<!Protocols> {}
                        nullable: true
                        serializedName: landmarks
                        language: !<!Languages> 
                          default:
                            name: landmarks
                            description: An array of landmarks if any identified.
                        protocol: !<!Protocols> {}
                    serializationFormats:
                      - json
                    usage:
                      - output
                    language: !<!Languages> 
                      default:
                        name: CategoryDetail
                        description: An object describing additional category details.
                        namespace: ''
                    protocol: !<!Protocols> {}
                  nullable: true
                  serializedName: detail
                  language: !<!Languages> 
                    default:
                      name: detail
                      description: Details of the identified category.
                  protocol: !<!Protocols> {}
              serializationFormats:
                - json
              usage:
                - output
              language: !<!Languages> 
                default:
                  name: Category
                  description: An object describing identified category.
                  namespace: ''
              protocol: !<!Protocols> {}
            nullableItems: true
            language: !<!Languages> 
              default:
                name: ImageAnalysisCategories
                description: An array indicating identified categories.
            protocol: !<!Protocols> {}
          nullable: true
          serializedName: categories
          language: !<!Languages> 
            default:
              name: categories
              description: An array indicating identified categories.
          protocol: !<!Protocols> {}
        - !<!Property> 
          schema: !<!ObjectSchema> &ref_53
            type: object
            apiVersions:
              - !<!ApiVersion> 
                version: '3.0'
            properties:
              - !<!Property> 
                schema: *ref_12
                nullable: false
                serializedName: isAdultContent
                language: !<!Languages> 
                  default:
                    name: isAdultContent
                    description: A value indicating if the image contains adult-oriented content.
                protocol: !<!Protocols> {}
              - !<!Property> 
                schema: *ref_13
                nullable: false
                serializedName: isRacyContent
                language: !<!Languages> 
                  default:
                    name: isRacyContent
                    description: A value indicating if the image is racy.
                protocol: !<!Protocols> {}
              - !<!Property> 
                schema: *ref_14
                nullable: false
                serializedName: isGoryContent
                language: !<!Languages> 
                  default:
                    name: isGoryContent
                    description: A value indicating if the image is gory.
                protocol: !<!Protocols> {}
              - !<!Property> 
                schema: *ref_15
                nullable: false
                serializedName: adultScore
                language: !<!Languages> 
                  default:
                    name: adultScore
                    description: Score from 0 to 1 that indicates how much the content is considered adult-oriented within the image.
                protocol: !<!Protocols> {}
              - !<!Property> 
                schema: *ref_16
                nullable: false
                serializedName: racyScore
                language: !<!Languages> 
                  default:
                    name: racyScore
                    description: Score from 0 to 1 that indicates how suggestive is the image.
                protocol: !<!Protocols> {}
              - !<!Property> 
                schema: *ref_17
                nullable: false
                serializedName: goreScore
                language: !<!Languages> 
                  default:
                    name: goreScore
                    description: Score from 0 to 1 that indicates how gory is the image.
                protocol: !<!Protocols> {}
            serializationFormats:
              - json
            usage:
              - output
            language: !<!Languages> 
              default:
                name: AdultInfo
                description: An object describing whether the image contains adult-oriented content and/or is racy.
                namespace: ''
            protocol: !<!Protocols> {}
          nullable: true
          serializedName: adult
          language: !<!Languages> 
            default:
              name: adult
              description: An object describing whether the image contains adult-oriented content and/or is racy.
          protocol: !<!Protocols> {}
        - !<!Property> 
          schema: !<!ObjectSchema> &ref_54
            type: object
            apiVersions:
              - !<!ApiVersion> 
                version: '3.0'
            properties:
              - !<!Property> 
                schema: *ref_18
                nullable: true
                serializedName: dominantColorForeground
                language: !<!Languages> 
                  default:
                    name: dominantColorForeground
                    description: Possible dominant foreground color.
                protocol: !<!Protocols> {}
              - !<!Property> 
                schema: *ref_19
                nullable: true
                serializedName: dominantColorBackground
                language: !<!Languages> 
                  default:
                    name: dominantColorBackground
                    description: Possible dominant background color.
                protocol: !<!Protocols> {}
              - !<!Property> 
                schema: !<!ArraySchema> &ref_95
                  type: array
                  apiVersions:
                    - !<!ApiVersion> 
                      version: '3.0'
                  elementType: *ref_20
                  nullableItems: true
                  language: !<!Languages> 
                    default:
                      name: ColorInfoDominantColors
                      description: An array of possible dominant colors.
                  protocol: !<!Protocols> {}
                nullable: true
                serializedName: dominantColors
                language: !<!Languages> 
                  default:
                    name: dominantColors
                    description: An array of possible dominant colors.
                protocol: !<!Protocols> {}
              - !<!Property> 
                schema: *ref_21
                nullable: true
                serializedName: accentColor
                language: !<!Languages> 
                  default:
                    name: accentColor
                    description: Possible accent color.
                protocol: !<!Protocols> {}
              - !<!Property> 
                schema: *ref_22
                nullable: false
                serializedName: isBWImg
                language: !<!Languages> 
                  default:
                    name: isBWImg
                    description: A value indicating if the image is black and white.
                protocol: !<!Protocols> {}
            serializationFormats:
              - json
            usage:
              - output
            language: !<!Languages> 
              default:
                name: ColorInfo
                description: An object providing additional metadata describing color attributes.
                namespace: ''
            protocol: !<!Protocols> {}
          nullable: true
          serializedName: color
          language: !<!Languages> 
            default:
              name: color
              description: An object providing additional metadata describing color attributes.
          protocol: !<!Protocols> {}
        - !<!Property> 
          schema: !<!ObjectSchema> &ref_55
            type: object
            apiVersions:
              - !<!ApiVersion> 
                version: '3.0'
            properties:
              - !<!Property> 
                schema: *ref_23
                nullable: false
                serializedName: clipArtType
                language: !<!Languages> 
                  default:
                    name: clipArtType
                    description: Confidence level that the image is a clip art.
                protocol: !<!Protocols> {}
              - !<!Property> 
                schema: *ref_24
                nullable: false
                serializedName: lineDrawingType
                language: !<!Languages> 
                  default:
                    name: lineDrawingType
                    description: Confidence level that the image is a line drawing.
                protocol: !<!Protocols> {}
            serializationFormats:
              - json
            usage:
              - output
            language: !<!Languages> 
              default:
                name: ImageType
                description: An object providing possible image types and matching confidence levels.
                namespace: ''
            protocol: !<!Protocols> {}
          nullable: true
          serializedName: imageType
          language: !<!Languages> 
            default:
              name: imageType
              description: An object providing possible image types and matching confidence levels.
          protocol: !<!Protocols> {}
        - !<!Property> 
          schema: !<!ArraySchema> &ref_96
            type: array
            apiVersions:
              - !<!ApiVersion> 
                version: '3.0'
            elementType: !<!ObjectSchema> &ref_56
              type: object
              apiVersions:
                - !<!ApiVersion> 
                  version: '3.0'
              properties:
                - !<!Property> 
                  schema: *ref_25
                  nullable: true
                  serializedName: name
                  language: !<!Languages> 
                    default:
                      name: name
                      description: Name of the entity.
                  protocol: !<!Protocols> {}
                - !<!Property> 
                  schema: *ref_26
                  nullable: false
                  serializedName: confidence
                  language: !<!Languages> 
                    default:
                      name: confidence
                      description: The level of confidence that the entity was observed.
                  protocol: !<!Protocols> {}
                - !<!Property> 
                  schema: *ref_27
                  nullable: true
                  serializedName: hint
                  language: !<!Languages> 
                    default:
                      name: hint
                      description: Optional hint/details for this tag.
                  protocol: !<!Protocols> {}
              serializationFormats:
                - json
              usage:
                - output
              language: !<!Languages> 
                default:
                  name: ImageTag
                  description: 'An entity observation in the image, along with the confidence score.'
                  namespace: ''
              protocol: !<!Protocols> {}
            nullableItems: true
            language: !<!Languages> 
              default:
                name: ImageAnalysisTags
                description: A list of tags with confidence level.
            protocol: !<!Protocols> {}
          nullable: true
          serializedName: tags
          language: !<!Languages> 
            default:
              name: tags
              description: A list of tags with confidence level.
          protocol: !<!Protocols> {}
        - !<!Property> 
          schema: !<!ObjectSchema> &ref_57
            type: object
            apiVersions:
              - !<!ApiVersion> 
                version: '3.0'
            properties:
              - !<!Property> 
                schema: !<!ArraySchema> &ref_67
                  type: array
                  apiVersions:
                    - !<!ApiVersion> 
                      version: '3.0'
                  elementType: *ref_28
                  nullableItems: true
                  language: !<!Languages> 
                    default:
                      name: ImageDescriptionDetailsTags
                      description: A collection of image tags.
                  protocol: !<!Protocols> {}
                nullable: true
                serializedName: tags
                language: !<!Languages> 
                  default:
                    name: tags
                    description: A collection of image tags.
                protocol: !<!Protocols> {}
              - !<!Property> 
                schema: !<!ArraySchema> &ref_68
                  type: array
                  apiVersions:
                    - !<!ApiVersion> 
                      version: '3.0'
                  elementType: !<!ObjectSchema> &ref_58
                    type: object
                    apiVersions:
                      - !<!ApiVersion> 
                        version: '3.0'
                    properties:
                      - !<!Property> 
                        schema: *ref_29
                        nullable: true
                        serializedName: text
                        language: !<!Languages> 
                          default:
                            name: text
                            description: The text of the caption.
                        protocol: !<!Protocols> {}
                      - !<!Property> 
                        schema: *ref_30
                        nullable: false
                        serializedName: confidence
                        language: !<!Languages> 
                          default:
                            name: confidence
                            description: The level of confidence the service has in the caption.
                        protocol: !<!Protocols> {}
                    serializationFormats:
                      - json
                    usage:
                      - output
                    language: !<!Languages> 
                      default:
                        name: ImageCaption
                        description: 'An image caption, i.e. a brief description of what the image depicts.'
                        namespace: ''
                    protocol: !<!Protocols> {}
                  nullableItems: true
                  language: !<!Languages> 
                    default:
                      name: ImageDescriptionDetailsCaptions
                      description: 'A list of captions, sorted by confidence level.'
                  protocol: !<!Protocols> {}
                nullable: true
                serializedName: captions
                language: !<!Languages> 
                  default:
                    name: captions
                    description: 'A list of captions, sorted by confidence level.'
                protocol: !<!Protocols> {}
            serializationFormats:
              - json
            usage:
              - output
            extensions:
              x-ms-flattened: true
            language: !<!Languages> 
              default:
                name: ImageDescriptionDetails
                description: 'A collection of content tags, along with a list of captions sorted by confidence level, and image metadata.'
                namespace: ''
            protocol: !<!Protocols> {}
          nullable: true
          serializedName: description
          language: !<!Languages> 
            default:
              name: description
              description: 'A collection of content tags, along with a list of captions sorted by confidence level, and image metadata.'
          protocol: !<!Protocols> {}
        - !<!Property> 
          schema: !<!ArraySchema> &ref_97
            type: array
            apiVersions:
              - !<!ApiVersion> 
                version: '3.0'
            elementType: !<!ObjectSchema> &ref_59
              type: object
              apiVersions:
                - !<!ApiVersion> 
                  version: '3.0'
              properties:
                - !<!Property> 
                  schema: *ref_31
                  nullable: false
                  serializedName: age
                  language: !<!Languages> 
                    default:
                      name: age
                      description: Possible age of the face.
                  protocol: !<!Protocols> {}
                - !<!Property> 
                  schema: *ref_32
                  nullable: true
                  serializedName: gender
                  language: !<!Languages> 
                    default:
                      name: gender
                      description: Possible gender of the face.
                  protocol: !<!Protocols> {}
                - !<!Property> 
                  schema: *ref_33
                  nullable: true
                  serializedName: faceRectangle
                  language: !<!Languages> 
                    default:
                      name: faceRectangle
                      description: Rectangle in the image containing the identified face.
                  protocol: !<!Protocols> {}
              serializationFormats:
                - json
              usage:
                - output
              language: !<!Languages> 
                default:
                  name: FaceDescription
                  description: An object describing a face identified in the image.
                  namespace: ''
              protocol: !<!Protocols> {}
            nullableItems: true
            language: !<!Languages> 
              default:
                name: ImageAnalysisFaces
                description: An array of possible faces within the image.
            protocol: !<!Protocols> {}
          nullable: true
          serializedName: faces
          language: !<!Languages> 
            default:
              name: faces
              description: An array of possible faces within the image.
          protocol: !<!Protocols> {}
        - !<!Property> 
          schema: !<!ArraySchema> &ref_98
            type: array
            apiVersions:
              - !<!ApiVersion> 
                version: '3.0'
            elementType: !<!ObjectSchema> &ref_60
              type: object
              apiVersions:
                - !<!ApiVersion> 
                  version: '3.0'
              properties:
                - !<!Property> 
                  schema: !<!ObjectSchema> &ref_44
                    type: object
                    apiVersions:
                      - !<!ApiVersion> 
                        version: '3.0'
                    properties:
                      - !<!Property> 
                        schema: *ref_34
                        nullable: false
                        serializedName: x
                        language: !<!Languages> 
                          default:
                            name: x
                            description: 'X-coordinate of the top left point of the area, in pixels.'
                        protocol: !<!Protocols> {}
                      - !<!Property> 
                        schema: *ref_35
                        nullable: false
                        serializedName: 'y'
                        language: !<!Languages> 
                          default:
                            name: 'y'
                            description: 'Y-coordinate of the top left point of the area, in pixels.'
                        protocol: !<!Protocols> {}
                      - !<!Property> 
                        schema: *ref_36
                        nullable: false
                        serializedName: w
                        language: !<!Languages> 
                          default:
                            name: w
                            description: 'Width measured from the top-left point of the area, in pixels.'
                        protocol: !<!Protocols> {}
                      - !<!Property> 
                        schema: *ref_37
                        nullable: false
                        serializedName: h
                        language: !<!Languages> 
                          default:
                            name: h
                            description: 'Height measured from the top-left point of the area, in pixels.'
                        protocol: !<!Protocols> {}
                    serializationFormats:
                      - json
                    usage:
                      - output
                    language: !<!Languages> 
                      default:
                        name: BoundingRect
                        description: A bounding box for an area inside an image.
                        namespace: ''
                    protocol: !<!Protocols> {}
                  nullable: false
                  readOnly: true
                  serializedName: rectangle
                  language: !<!Languages> 
                    default:
                      name: rectangle
                      description: Approximate location of the detected object.
                  protocol: !<!Protocols> {}
                - !<!Property> 
                  schema: *ref_38
                  nullable: true
                  serializedName: object
                  language: !<!Languages> 
                    default:
                      name: object
                      description: Label for the object.
                  protocol: !<!Protocols> {}
                - !<!Property> 
                  schema: *ref_39
                  nullable: false
                  serializedName: confidence
                  language: !<!Languages> 
                    default:
                      name: confidence
                      description: 'Confidence score of having observed the object in the image, as a value ranging from 0 to 1.'
                  protocol: !<!Protocols> {}
                - !<!Property> 
                  schema: !<!ObjectSchema> &ref_41
                    type: object
                    apiVersions:
                      - !<!ApiVersion> 
                        version: '3.0'
                    properties:
                      - !<!Property> 
                        schema: *ref_40
                        nullable: true
                        serializedName: object
                        language: !<!Languages> 
                          default:
                            name: object
                            description: Label for the object.
                        protocol: !<!Protocols> {}
                      - !<!Property> 
                        schema: *ref_39
                        nullable: false
                        serializedName: confidence
                        language: !<!Languages> 
                          default:
                            name: confidence
                            description: 'Confidence score of having observed the object in the image, as a value ranging from 0 to 1.'
                        protocol: !<!Protocols> {}
                      - !<!Property> 
                        schema: *ref_41
                        nullable: true
                        serializedName: parent
                        language: !<!Languages> 
                          default:
                            name: parent
                            description: "The parent object, from a taxonomy perspective.\r\nThe parent object is a more generic form of this object.  For example, a 'bulldog' would have a parent of 'dog'."
                        protocol: !<!Protocols> {}
                    serializationFormats:
                      - json
                    usage:
                      - output
                    language: !<!Languages> 
                      default:
                        name: ObjectHierarchy
                        description: An object detected inside an image.
                        namespace: ''
                    protocol: !<!Protocols> {}
                  nullable: true
                  serializedName: parent
                  language: !<!Languages> 
                    default:
                      name: parent
                      description: "The parent object, from a taxonomy perspective.\r\nThe parent object is a more generic form of this object.  For example, a 'bulldog' would have a parent of 'dog'."
                  protocol: !<!Protocols> {}
              serializationFormats:
                - json
              usage:
                - output
              language: !<!Languages> 
                default:
                  name: DetectedObject
                  description: An object detected in an image.
                  namespace: ''
              protocol: !<!Protocols> {}
            nullableItems: true
            language: !<!Languages> 
              default:
                name: ImageAnalysisObjects
                description: Array of objects describing what was detected in the image.
            protocol: !<!Protocols> {}
          nullable: true
          serializedName: objects
          language: !<!Languages> 
            default:
              name: objects
              description: Array of objects describing what was detected in the image.
          protocol: !<!Protocols> {}
        - !<!Property> 
          schema: !<!ArraySchema> &ref_99
            type: array
            apiVersions:
              - !<!ApiVersion> 
                version: '3.0'
            elementType: !<!ObjectSchema> &ref_61
              type: object
              apiVersions:
                - !<!ApiVersion> 
                  version: '3.0'
              properties:
                - !<!Property> 
                  schema: *ref_42
                  nullable: true
                  readOnly: true
                  serializedName: name
                  language: !<!Languages> 
                    default:
                      name: name
                      description: Label for the brand.
                  protocol: !<!Protocols> {}
                - !<!Property> 
                  schema: *ref_43
                  nullable: false
                  readOnly: true
                  serializedName: confidence
                  language: !<!Languages> 
                    default:
                      name: confidence
                      description: 'Confidence score of having observed the brand in the image, as a value ranging from 0 to 1.'
                  protocol: !<!Protocols> {}
                - !<!Property> 
                  schema: *ref_44
                  nullable: false
                  readOnly: true
                  serializedName: rectangle
                  language: !<!Languages> 
                    default:
                      name: rectangle
                      description: Approximate location of the detected brand.
                  protocol: !<!Protocols> {}
              serializationFormats:
                - json
              usage:
                - output
              language: !<!Languages> 
                default:
                  name: DetectedBrand
                  description: A brand detected in an image.
                  namespace: ''
              protocol: !<!Protocols> {}
            nullableItems: true
            language: !<!Languages> 
              default:
                name: ImageAnalysisBrands
                description: Array of brands detected in the image.
            protocol: !<!Protocols> {}
          nullable: true
          serializedName: brands
          language: !<!Languages> 
            default:
              name: brands
              description: Array of brands detected in the image.
          protocol: !<!Protocols> {}
        - !<!Property> 
          schema: *ref_45
          nullable: true
          serializedName: requestId
          language: !<!Languages> 
            default:
              name: requestId
              description: Id of the REST API request.
          protocol: !<!Protocols> {}
        - !<!Property> 
          schema: !<!ObjectSchema> &ref_62
            type: object
            apiVersions:
              - !<!ApiVersion> 
                version: '3.0'
            properties:
              - !<!Property> 
                schema: *ref_46
                nullable: false
                serializedName: width
                language: !<!Languages> 
                  default:
                    name: width
                    description: 'Image width, in pixels.'
                protocol: !<!Protocols> {}
              - !<!Property> 
                schema: *ref_47
                nullable: false
                serializedName: height
                language: !<!Languages> 
                  default:
                    name: height
                    description: 'Image height, in pixels.'
                protocol: !<!Protocols> {}
              - !<!Property> 
                schema: *ref_48
                nullable: true
                serializedName: format
                language: !<!Languages> 
                  default:
                    name: format
                    description: Image format.
                protocol: !<!Protocols> {}
            serializationFormats:
              - json
            usage:
              - output
            language: !<!Languages> 
              default:
                name: ImageMetadata
                description: Image metadata.
                namespace: ''
            protocol: !<!Protocols> {}
          nullable: true
          serializedName: metadata
          language: !<!Languages> 
            default:
              name: metadata
              description: Image metadata.
          protocol: !<!Protocols> {}
      serializationFormats:
        - json
      usage:
        - output
      language: !<!Languages> 
        default:
          name: ImageAnalysis
          description: Result of AnalyzeImage operation.
          namespace: ''
      protocol: !<!Protocols> {}
    - *ref_49
    - *ref_50
    - *ref_51
    - *ref_33
    - *ref_52
    - *ref_53
    - *ref_54
    - *ref_55
    - *ref_56
    - *ref_57
    - *ref_58
    - *ref_59
    - *ref_60
    - *ref_44
    - *ref_41
    - *ref_61
    - *ref_62
    - !<!ObjectSchema> &ref_125
      type: object
      apiVersions:
        - !<!ApiVersion> 
          version: '3.0'
      properties:
        - !<!Property> 
          schema: *ref_63
          required: true
          serializedName: code
          language: !<!Languages> 
            default:
              name: code
              description: The error code.
          protocol: !<!Protocols> {}
        - !<!Property> 
          schema: *ref_64
          required: true
          serializedName: message
          language: !<!Languages> 
            default:
              name: message
              description: A message explaining the error reported by the service.
          protocol: !<!Protocols> {}
        - !<!Property> 
          schema: *ref_65
          required: false
          serializedName: requestId
          language: !<!Languages> 
            default:
              name: requestId
              description: A unique request identifier.
          protocol: !<!Protocols> {}
      serializationFormats:
        - json
      usage:
        - exception
      language: !<!Languages> 
        default:
          name: ComputerVisionError
          description: Details about the API request error.
          namespace: ''
      protocol: !<!Protocols> {}
    - !<!ObjectSchema> &ref_132
      type: object
      apiVersions:
        - !<!ApiVersion> 
          version: '3.0'
      properties:
        - !<!Property> 
          schema: *ref_66
          nullable: true
          serializedName: requestId
          language: !<!Languages> 
            default:
              name: requestId
              description: Id of the REST API request.
          protocol: !<!Protocols> {}
        - !<!Property> 
          schema: *ref_62
          nullable: true
          serializedName: metadata
          language: !<!Languages> 
            default:
              name: metadata
              description: Image metadata.
          protocol: !<!Protocols> {}
        - !<!Property> 
          schema: *ref_67
          flattenedNames:
            - description
            - tags
          nullable: true
          serializedName: tags
          language: !<!Languages> 
            default:
              name: tags
              description: A collection of image tags.
          protocol: !<!Protocols> {}
        - !<!Property> 
          schema: *ref_68
          flattenedNames:
            - description
            - captions
          nullable: true
          serializedName: captions
          language: !<!Languages> 
            default:
              name: captions
              description: 'A list of captions, sorted by confidence level.'
          protocol: !<!Protocols> {}
      serializationFormats:
        - json
      usage:
        - output
      language: !<!Languages> 
        default:
          name: ImageDescription
          description: 'A collection of content tags, along with a list of captions sorted by confidence level, and image metadata.'
          namespace: ''
      protocol: !<!Protocols> {}
    - !<!ObjectSchema> &ref_135
      type: object
      apiVersions:
        - !<!ApiVersion> 
          version: '3.0'
      properties:
        - !<!Property> 
          schema: !<!ArraySchema> &ref_100
            type: array
            apiVersions:
              - !<!ApiVersion> 
                version: '3.0'
            elementType: *ref_60
            nullableItems: true
            language: !<!Languages> 
              default:
                name: DetectResultObjects
                description: An array of detected objects.
            protocol: !<!Protocols> {}
          nullable: true
          readOnly: true
          serializedName: objects
          language: !<!Languages> 
            default:
              name: objects
              description: An array of detected objects.
          protocol: !<!Protocols> {}
        - !<!Property> 
          schema: *ref_69
          nullable: true
          serializedName: requestId
          language: !<!Languages> 
            default:
              name: requestId
              description: Id of the REST API request.
          protocol: !<!Protocols> {}
        - !<!Property> 
          schema: *ref_62
          nullable: true
          serializedName: metadata
          language: !<!Languages> 
            default:
              name: metadata
              description: Image metadata.
          protocol: !<!Protocols> {}
      serializationFormats:
        - json
      usage:
        - output
      language: !<!Languages> 
        default:
          name: DetectResult
          description: Result of a DetectImage call.
          namespace: ''
      protocol: !<!Protocols> {}
    - !<!ObjectSchema> &ref_136
      type: object
      apiVersions:
        - !<!ApiVersion> 
          version: '3.0'
      properties:
        - !<!Property> 
          schema: !<!ArraySchema> &ref_102
            type: array
            apiVersions:
              - !<!ApiVersion> 
                version: '3.0'
            elementType: !<!ObjectSchema> &ref_72
              type: object
              apiVersions:
                - !<!ApiVersion> 
                  version: '3.0'
              properties:
                - !<!Property> 
                  schema: *ref_70
                  nullable: true
                  serializedName: name
                  language: !<!Languages> 
                    default:
                      name: name
                      description: The name of the model.
                  protocol: !<!Protocols> {}
                - !<!Property> 
                  schema: !<!ArraySchema> &ref_101
                    type: array
                    apiVersions:
                      - !<!ApiVersion> 
                        version: '3.0'
                    elementType: *ref_71
                    nullableItems: true
                    language: !<!Languages> 
                      default:
                        name: ModelDescriptionCategories
                        description: Categories of the model.
                    protocol: !<!Protocols> {}
                  nullable: true
                  serializedName: categories
                  language: !<!Languages> 
                    default:
                      name: categories
                      description: Categories of the model.
                  protocol: !<!Protocols> {}
              serializationFormats:
                - json
              usage:
                - output
              language: !<!Languages> 
                default:
                  name: ModelDescription
                  description: An object describing supported model by name and categories.
                  namespace: ''
              protocol: !<!Protocols> {}
            nullableItems: true
            language: !<!Languages> 
              default:
                name: ListModelsResultModels
                description: An array of supported models.
            protocol: !<!Protocols> {}
          nullable: true
          readOnly: true
          serializedName: models
          language: !<!Languages> 
            default:
              name: models
              description: An array of supported models.
          protocol: !<!Protocols> {}
      serializationFormats:
        - json
      usage:
        - output
      language: !<!Languages> 
        default:
          name: ListModelsResult
          description: Result of the List Domain Models operation.
          namespace: ''
      protocol: !<!Protocols> {}
    - *ref_72
    - !<!ObjectSchema> &ref_142
      type: object
      apiVersions:
        - !<!ApiVersion> 
          version: '3.0'
      properties:
        - !<!Property> 
          schema: *ref_73
          serializedName: result
          extensions:
            x-ms-client-flatten: true
          language: !<!Languages> 
            default:
              name: result
              description: Model-specific response.
          protocol: !<!Protocols> {}
        - !<!Property> 
          schema: *ref_74
          nullable: true
          serializedName: requestId
          language: !<!Languages> 
            default:
              name: requestId
              description: Id of the REST API request.
          protocol: !<!Protocols> {}
        - !<!Property> 
          schema: *ref_62
          nullable: true
          serializedName: metadata
          language: !<!Languages> 
            default:
              name: metadata
              description: Image metadata.
          protocol: !<!Protocols> {}
      serializationFormats:
        - json
      usage:
        - output
      language: !<!Languages> 
        default:
          name: DomainModelResults
          description: Result of image analysis using a specific domain model including additional metadata.
          namespace: ''
      protocol: !<!Protocols> {}
    - !<!ObjectSchema> &ref_149
      type: object
      apiVersions:
        - !<!ApiVersion> 
          version: '3.0'
      properties:
        - !<!Property> 
          schema: *ref_75
          nullable: true
          serializedName: language
          language: !<!Languages> 
            default:
              name: language
              description: The BCP-47 language code of the text in the image.
          protocol: !<!Protocols> {}
        - !<!Property> 
          schema: *ref_76
          nullable: false
          serializedName: textAngle
          language: !<!Languages> 
            default:
              name: textAngle
              description: >-
                The angle, in radians, of the detected text with respect to the closest horizontal or vertical direction. After rotating the input image clockwise by this angle, the recognized text lines become horizontal or vertical. In
                combination with the orientation property it can be used to overlay recognition results correctly on the original image, by rotating either the original image or recognition results by a suitable angle around the center of
                the original image. If the angle cannot be confidently detected, this property is not present. If the image contains text at different angles, only part of the text will be recognized correctly.
          protocol: !<!Protocols> {}
        - !<!Property> 
          schema: *ref_77
          nullable: true
          serializedName: orientation
          language: !<!Languages> 
            default:
              name: orientation
              description: "Orientation of the text recognized in the image, if requested. The value (up, down, left, or right) refers to the direction that the top of the recognized text is facing, after the image has been rotated around its center according to the detected text angle (see textAngle property).\r\nIf detection of the orientation was not requested, or no text is detected, the value is 'NotDetected'."
          protocol: !<!Protocols> {}
        - !<!Property> 
          schema: !<!ArraySchema> &ref_105
            type: array
            apiVersions:
              - !<!ApiVersion> 
                version: '3.0'
            elementType: !<!ObjectSchema> &ref_82
              type: object
              apiVersions:
                - !<!ApiVersion> 
                  version: '3.0'
              properties:
                - !<!Property> 
                  schema: *ref_78
                  nullable: true
                  serializedName: boundingBox
                  language: !<!Languages> 
                    default:
                      name: boundingBox
                      description: >-
                        Bounding box of a recognized region. The four integers represent the x-coordinate of the left edge, the y-coordinate of the top edge, width, and height of the bounding box, in the coordinate system of the input
                        image, after it has been rotated around its center according to the detected text angle (see textAngle property), with the origin at the top-left corner, and the y-axis pointing down.
                  protocol: !<!Protocols> {}
                - !<!Property> 
                  schema: !<!ArraySchema> &ref_104
                    type: array
                    apiVersions:
                      - !<!ApiVersion> 
                        version: '3.0'
                    elementType: !<!ObjectSchema> &ref_83
                      type: object
                      apiVersions:
                        - !<!ApiVersion> 
                          version: '3.0'
                      properties:
                        - !<!Property> 
                          schema: *ref_79
                          nullable: true
                          serializedName: boundingBox
                          language: !<!Languages> 
                            default:
                              name: boundingBox
                              description: >-
                                Bounding box of a recognized line. The four integers represent the x-coordinate of the left edge, the y-coordinate of the top edge, width, and height of the bounding box, in the coordinate system of the input
                                image, after it has been rotated around its center according to the detected text angle (see textAngle property), with the origin at the top-left corner, and the y-axis pointing down.
                          protocol: !<!Protocols> {}
                        - !<!Property> 
                          schema: !<!ArraySchema> &ref_103
                            type: array
                            apiVersions:
                              - !<!ApiVersion> 
                                version: '3.0'
                            elementType: !<!ObjectSchema> &ref_84
                              type: object
                              apiVersions:
                                - !<!ApiVersion> 
                                  version: '3.0'
                              properties:
                                - !<!Property> 
                                  schema: *ref_80
                                  nullable: true
                                  serializedName: boundingBox
                                  language: !<!Languages> 
                                    default:
                                      name: boundingBox
                                      description: >-
                                        Bounding box of a recognized word. The four integers represent the x-coordinate of the left edge, the y-coordinate of the top edge, width, and height of the bounding box, in the coordinate system of
                                        the input image, after it has been rotated around its center according to the detected text angle (see textAngle property), with the origin at the top-left corner, and the y-axis pointing down.
                                  protocol: !<!Protocols> {}
                                - !<!Property> 
                                  schema: *ref_81
                                  nullable: true
                                  serializedName: text
                                  language: !<!Languages> 
                                    default:
                                      name: text
                                      description: String value of a recognized word.
                                  protocol: !<!Protocols> {}
                              serializationFormats:
                                - json
                              usage:
                                - output
                              language: !<!Languages> 
                                default:
                                  name: OcrWord
                                  description: Information on a recognized word.
                                  namespace: ''
                              protocol: !<!Protocols> {}
                            nullableItems: true
                            language: !<!Languages> 
                              default:
                                name: OcrLineWords
                                description: 'An array of objects, where each object represents a recognized word.'
                            protocol: !<!Protocols> {}
                          nullable: true
                          serializedName: words
                          language: !<!Languages> 
                            default:
                              name: words
                              description: 'An array of objects, where each object represents a recognized word.'
                          protocol: !<!Protocols> {}
                      serializationFormats:
                        - json
                      usage:
                        - output
                      language: !<!Languages> 
                        default:
                          name: OcrLine
                          description: An object describing a single recognized line of text.
                          namespace: ''
                      protocol: !<!Protocols> {}
                    nullableItems: true
                    language: !<!Languages> 
                      default:
                        name: OcrRegionLines
                        description: An array of recognized lines of text.
                    protocol: !<!Protocols> {}
                  nullable: true
                  serializedName: lines
                  language: !<!Languages> 
                    default:
                      name: lines
                      description: An array of recognized lines of text.
                  protocol: !<!Protocols> {}
              serializationFormats:
                - json
              usage:
                - output
              language: !<!Languages> 
                default:
                  name: OcrRegion
                  description: A region consists of multiple lines (e.g. a column of text in a multi-column document).
                  namespace: ''
              protocol: !<!Protocols> {}
            nullableItems: true
            language: !<!Languages> 
              default:
                name: OcrResultRegions
                description: 'An array of objects, where each object represents a region of recognized text.'
            protocol: !<!Protocols> {}
          nullable: true
          serializedName: regions
          language: !<!Languages> 
            default:
              name: regions
              description: 'An array of objects, where each object represents a region of recognized text.'
          protocol: !<!Protocols> {}
      serializationFormats:
        - json
      usage:
        - output
      language: !<!Languages> 
        default:
          name: OcrResult
          description: ''
          namespace: ''
      protocol: !<!Protocols> {}
    - *ref_82
    - *ref_83
    - *ref_84
    - !<!ObjectSchema> &ref_153
      type: object
      apiVersions:
        - !<!ApiVersion> 
          version: '3.0'
      properties:
        - !<!Property> 
          schema: !<!ArraySchema> &ref_106
            type: array
            apiVersions:
              - !<!ApiVersion> 
                version: '3.0'
            elementType: *ref_56
            nullableItems: true
            language: !<!Languages> 
              default:
                name: TagResultTags
                description: A list of tags with confidence level.
            protocol: !<!Protocols> {}
          nullable: true
          serializedName: tags
          language: !<!Languages> 
            default:
              name: tags
              description: A list of tags with confidence level.
          protocol: !<!Protocols> {}
        - !<!Property> 
          schema: *ref_85
          nullable: true
          serializedName: requestId
          language: !<!Languages> 
            default:
              name: requestId
              description: Id of the REST API request.
          protocol: !<!Protocols> {}
        - !<!Property> 
          schema: *ref_62
          nullable: true
          serializedName: metadata
          language: !<!Languages> 
            default:
              name: metadata
              description: Image metadata.
          protocol: !<!Protocols> {}
      serializationFormats:
        - json
      usage:
        - output
      language: !<!Languages> 
        default:
          name: TagResult
          description: 'The results of a image tag operation, including any tags and image metadata.'
          namespace: ''
      protocol: !<!Protocols> {}
    - !<!ObjectSchema> &ref_164
      type: object
      apiVersions:
        - !<!ApiVersion> 
          version: '3.0'
      properties:
        - !<!Property> 
          schema: *ref_44
          nullable: false
          readOnly: true
          serializedName: areaOfInterest
          language: !<!Languages> 
            default:
              name: areaOfInterest
              description: A bounding box for an area of interest inside an image.
          protocol: !<!Protocols> {}
        - !<!Property> 
          schema: *ref_86
          nullable: true
          serializedName: requestId
          language: !<!Languages> 
            default:
              name: requestId
              description: Id of the REST API request.
          protocol: !<!Protocols> {}
        - !<!Property> 
          schema: *ref_62
          nullable: true
          serializedName: metadata
          language: !<!Languages> 
            default:
              name: metadata
              description: Image metadata.
          protocol: !<!Protocols> {}
      serializationFormats:
        - json
      usage:
        - output
      language: !<!Languages> 
        default:
          name: AreaOfInterestResult
          description: Result of AreaOfInterest operation.
          namespace: ''
      protocol: !<!Protocols> {}
    - !<!ObjectSchema> 
      type: object
      apiVersions:
        - !<!ApiVersion> 
          version: '3.0'
      properties:
        - !<!Property> 
          schema: !<!ArraySchema> &ref_107
            type: array
            apiVersions:
              - !<!ApiVersion> 
                version: '3.0'
            elementType: *ref_52
            nullableItems: true
            language: !<!Languages> 
              default:
                name: LandmarkResultsLandmarks
                description: List of landmarks recognized in the image.
            protocol: !<!Protocols> {}
          nullable: true
          serializedName: landmarks
          language: !<!Languages> 
            default:
              name: landmarks
              description: List of landmarks recognized in the image.
          protocol: !<!Protocols> {}
        - !<!Property> 
          schema: *ref_87
          nullable: true
          serializedName: requestId
          language: !<!Languages> 
            default:
              name: requestId
              description: Id of the REST API request.
          protocol: !<!Protocols> {}
        - !<!Property> 
          schema: *ref_62
          nullable: true
          serializedName: metadata
          language: !<!Languages> 
            default:
              name: metadata
              description: Image metadata.
          protocol: !<!Protocols> {}
      language: !<!Languages> 
        default:
          name: LandmarkResults
          description: Result of domain-specific classifications for the domain of landmarks.
          namespace: ''
      protocol: !<!Protocols> {}
    - !<!ObjectSchema> 
      type: object
      apiVersions:
        - !<!ApiVersion> 
          version: '3.0'
      properties:
        - !<!Property> 
          schema: !<!ArraySchema> &ref_108
            type: array
            apiVersions:
              - !<!ApiVersion> 
                version: '3.0'
            elementType: *ref_51
            nullableItems: true
            language: !<!Languages> 
              default:
                name: CelebrityResultsCelebrities
                description: List of celebrities recognized in the image.
            protocol: !<!Protocols> {}
          nullable: true
          serializedName: celebrities
          language: !<!Languages> 
            default:
              name: celebrities
              description: List of celebrities recognized in the image.
          protocol: !<!Protocols> {}
        - !<!Property> 
          schema: *ref_88
          nullable: true
          serializedName: requestId
          language: !<!Languages> 
            default:
              name: requestId
              description: Id of the REST API request.
          protocol: !<!Protocols> {}
        - !<!Property> 
          schema: *ref_62
          nullable: true
          serializedName: metadata
          language: !<!Languages> 
            default:
              name: metadata
              description: Image metadata.
          protocol: !<!Protocols> {}
      language: !<!Languages> 
        default:
          name: CelebrityResults
          description: Result of domain-specific classifications for the domain of celebrities.
          namespace: ''
      protocol: !<!Protocols> {}
  arrays:
    - !<!ArraySchema> &ref_110
      type: array
      apiVersions:
        - !<!ApiVersion> 
          version: '3.0'
      elementType: *ref_89
      nullableItems: false
      language: !<!Languages> 
        default:
          name: ArrayOfVisualFeatureTypes
          description: Array of VisualFeatureTypes
      protocol: !<!Protocols> {}
    - !<!ArraySchema> &ref_111
      type: array
      apiVersions:
        - !<!ApiVersion> 
          version: '3.0'
      elementType: *ref_90
      language: !<!Languages> 
        default:
          name: ArrayOfDetails
          description: Array of Details
      protocol: !<!Protocols> {}
    - !<!ArraySchema> &ref_113
      type: array
      apiVersions:
        - !<!ApiVersion> 
          version: '3.0'
      elementType: *ref_91
      nullableItems: false
      language: !<!Languages> 
        default:
          name: ArrayOfDescriptionExclude
          description: Array of DescriptionExclude
      protocol: !<!Protocols> {}
    - *ref_92
    - *ref_93
    - *ref_94
    - *ref_95
    - *ref_96
    - *ref_67
    - *ref_68
    - *ref_97
    - *ref_98
    - *ref_99
    - *ref_100
    - *ref_101
    - *ref_102
    - *ref_103
    - *ref_104
    - *ref_105
    - *ref_106
    - !<!ArraySchema> &ref_165
      type: array
      apiVersions:
        - !<!ApiVersion> 
          version: '3.0'
      elementType: *ref_90
      language: !<!Languages> 
        default:
          name: ArrayOfDetails
          description: Array of Details
      protocol: !<!Protocols> {}
    - *ref_107
    - *ref_108
globalParameters:
  - !<!Parameter> &ref_109
    schema: *ref_0
    implementation: Client
    required: true
    extensions:
      x-in: path
      x-ms-priority: 0
      x-ms-skip-url-encoding: true
      x-name: Endpoint
      x-required: true
      x-type: string
    language: !<!Languages> 
      default:
        name: Endpoint
        description: Supported Cognitive Services endpoints.
        serializedName: Endpoint
    protocol: !<!Protocols> 
      http: !<!HttpParameter> 
        in: uri
operationGroups:
  - !<!OperationGroup> 
    $key: ''
    operations:
      - !<!Operation> 
        apiVersions:
          - !<!ApiVersion> 
            version: '3.0'
        parameters:
          - *ref_109
          - !<!Parameter> &ref_120
            schema: *ref_110
            implementation: Method
            language: !<!Languages> 
              default:
                name: visualFeatures
                description: >-
                  A string indicating what visual feature types to return. Multiple values should be comma-separated. Valid visual feature types include: Categories - categorizes image content according to a taxonomy defined in
                  documentation. Tags - tags the image with a detailed list of words related to the image content. Description - describes the image content with a complete English sentence. Faces - detects if faces are present. If present,
                  generate coordinates, gender and age. ImageType - detects if image is clipart or a line drawing. Color - determines the accent color, dominant color, and whether an image is black&white. Adult - detects if the image is
                  pornographic in nature (depicts nudity or a sex act), or is gory (depicts extreme violence or blood). Sexually suggestive content (aka racy content) is also detected. Objects - detects various objects within an image,
                  including the approximate location. The Objects argument is only available in English. Brands - detects various brands within an image, including the approximate location. The Brands argument is only available in English.
                serializedName: visualFeatures
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: query
                style: form
          - !<!Parameter> &ref_121
            schema: *ref_111
            implementation: Method
            language: !<!Languages> 
              default:
                name: details
                description: >-
                  A string indicating which domain-specific details to return. Multiple values should be comma-separated. Valid visual feature types include: Celebrities - identifies celebrities if detected in the image, Landmarks -
                  identifies notable landmarks in the image.
                serializedName: details
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: query
                style: form
          - !<!Parameter> &ref_122
            schema: *ref_112
            implementation: Method
            language: !<!Languages> 
              default:
                name: language
                description: >-
                  The desired language for output generation. If this parameter is not specified, the default value is &quot;en&quot;.Supported languages:en - English, Default. es - Spanish, ja - Japanese, pt - Portuguese, zh - Simplified
                  Chinese.
                serializedName: language
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: query
          - !<!Parameter> &ref_123
            schema: *ref_113
            implementation: Method
            language: !<!Languages> 
              default:
                name: descriptionExclude
                description: Turn off specified domain models when generating the description.
                serializedName: descriptionExclude
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: query
                style: form
        requests:
          - !<!Request> 
            parameters:
              - !<!Parameter> 
                schema: *ref_114
                implementation: Method
                origin: 'modelerfour:synthesized/content-type'
                required: true
                language: !<!Languages> 
                  default:
                    name: contentType
                    description: Body Parameter content-type
                    serializedName: Content-Type
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: header
              - !<!Parameter> &ref_117
                schema: *ref_115
                flattened: true
                implementation: Method
                required: true
                extensions:
                  x-ms-client-flatten: true
                language: !<!Languages> 
                  default:
                    name: imageUrl
                    description: A JSON document with a URL pointing to the image that is to be analyzed.
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: body
                    style: json
              - !<!Parameter> 
                schema: *ref_116
                implementation: Method
                origin: 'modelerfour:synthesized/accept'
                required: true
                language: !<!Languages> 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: header
              - !<!VirtualParameter> &ref_119
                schema: *ref_1
                implementation: Method
                originalParameter: *ref_117
                pathToProperty: []
                required: true
                targetProperty: *ref_118
                language: !<!Languages> 
                  default:
                    name: url
                    description: Publicly reachable URL of an image.
                protocol: !<!Protocols> {}
            signatureParameters:
              - *ref_119
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpWithBodyRequest> 
                path: /analyze
                method: post
                knownMediaType: json
                mediaTypes:
                  - application/json
                uri: '{Endpoint}/vision/v3.0'
        signatureParameters:
          - *ref_120
          - *ref_121
          - *ref_122
          - *ref_123
        responses:
          - !<!SchemaResponse> 
            schema: *ref_124
            nullable: true
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
        exceptions:
          - !<!SchemaResponse> 
            schema: *ref_125
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        language: !<!Languages> 
          default:
            name: AnalyzeImage
            description: "This operation extracts a rich set of visual features based on the image content.\r\nTwo input methods are supported -- (1) Uploading an image or (2) specifying an image URL. Within your request, there is an optional parameter to allow you to choose which features to return. By default, image categories are returned in the response.\r\nA successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong."
        protocol: !<!Protocols> {}
      - !<!Operation> 
        apiVersions:
          - !<!ApiVersion> 
            version: '3.0'
        parameters:
          - *ref_109
          - !<!Parameter> &ref_129
            schema: *ref_126
            implementation: Method
            language: !<!Languages> 
              default:
                name: maxCandidates
                description: Maximum number of candidate descriptions to be returned.  The default is 1.
                serializedName: maxCandidates
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: query
          - !<!Parameter> &ref_130
            schema: *ref_112
            implementation: Method
            language: !<!Languages> 
              default:
                name: language
                description: >-
                  The desired language for output generation. If this parameter is not specified, the default value is &quot;en&quot;.Supported languages:en - English, Default. es - Spanish, ja - Japanese, pt - Portuguese, zh - Simplified
                  Chinese.
                serializedName: language
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: query
          - !<!Parameter> &ref_131
            schema: *ref_113
            implementation: Method
            language: !<!Languages> 
              default:
                name: descriptionExclude
                description: Turn off specified domain models when generating the description.
                serializedName: descriptionExclude
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: query
                style: form
        requests:
          - !<!Request> 
            parameters:
              - !<!Parameter> 
                schema: *ref_114
                implementation: Method
                origin: 'modelerfour:synthesized/content-type'
                required: true
                language: !<!Languages> 
                  default:
                    name: contentType
                    description: Body Parameter content-type
                    serializedName: Content-Type
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: header
              - !<!Parameter> &ref_127
                schema: *ref_115
                flattened: true
                implementation: Method
                required: true
                extensions:
                  x-ms-client-flatten: true
                language: !<!Languages> 
                  default:
                    name: imageUrl
                    description: A JSON document with a URL pointing to the image that is to be analyzed.
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: body
                    style: json
              - !<!Parameter> 
                schema: *ref_116
                implementation: Method
                origin: 'modelerfour:synthesized/accept'
                required: true
                language: !<!Languages> 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: header
              - !<!VirtualParameter> &ref_128
                schema: *ref_1
                implementation: Method
                originalParameter: *ref_127
                pathToProperty: []
                required: true
                targetProperty: *ref_118
                language: !<!Languages> 
                  default:
                    name: url
                    description: Publicly reachable URL of an image.
                protocol: !<!Protocols> {}
            signatureParameters:
              - *ref_128
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpWithBodyRequest> 
                path: /describe
                method: post
                knownMediaType: json
                mediaTypes:
                  - application/json
                uri: '{Endpoint}/vision/v3.0'
        signatureParameters:
          - *ref_129
          - *ref_130
          - *ref_131
        responses:
          - !<!SchemaResponse> 
            schema: *ref_132
            nullable: true
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
        exceptions:
          - !<!SchemaResponse> 
            schema: *ref_125
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        language: !<!Languages> 
          default:
            name: DescribeImage
            description: "This operation generates a description of an image in human readable language with complete sentences. The description is based on a collection of content tags, which are also returned by the operation. More than one description can be generated for each image. Descriptions are ordered by their confidence score. Descriptions may include results from celebrity and landmark domain models, if applicable.\r\nTwo input methods are supported -- (1) Uploading an image or (2) specifying an image URL.\r\nA successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong."
        protocol: !<!Protocols> {}
      - !<!Operation> 
        apiVersions:
          - !<!ApiVersion> 
            version: '3.0'
        parameters:
          - *ref_109
        requests:
          - !<!Request> 
            parameters:
              - !<!Parameter> 
                schema: *ref_114
                implementation: Method
                origin: 'modelerfour:synthesized/content-type'
                required: true
                language: !<!Languages> 
                  default:
                    name: contentType
                    description: Body Parameter content-type
                    serializedName: Content-Type
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: header
              - !<!Parameter> &ref_133
                schema: *ref_115
                flattened: true
                implementation: Method
                required: true
                extensions:
                  x-ms-client-flatten: true
                language: !<!Languages> 
                  default:
                    name: imageUrl
                    description: A JSON document with a URL pointing to the image that is to be analyzed.
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: body
                    style: json
              - !<!Parameter> 
                schema: *ref_116
                implementation: Method
                origin: 'modelerfour:synthesized/accept'
                required: true
                language: !<!Languages> 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: header
              - !<!VirtualParameter> &ref_134
                schema: *ref_1
                implementation: Method
                originalParameter: *ref_133
                pathToProperty: []
                required: true
                targetProperty: *ref_118
                language: !<!Languages> 
                  default:
                    name: url
                    description: Publicly reachable URL of an image.
                protocol: !<!Protocols> {}
            signatureParameters:
              - *ref_134
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpWithBodyRequest> 
                path: /detect
                method: post
                knownMediaType: json
                mediaTypes:
                  - application/json
                uri: '{Endpoint}/vision/v3.0'
        signatureParameters: []
        responses:
          - !<!SchemaResponse> 
            schema: *ref_135
            nullable: true
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
        exceptions:
          - !<!SchemaResponse> 
            schema: *ref_125
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        language: !<!Languages> 
          default:
            name: DetectObjects
            description: "Performs object detection on the specified image.\r\nTwo input methods are supported -- (1) Uploading an image or (2) specifying an image URL.\r\nA successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong."
        protocol: !<!Protocols> {}
      - !<!Operation> 
        apiVersions:
          - !<!ApiVersion> 
            version: '3.0'
        parameters:
          - *ref_109
        requests:
          - !<!Request> 
            parameters:
              - !<!Parameter> 
                schema: *ref_116
                implementation: Method
                origin: 'modelerfour:synthesized/accept'
                required: true
                language: !<!Languages> 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: header
            signatureParameters: []
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpRequest> 
                path: /models
                method: get
                uri: '{Endpoint}/vision/v3.0'
        signatureParameters: []
        responses:
          - !<!SchemaResponse> 
            schema: *ref_136
            nullable: true
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
        exceptions:
          - !<!SchemaResponse> 
            schema: *ref_125
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        language: !<!Languages> 
          default:
            name: ListModels
            description: "This operation returns the list of domain-specific models that are supported by the Computer Vision API. Currently, the API supports following domain-specific models: celebrity recognizer, landmark recognizer.\r\nA successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong."
        protocol: !<!Protocols> {}
      - !<!Operation> 
        apiVersions:
          - !<!ApiVersion> 
            version: '3.0'
        parameters:
          - *ref_109
          - !<!Parameter> &ref_140
            schema: *ref_137
            implementation: Method
            required: true
            language: !<!Languages> 
              default:
                name: model
                description: The domain-specific content to recognize.
                serializedName: model
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: path
          - !<!Parameter> &ref_141
            schema: *ref_112
            implementation: Method
            language: !<!Languages> 
              default:
                name: language
                description: >-
                  The desired language for output generation. If this parameter is not specified, the default value is &quot;en&quot;.Supported languages:en - English, Default. es - Spanish, ja - Japanese, pt - Portuguese, zh - Simplified
                  Chinese.
                serializedName: language
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: query
        requests:
          - !<!Request> 
            parameters:
              - !<!Parameter> 
                schema: *ref_114
                implementation: Method
                origin: 'modelerfour:synthesized/content-type'
                required: true
                language: !<!Languages> 
                  default:
                    name: contentType
                    description: Body Parameter content-type
                    serializedName: Content-Type
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: header
              - !<!Parameter> &ref_138
                schema: *ref_115
                flattened: true
                implementation: Method
                required: true
                extensions:
                  x-ms-client-flatten: true
                language: !<!Languages> 
                  default:
                    name: imageUrl
                    description: A JSON document with a URL pointing to the image that is to be analyzed.
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: body
                    style: json
              - !<!Parameter> 
                schema: *ref_116
                implementation: Method
                origin: 'modelerfour:synthesized/accept'
                required: true
                language: !<!Languages> 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: header
              - !<!VirtualParameter> &ref_139
                schema: *ref_1
                implementation: Method
                originalParameter: *ref_138
                pathToProperty: []
                required: true
                targetProperty: *ref_118
                language: !<!Languages> 
                  default:
                    name: url
                    description: Publicly reachable URL of an image.
                protocol: !<!Protocols> {}
            signatureParameters:
              - *ref_139
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpWithBodyRequest> 
                path: '/models/{model}/analyze'
                method: post
                knownMediaType: json
                mediaTypes:
                  - application/json
                uri: '{Endpoint}/vision/v3.0'
        signatureParameters:
          - *ref_140
          - *ref_141
        responses:
          - !<!SchemaResponse> 
            schema: *ref_142
            nullable: true
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
        exceptions:
          - !<!SchemaResponse> 
            schema: *ref_125
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        language: !<!Languages> 
          default:
            name: AnalyzeImageByDomain
            description: "This operation recognizes content within an image by applying a domain-specific model. The list of domain-specific models that are supported by the Computer Vision API can be retrieved using the /models GET request. Currently, the API provides following domain-specific models: celebrities, landmarks.\r\nTwo input methods are supported -- (1) Uploading an image or (2) specifying an image URL.\r\nA successful response will be returned in JSON.\r\nIf the request failed, the response will contain an error code and a message to help understand what went wrong."
        protocol: !<!Protocols> {}
      - !<!Operation> 
        apiVersions:
          - !<!ApiVersion> 
            version: '3.0'
        parameters:
          - *ref_109
          - !<!Parameter> &ref_147
            schema: *ref_143
            implementation: Method
            required: true
            language: !<!Languages> 
              default:
                name: detectOrientation
                description: Whether detect the text orientation in the image. With detectOrientation=true the OCR service tries to detect the image orientation and correct it before further processing (e.g. if it's upside-down).
                serializedName: detectOrientation
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: query
          - !<!Parameter> &ref_148
            schema: *ref_144
            implementation: Method
            language: !<!Languages> 
              default:
                name: language
                description: The BCP-47 language code of the text to be detected in the image. The default value is 'unk'.
                serializedName: language
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: query
        requests:
          - !<!Request> 
            parameters:
              - !<!Parameter> 
                schema: *ref_114
                implementation: Method
                origin: 'modelerfour:synthesized/content-type'
                required: true
                language: !<!Languages> 
                  default:
                    name: contentType
                    description: Body Parameter content-type
                    serializedName: Content-Type
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: header
              - !<!Parameter> &ref_145
                schema: *ref_115
                flattened: true
                implementation: Method
                required: true
                extensions:
                  x-ms-client-flatten: true
                language: !<!Languages> 
                  default:
                    name: imageUrl
                    description: A JSON document with a URL pointing to the image that is to be analyzed.
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: body
                    style: json
              - !<!Parameter> 
                schema: *ref_116
                implementation: Method
                origin: 'modelerfour:synthesized/accept'
                required: true
                language: !<!Languages> 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: header
              - !<!VirtualParameter> &ref_146
                schema: *ref_1
                implementation: Method
                originalParameter: *ref_145
                pathToProperty: []
                required: true
                targetProperty: *ref_118
                language: !<!Languages> 
                  default:
                    name: url
                    description: Publicly reachable URL of an image.
                protocol: !<!Protocols> {}
            signatureParameters:
              - *ref_146
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpWithBodyRequest> 
                path: /ocr
                method: post
                knownMediaType: json
                mediaTypes:
                  - application/json
                uri: '{Endpoint}/vision/v3.0'
        signatureParameters:
          - *ref_147
          - *ref_148
        responses:
          - !<!SchemaResponse> 
            schema: *ref_149
            nullable: true
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
        exceptions:
          - !<!SchemaResponse> 
            schema: *ref_125
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        language: !<!Languages> 
          default:
            name: RecognizePrintedText
            description: "Optical Character Recognition (OCR) detects text in an image and extracts the recognized characters into a machine-usable character stream.\r\nUpon success, the OCR results will be returned.\r\nUpon failure, the error code together with an error message will be returned. The error code can be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage, or InternalServerError."
        protocol: !<!Protocols> {}
      - !<!Operation> 
        apiVersions:
          - !<!ApiVersion> 
            version: '3.0'
        parameters:
          - *ref_109
          - !<!Parameter> &ref_152
            schema: *ref_112
            implementation: Method
            language: !<!Languages> 
              default:
                name: language
                description: >-
                  The desired language for output generation. If this parameter is not specified, the default value is &quot;en&quot;.Supported languages:en - English, Default. es - Spanish, ja - Japanese, pt - Portuguese, zh - Simplified
                  Chinese.
                serializedName: language
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: query
        requests:
          - !<!Request> 
            parameters:
              - !<!Parameter> 
                schema: *ref_114
                implementation: Method
                origin: 'modelerfour:synthesized/content-type'
                required: true
                language: !<!Languages> 
                  default:
                    name: contentType
                    description: Body Parameter content-type
                    serializedName: Content-Type
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: header
              - !<!Parameter> &ref_150
                schema: *ref_115
                flattened: true
                implementation: Method
                required: true
                extensions:
                  x-ms-client-flatten: true
                language: !<!Languages> 
                  default:
                    name: imageUrl
                    description: A JSON document with a URL pointing to the image that is to be analyzed.
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: body
                    style: json
              - !<!Parameter> 
                schema: *ref_116
                implementation: Method
                origin: 'modelerfour:synthesized/accept'
                required: true
                language: !<!Languages> 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: header
              - !<!VirtualParameter> &ref_151
                schema: *ref_1
                implementation: Method
                originalParameter: *ref_150
                pathToProperty: []
                required: true
                targetProperty: *ref_118
                language: !<!Languages> 
                  default:
                    name: url
                    description: Publicly reachable URL of an image.
                protocol: !<!Protocols> {}
            signatureParameters:
              - *ref_151
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpWithBodyRequest> 
                path: /tag
                method: post
                knownMediaType: json
                mediaTypes:
                  - application/json
                uri: '{Endpoint}/vision/v3.0'
        signatureParameters:
          - *ref_152
        responses:
          - !<!SchemaResponse> 
            schema: *ref_153
            nullable: true
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
        exceptions:
          - !<!SchemaResponse> 
            schema: *ref_125
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        language: !<!Languages> 
          default:
            name: TagImage
            description: "This operation generates a list of words, or tags, that are relevant to the content of the supplied image. The Computer Vision API can return tags based on objects, living beings, scenery or actions found in images. Unlike categories, tags are not organized according to a hierarchical classification system, but correspond to image content. Tags may contain hints to avoid ambiguity or provide context, for example the tag \"ascomycete\" may be accompanied by the hint \"fungus\".\r\nTwo input methods are supported -- (1) Uploading an image or (2) specifying an image URL.\r\nA successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong."
        protocol: !<!Protocols> {}
      - !<!Operation> 
        apiVersions:
          - !<!ApiVersion> 
            version: '3.0'
        parameters:
          - *ref_109
          - !<!Parameter> &ref_159
            schema: *ref_154
            implementation: Method
            required: true
            language: !<!Languages> 
              default:
                name: width
                description: 'Width of the thumbnail, in pixels. It must be between 1 and 1024. Recommended minimum of 50.'
                serializedName: width
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: query
          - !<!Parameter> &ref_160
            schema: *ref_154
            implementation: Method
            required: true
            language: !<!Languages> 
              default:
                name: height
                description: 'Height of the thumbnail, in pixels. It must be between 1 and 1024. Recommended minimum of 50.'
                serializedName: height
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: query
          - !<!Parameter> &ref_161
            schema: *ref_155
            implementation: Method
            language: !<!Languages> 
              default:
                name: smartCropping
                description: Boolean flag for enabling smart cropping.
                serializedName: smartCropping
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: query
        requests:
          - !<!Request> 
            parameters:
              - !<!Parameter> 
                schema: *ref_114
                implementation: Method
                origin: 'modelerfour:synthesized/content-type'
                required: true
                language: !<!Languages> 
                  default:
                    name: contentType
                    description: Body Parameter content-type
                    serializedName: Content-Type
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: header
              - !<!Parameter> &ref_157
                schema: *ref_115
                flattened: true
                implementation: Method
                required: true
                extensions:
                  x-ms-client-flatten: true
                language: !<!Languages> 
                  default:
                    name: imageUrl
                    description: A JSON document with a URL pointing to the image that is to be analyzed.
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: body
                    style: json
              - !<!Parameter> 
                schema: *ref_156
                implementation: Method
                origin: 'modelerfour:synthesized/accept'
                required: true
                language: !<!Languages> 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: header
              - !<!VirtualParameter> &ref_158
                schema: *ref_1
                implementation: Method
                originalParameter: *ref_157
                pathToProperty: []
                required: true
                targetProperty: *ref_118
                language: !<!Languages> 
                  default:
                    name: url
                    description: Publicly reachable URL of an image.
                protocol: !<!Protocols> {}
            signatureParameters:
              - *ref_158
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpWithBodyRequest> 
                path: /generateThumbnail
                method: post
                knownMediaType: json
                mediaTypes:
                  - application/json
                uri: '{Endpoint}/vision/v3.0'
        signatureParameters:
          - *ref_159
          - *ref_160
          - *ref_161
        responses:
          - !<!BinaryResponse> 
            binary: true
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpBinaryResponse> 
                knownMediaType: binary
                mediaTypes:
                  - application/octet-stream
                statusCodes:
                  - '200'
        exceptions:
          - !<!Response> 
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                statusCodes:
                  - default
        language: !<!Languages> 
          default:
            name: GenerateThumbnail
            description: "This operation generates a thumbnail image with the user-specified width and height. By default, the service analyzes the image, identifies the region of interest (ROI), and generates smart cropping coordinates based on the ROI. Smart cropping helps when you specify an aspect ratio that differs from that of the input image.\r\nA successful response contains the thumbnail image binary. If the request failed, the response contains an error code and a message to help determine what went wrong.\r\nUpon failure, the error code and an error message are returned. The error code could be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, InvalidThumbnailSize, NotSupportedImage, FailedToProcess, Timeout, or InternalServerError."
        protocol: !<!Protocols> {}
      - !<!Operation> 
        apiVersions:
          - !<!ApiVersion> 
            version: '3.0'
        parameters:
          - *ref_109
        requests:
          - !<!Request> 
            parameters:
              - !<!Parameter> 
                schema: *ref_114
                implementation: Method
                origin: 'modelerfour:synthesized/content-type'
                required: true
                language: !<!Languages> 
                  default:
                    name: contentType
                    description: Body Parameter content-type
                    serializedName: Content-Type
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: header
              - !<!Parameter> &ref_162
                schema: *ref_115
                flattened: true
                implementation: Method
                required: true
                extensions:
                  x-ms-client-flatten: true
                language: !<!Languages> 
                  default:
                    name: imageUrl
                    description: A JSON document with a URL pointing to the image that is to be analyzed.
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: body
                    style: json
              - !<!Parameter> 
                schema: *ref_116
                implementation: Method
                origin: 'modelerfour:synthesized/accept'
                required: true
                language: !<!Languages> 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: header
              - !<!VirtualParameter> &ref_163
                schema: *ref_1
                implementation: Method
                originalParameter: *ref_162
                pathToProperty: []
                required: true
                targetProperty: *ref_118
                language: !<!Languages> 
                  default:
                    name: url
                    description: Publicly reachable URL of an image.
                protocol: !<!Protocols> {}
            signatureParameters:
              - *ref_163
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpWithBodyRequest> 
                path: /areaOfInterest
                method: post
                knownMediaType: json
                mediaTypes:
                  - application/json
                uri: '{Endpoint}/vision/v3.0'
        signatureParameters: []
        responses:
          - !<!SchemaResponse> 
            schema: *ref_164
            nullable: true
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
        exceptions:
          - !<!SchemaResponse> 
            schema: *ref_125
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        language: !<!Languages> 
          default:
            name: GetAreaOfInterest
            description: "This operation returns a bounding box around the most important area of the image.\r\nA successful response will be returned in JSON. If the request failed, the response contains an error code and a message to help determine what went wrong.\r\nUpon failure, the error code and an error message are returned. The error code could be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, FailedToProcess, Timeout, or InternalServerError."
        protocol: !<!Protocols> {}
      - !<!Operation> 
        apiVersions:
          - !<!ApiVersion> 
            version: '3.0'
        parameters:
          - *ref_109
          - !<!Parameter> &ref_170
            schema: *ref_110
            implementation: Method
            language: !<!Languages> 
              default:
                name: visualFeatures
                description: >-
                  A string indicating what visual feature types to return. Multiple values should be comma-separated. Valid visual feature types include: Categories - categorizes image content according to a taxonomy defined in
                  documentation. Tags - tags the image with a detailed list of words related to the image content. Description - describes the image content with a complete English sentence. Faces - detects if faces are present. If present,
                  generate coordinates, gender and age. ImageType - detects if image is clipart or a line drawing. Color - determines the accent color, dominant color, and whether an image is black&white. Adult - detects if the image is
                  pornographic in nature (depicts nudity or a sex act), or is gory (depicts extreme violence or blood). Sexually suggestive content (aka racy content) is also detected. Objects - detects various objects within an image,
                  including the approximate location. The Objects argument is only available in English. Brands - detects various brands within an image, including the approximate location. The Brands argument is only available in English.
                serializedName: visualFeatures
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: query
                style: form
          - !<!Parameter> &ref_171
            schema: *ref_165
            implementation: Method
            language: !<!Languages> 
              default:
                name: details
                description: >-
                  A string indicating which domain-specific details to return. Multiple values should be comma-separated. Valid visual feature types include: Celebrities - identifies celebrities if detected in the image, Landmarks -
                  identifies notable landmarks in the image.
                serializedName: details
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: query
                style: form
          - !<!Parameter> &ref_172
            schema: *ref_112
            implementation: Method
            language: !<!Languages> 
              default:
                name: language
                description: >-
                  The desired language for output generation. If this parameter is not specified, the default value is &quot;en&quot;.Supported languages:en - English, Default. es - Spanish, ja - Japanese, pt - Portuguese, zh - Simplified
                  Chinese.
                serializedName: language
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: query
          - !<!Parameter> &ref_173
            schema: *ref_113
            implementation: Method
            language: !<!Languages> 
              default:
                name: descriptionExclude
                description: Turn off specified domain models when generating the description.
                serializedName: descriptionExclude
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: query
                style: form
        requests:
          - !<!Request> 
            parameters:
              - !<!Parameter> 
                schema: *ref_166
                implementation: Method
                origin: 'modelerfour:synthesized/content-type'
                required: true
                language: !<!Languages> 
                  default:
                    name: contentType
                    description: Upload file type
                    serializedName: Content-Type
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: header
              - !<!Parameter> &ref_168
                schema: *ref_167
                implementation: Method
                required: true
                language: !<!Languages> 
                  default:
                    name: image
                    description: An image stream.
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: body
                    style: binary
              - !<!Parameter> 
                schema: *ref_116
                implementation: Method
                origin: 'modelerfour:synthesized/accept'
                required: true
                language: !<!Languages> 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: header
            signatureParameters:
              - *ref_168
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpBinaryRequest> 
                path: /analyze
                method: post
                binary: true
                knownMediaType: binary
                mediaTypes:
                  - application/octet-stream
                uri: '{Endpoint}/vision/v3.0'
          - !<!Request> 
            parameters:
              - !<!Parameter> 
                schema: *ref_169
                implementation: Method
                origin: 'modelerfour:synthesized/content-type'
                required: true
                language: !<!Languages> 
                  default:
                    name: contentType
                    description: Body Parameter content-type
                    serializedName: Content-Type
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: header
              - !<!Parameter> 
                schema: *ref_116
                implementation: Method
                origin: 'modelerfour:synthesized/accept'
                required: true
                language: !<!Languages> 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: header
            signatureParameters: []
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpMultipartRequest> 
                path: /analyze
                method: post
                knownMediaType: multipart
                mediaTypes:
                  - multipart/form-data
                multipart: true
                uri: '{Endpoint}/vision/v3.0'
        signatureParameters:
          - *ref_170
          - *ref_171
          - *ref_172
          - *ref_173
        responses:
          - !<!SchemaResponse> 
            schema: *ref_124
            nullable: true
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
        exceptions:
          - !<!SchemaResponse> 
            schema: *ref_125
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        language: !<!Languages> 
          default:
            name: AnalyzeImageInStream
            description: "This operation extracts a rich set of visual features based on the image content.\r\nTwo input methods are supported -- (1) Uploading an image or (2) specifying an image URL. Within your request, there is an optional parameter to allow you to choose which features to return. By default, image categories are returned in the response.\r\nA successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong."
        protocol: !<!Protocols> {}
      - !<!Operation> 
        apiVersions:
          - !<!ApiVersion> 
            version: '3.0'
        parameters:
          - *ref_109
        requests:
          - !<!Request> 
            parameters:
              - !<!Parameter> 
                schema: *ref_166
                implementation: Method
                origin: 'modelerfour:synthesized/content-type'
                required: true
                language: !<!Languages> 
                  default:
                    name: contentType
                    description: Upload file type
                    serializedName: Content-Type
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: header
              - !<!Parameter> &ref_175
                schema: *ref_174
                implementation: Method
                required: true
                language: !<!Languages> 
                  default:
                    name: image
                    description: An image stream.
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: body
                    style: binary
              - !<!Parameter> 
                schema: *ref_116
                implementation: Method
                origin: 'modelerfour:synthesized/accept'
                required: true
                language: !<!Languages> 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: header
            signatureParameters:
              - *ref_175
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpBinaryRequest> 
                path: /areaOfInterest
                method: post
                binary: true
                knownMediaType: binary
                mediaTypes:
                  - application/octet-stream
                uri: '{Endpoint}/vision/v3.0'
          - !<!Request> 
            parameters:
              - !<!Parameter> 
                schema: *ref_169
                implementation: Method
                origin: 'modelerfour:synthesized/content-type'
                required: true
                language: !<!Languages> 
                  default:
                    name: contentType
                    description: Body Parameter content-type
                    serializedName: Content-Type
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: header
              - !<!Parameter> 
                schema: *ref_116
                implementation: Method
                origin: 'modelerfour:synthesized/accept'
                required: true
                language: !<!Languages> 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: header
            signatureParameters: []
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpMultipartRequest> 
                path: /areaOfInterest
                method: post
                knownMediaType: multipart
                mediaTypes:
                  - multipart/form-data
                multipart: true
                uri: '{Endpoint}/vision/v3.0'
        signatureParameters: []
        responses:
          - !<!SchemaResponse> 
            schema: *ref_164
            nullable: true
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
        exceptions:
          - !<!SchemaResponse> 
            schema: *ref_125
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        language: !<!Languages> 
          default:
            name: GetAreaOfInterestInStream
            description: "This operation returns a bounding box around the most important area of the image.\r\nA successful response will be returned in JSON. If the request failed, the response contains an error code and a message to help determine what went wrong.\r\nUpon failure, the error code and an error message are returned. The error code could be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, FailedToProcess, Timeout, or InternalServerError."
        protocol: !<!Protocols> {}
      - !<!Operation> 
        apiVersions:
          - !<!ApiVersion> 
            version: '3.0'
        parameters:
          - *ref_109
          - !<!Parameter> &ref_178
            schema: *ref_126
            implementation: Method
            language: !<!Languages> 
              default:
                name: maxCandidates
                description: Maximum number of candidate descriptions to be returned.  The default is 1.
                serializedName: maxCandidates
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: query
          - !<!Parameter> &ref_179
            schema: *ref_112
            implementation: Method
            language: !<!Languages> 
              default:
                name: language
                description: >-
                  The desired language for output generation. If this parameter is not specified, the default value is &quot;en&quot;.Supported languages:en - English, Default. es - Spanish, ja - Japanese, pt - Portuguese, zh - Simplified
                  Chinese.
                serializedName: language
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: query
          - !<!Parameter> &ref_180
            schema: *ref_113
            implementation: Method
            language: !<!Languages> 
              default:
                name: descriptionExclude
                description: Turn off specified domain models when generating the description.
                serializedName: descriptionExclude
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: query
                style: form
        requests:
          - !<!Request> 
            parameters:
              - !<!Parameter> 
                schema: *ref_166
                implementation: Method
                origin: 'modelerfour:synthesized/content-type'
                required: true
                language: !<!Languages> 
                  default:
                    name: contentType
                    description: Upload file type
                    serializedName: Content-Type
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: header
              - !<!Parameter> &ref_177
                schema: *ref_176
                implementation: Method
                required: true
                language: !<!Languages> 
                  default:
                    name: image
                    description: An image stream.
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: body
                    style: binary
              - !<!Parameter> 
                schema: *ref_116
                implementation: Method
                origin: 'modelerfour:synthesized/accept'
                required: true
                language: !<!Languages> 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: header
            signatureParameters:
              - *ref_177
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpBinaryRequest> 
                path: /describe
                method: post
                binary: true
                knownMediaType: binary
                mediaTypes:
                  - application/octet-stream
                uri: '{Endpoint}/vision/v3.0'
          - !<!Request> 
            parameters:
              - !<!Parameter> 
                schema: *ref_169
                implementation: Method
                origin: 'modelerfour:synthesized/content-type'
                required: true
                language: !<!Languages> 
                  default:
                    name: contentType
                    description: Body Parameter content-type
                    serializedName: Content-Type
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: header
              - !<!Parameter> 
                schema: *ref_116
                implementation: Method
                origin: 'modelerfour:synthesized/accept'
                required: true
                language: !<!Languages> 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: header
            signatureParameters: []
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpMultipartRequest> 
                path: /describe
                method: post
                knownMediaType: multipart
                mediaTypes:
                  - multipart/form-data
                multipart: true
                uri: '{Endpoint}/vision/v3.0'
        signatureParameters:
          - *ref_178
          - *ref_179
          - *ref_180
        responses:
          - !<!SchemaResponse> 
            schema: *ref_132
            nullable: true
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
        exceptions:
          - !<!SchemaResponse> 
            schema: *ref_125
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        language: !<!Languages> 
          default:
            name: DescribeImageInStream
            description: "This operation generates a description of an image in human readable language with complete sentences. The description is based on a collection of content tags, which are also returned by the operation. More than one description can be generated for each image. Descriptions are ordered by their confidence score. Descriptions may include results from celebrity and landmark domain models, if applicable.\r\nTwo input methods are supported -- (1) Uploading an image or (2) specifying an image URL.\r\nA successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong."
        protocol: !<!Protocols> {}
      - !<!Operation> 
        apiVersions:
          - !<!ApiVersion> 
            version: '3.0'
        parameters:
          - *ref_109
        requests:
          - !<!Request> 
            parameters:
              - !<!Parameter> 
                schema: *ref_166
                implementation: Method
                origin: 'modelerfour:synthesized/content-type'
                required: true
                language: !<!Languages> 
                  default:
                    name: contentType
                    description: Upload file type
                    serializedName: Content-Type
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: header
              - !<!Parameter> &ref_182
                schema: *ref_181
                implementation: Method
                required: true
                language: !<!Languages> 
                  default:
                    name: image
                    description: An image stream.
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: body
                    style: binary
              - !<!Parameter> 
                schema: *ref_116
                implementation: Method
                origin: 'modelerfour:synthesized/accept'
                required: true
                language: !<!Languages> 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: header
            signatureParameters:
              - *ref_182
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpBinaryRequest> 
                path: /detect
                method: post
                binary: true
                knownMediaType: binary
                mediaTypes:
                  - application/octet-stream
                uri: '{Endpoint}/vision/v3.0'
          - !<!Request> 
            parameters:
              - !<!Parameter> 
                schema: *ref_169
                implementation: Method
                origin: 'modelerfour:synthesized/content-type'
                required: true
                language: !<!Languages> 
                  default:
                    name: contentType
                    description: Body Parameter content-type
                    serializedName: Content-Type
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: header
              - !<!Parameter> 
                schema: *ref_116
                implementation: Method
                origin: 'modelerfour:synthesized/accept'
                required: true
                language: !<!Languages> 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: header
            signatureParameters: []
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpMultipartRequest> 
                path: /detect
                method: post
                knownMediaType: multipart
                mediaTypes:
                  - multipart/form-data
                multipart: true
                uri: '{Endpoint}/vision/v3.0'
        signatureParameters: []
        responses:
          - !<!SchemaResponse> 
            schema: *ref_135
            nullable: true
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
        exceptions:
          - !<!SchemaResponse> 
            schema: *ref_125
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        language: !<!Languages> 
          default:
            name: DetectObjectsInStream
            description: "Performs object detection on the specified image.\r\nTwo input methods are supported -- (1) Uploading an image or (2) specifying an image URL.\r\nA successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong."
        protocol: !<!Protocols> {}
      - !<!Operation> 
        apiVersions:
          - !<!ApiVersion> 
            version: '3.0'
        parameters:
          - *ref_109
          - !<!Parameter> &ref_185
            schema: *ref_154
            implementation: Method
            required: true
            language: !<!Languages> 
              default:
                name: width
                description: 'Width of the thumbnail, in pixels. It must be between 1 and 1024. Recommended minimum of 50.'
                serializedName: width
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: query
          - !<!Parameter> &ref_186
            schema: *ref_154
            implementation: Method
            required: true
            language: !<!Languages> 
              default:
                name: height
                description: 'Height of the thumbnail, in pixels. It must be between 1 and 1024. Recommended minimum of 50.'
                serializedName: height
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: query
          - !<!Parameter> &ref_187
            schema: *ref_155
            implementation: Method
            language: !<!Languages> 
              default:
                name: smartCropping
                description: Boolean flag for enabling smart cropping.
                serializedName: smartCropping
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: query
        requests:
          - !<!Request> 
            parameters:
              - !<!Parameter> 
                schema: *ref_166
                implementation: Method
                origin: 'modelerfour:synthesized/content-type'
                required: true
                language: !<!Languages> 
                  default:
                    name: contentType
                    description: Upload file type
                    serializedName: Content-Type
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: header
              - !<!Parameter> &ref_184
                schema: *ref_183
                implementation: Method
                required: true
                language: !<!Languages> 
                  default:
                    name: image
                    description: An image stream.
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: body
                    style: binary
              - !<!Parameter> 
                schema: *ref_156
                implementation: Method
                origin: 'modelerfour:synthesized/accept'
                required: true
                language: !<!Languages> 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: header
            signatureParameters:
              - *ref_184
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpBinaryRequest> 
                path: /generateThumbnail
                method: post
                binary: true
                knownMediaType: binary
                mediaTypes:
                  - application/octet-stream
                uri: '{Endpoint}/vision/v3.0'
          - !<!Request> 
            parameters:
              - !<!Parameter> 
                schema: *ref_169
                implementation: Method
                origin: 'modelerfour:synthesized/content-type'
                required: true
                language: !<!Languages> 
                  default:
                    name: contentType
                    description: Body Parameter content-type
                    serializedName: Content-Type
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: header
              - !<!Parameter> 
                schema: *ref_156
                implementation: Method
                origin: 'modelerfour:synthesized/accept'
                required: true
                language: !<!Languages> 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: header
            signatureParameters: []
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpMultipartRequest> 
                path: /generateThumbnail
                method: post
                knownMediaType: multipart
                mediaTypes:
                  - multipart/form-data
                multipart: true
                uri: '{Endpoint}/vision/v3.0'
        signatureParameters:
          - *ref_185
          - *ref_186
          - *ref_187
        responses:
          - !<!BinaryResponse> 
            binary: true
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpBinaryResponse> 
                knownMediaType: binary
                mediaTypes:
                  - application/octet-stream
                statusCodes:
                  - '200'
        exceptions:
          - !<!Response> 
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                statusCodes:
                  - default
        language: !<!Languages> 
          default:
            name: GenerateThumbnailInStream
            description: "This operation generates a thumbnail image with the user-specified width and height. By default, the service analyzes the image, identifies the region of interest (ROI), and generates smart cropping coordinates based on the ROI. Smart cropping helps when you specify an aspect ratio that differs from that of the input image.\r\nA successful response contains the thumbnail image binary. If the request failed, the response contains an error code and a message to help determine what went wrong.\r\nUpon failure, the error code and an error message are returned. The error code could be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, InvalidThumbnailSize, NotSupportedImage, FailedToProcess, Timeout, or InternalServerError."
        protocol: !<!Protocols> {}
      - !<!Operation> 
        apiVersions:
          - !<!ApiVersion> 
            version: '3.0'
        parameters:
          - *ref_109
          - !<!Parameter> &ref_190
            schema: *ref_137
            implementation: Method
            required: true
            language: !<!Languages> 
              default:
                name: model
                description: The domain-specific content to recognize.
                serializedName: model
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: path
          - !<!Parameter> &ref_191
            schema: *ref_112
            implementation: Method
            language: !<!Languages> 
              default:
                name: language
                description: >-
                  The desired language for output generation. If this parameter is not specified, the default value is &quot;en&quot;.Supported languages:en - English, Default. es - Spanish, ja - Japanese, pt - Portuguese, zh - Simplified
                  Chinese.
                serializedName: language
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: query
        requests:
          - !<!Request> 
            parameters:
              - !<!Parameter> 
                schema: *ref_166
                implementation: Method
                origin: 'modelerfour:synthesized/content-type'
                required: true
                language: !<!Languages> 
                  default:
                    name: contentType
                    description: Upload file type
                    serializedName: Content-Type
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: header
              - !<!Parameter> &ref_189
                schema: *ref_188
                implementation: Method
                required: true
                language: !<!Languages> 
                  default:
                    name: image
                    description: An image stream.
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: body
                    style: binary
              - !<!Parameter> 
                schema: *ref_116
                implementation: Method
                origin: 'modelerfour:synthesized/accept'
                required: true
                language: !<!Languages> 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: header
            signatureParameters:
              - *ref_189
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpBinaryRequest> 
                path: '/models/{model}/analyze'
                method: post
                binary: true
                knownMediaType: binary
                mediaTypes:
                  - application/octet-stream
                uri: '{Endpoint}/vision/v3.0'
          - !<!Request> 
            parameters:
              - !<!Parameter> 
                schema: *ref_169
                implementation: Method
                origin: 'modelerfour:synthesized/content-type'
                required: true
                language: !<!Languages> 
                  default:
                    name: contentType
                    description: Body Parameter content-type
                    serializedName: Content-Type
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: header
              - !<!Parameter> 
                schema: *ref_116
                implementation: Method
                origin: 'modelerfour:synthesized/accept'
                required: true
                language: !<!Languages> 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: header
            signatureParameters: []
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpMultipartRequest> 
                path: '/models/{model}/analyze'
                method: post
                knownMediaType: multipart
                mediaTypes:
                  - multipart/form-data
                multipart: true
                uri: '{Endpoint}/vision/v3.0'
        signatureParameters:
          - *ref_190
          - *ref_191
        responses:
          - !<!SchemaResponse> 
            schema: *ref_142
            nullable: true
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
        exceptions:
          - !<!SchemaResponse> 
            schema: *ref_125
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        language: !<!Languages> 
          default:
            name: AnalyzeImageByDomainInStream
            description: "This operation recognizes content within an image by applying a domain-specific model. The list of domain-specific models that are supported by the Computer Vision API can be retrieved using the /models GET request. Currently, the API provides following domain-specific models: celebrities, landmarks.\r\nTwo input methods are supported -- (1) Uploading an image or (2) specifying an image URL.\r\nA successful response will be returned in JSON.\r\nIf the request failed, the response will contain an error code and a message to help understand what went wrong."
        protocol: !<!Protocols> {}
      - !<!Operation> 
        apiVersions:
          - !<!ApiVersion> 
            version: '3.0'
        parameters:
          - *ref_109
          - !<!Parameter> &ref_194
            schema: *ref_143
            implementation: Method
            required: true
            language: !<!Languages> 
              default:
                name: detectOrientation
                description: Whether detect the text orientation in the image. With detectOrientation=true the OCR service tries to detect the image orientation and correct it before further processing (e.g. if it's upside-down).
                serializedName: detectOrientation
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: query
          - !<!Parameter> &ref_195
            schema: *ref_144
            implementation: Method
            language: !<!Languages> 
              default:
                name: language
                description: The BCP-47 language code of the text to be detected in the image. The default value is 'unk'.
                serializedName: language
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: query
        requests:
          - !<!Request> 
            parameters:
              - !<!Parameter> 
                schema: *ref_166
                implementation: Method
                origin: 'modelerfour:synthesized/content-type'
                required: true
                language: !<!Languages> 
                  default:
                    name: contentType
                    description: Upload file type
                    serializedName: Content-Type
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: header
              - !<!Parameter> &ref_193
                schema: *ref_192
                implementation: Method
                required: true
                language: !<!Languages> 
                  default:
                    name: image
                    description: An image stream.
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: body
                    style: binary
              - !<!Parameter> 
                schema: *ref_116
                implementation: Method
                origin: 'modelerfour:synthesized/accept'
                required: true
                language: !<!Languages> 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: header
            signatureParameters:
              - *ref_193
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpBinaryRequest> 
                path: /ocr
                method: post
                binary: true
                knownMediaType: binary
                mediaTypes:
                  - application/octet-stream
                uri: '{Endpoint}/vision/v3.0'
          - !<!Request> 
            parameters:
              - !<!Parameter> 
                schema: *ref_169
                implementation: Method
                origin: 'modelerfour:synthesized/content-type'
                required: true
                language: !<!Languages> 
                  default:
                    name: contentType
                    description: Body Parameter content-type
                    serializedName: Content-Type
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: header
              - !<!Parameter> 
                schema: *ref_116
                implementation: Method
                origin: 'modelerfour:synthesized/accept'
                required: true
                language: !<!Languages> 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: header
            signatureParameters: []
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpMultipartRequest> 
                path: /ocr
                method: post
                knownMediaType: multipart
                mediaTypes:
                  - multipart/form-data
                multipart: true
                uri: '{Endpoint}/vision/v3.0'
        signatureParameters:
          - *ref_194
          - *ref_195
        responses:
          - !<!SchemaResponse> 
            schema: *ref_149
            nullable: true
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
        exceptions:
          - !<!SchemaResponse> 
            schema: *ref_125
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        language: !<!Languages> 
          default:
            name: RecognizePrintedTextInStream
            description: "Optical Character Recognition (OCR) detects text in an image and extracts the recognized characters into a machine-usable character stream.\r\nUpon success, the OCR results will be returned.\r\nUpon failure, the error code together with an error message will be returned. The error code can be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage, or InternalServerError."
        protocol: !<!Protocols> {}
      - !<!Operation> 
        apiVersions:
          - !<!ApiVersion> 
            version: '3.0'
        parameters:
          - *ref_109
          - !<!Parameter> &ref_198
            schema: *ref_112
            implementation: Method
            language: !<!Languages> 
              default:
                name: language
                description: >-
                  The desired language for output generation. If this parameter is not specified, the default value is &quot;en&quot;.Supported languages:en - English, Default. es - Spanish, ja - Japanese, pt - Portuguese, zh - Simplified
                  Chinese.
                serializedName: language
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: query
        requests:
          - !<!Request> 
            parameters:
              - !<!Parameter> 
                schema: *ref_166
                implementation: Method
                origin: 'modelerfour:synthesized/content-type'
                required: true
                language: !<!Languages> 
                  default:
                    name: contentType
                    description: Upload file type
                    serializedName: Content-Type
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: header
              - !<!Parameter> &ref_197
                schema: *ref_196
                implementation: Method
                required: true
                language: !<!Languages> 
                  default:
                    name: image
                    description: An image stream.
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: body
                    style: binary
              - !<!Parameter> 
                schema: *ref_116
                implementation: Method
                origin: 'modelerfour:synthesized/accept'
                required: true
                language: !<!Languages> 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: header
            signatureParameters:
              - *ref_197
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpBinaryRequest> 
                path: /tag
                method: post
                binary: true
                knownMediaType: binary
                mediaTypes:
                  - application/octet-stream
                uri: '{Endpoint}/vision/v3.0'
          - !<!Request> 
            parameters:
              - !<!Parameter> 
                schema: *ref_169
                implementation: Method
                origin: 'modelerfour:synthesized/content-type'
                required: true
                language: !<!Languages> 
                  default:
                    name: contentType
                    description: Body Parameter content-type
                    serializedName: Content-Type
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: header
              - !<!Parameter> 
                schema: *ref_116
                implementation: Method
                origin: 'modelerfour:synthesized/accept'
                required: true
                language: !<!Languages> 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: header
            signatureParameters: []
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpMultipartRequest> 
                path: /tag
                method: post
                knownMediaType: multipart
                mediaTypes:
                  - multipart/form-data
                multipart: true
                uri: '{Endpoint}/vision/v3.0'
        signatureParameters:
          - *ref_198
        responses:
          - !<!SchemaResponse> 
            schema: *ref_153
            nullable: true
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
        exceptions:
          - !<!SchemaResponse> 
            schema: *ref_125
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        language: !<!Languages> 
          default:
            name: TagImageInStream
            description: "This operation generates a list of words, or tags, that are relevant to the content of the supplied image. The Computer Vision API can return tags based on objects, living beings, scenery or actions found in images. Unlike categories, tags are not organized according to a hierarchical classification system, but correspond to image content. Tags may contain hints to avoid ambiguity or provide context, for example the tag \"ascomycete\" may be accompanied by the hint \"fungus\".\r\nTwo input methods are supported -- (1) Uploading an image or (2) specifying an image URL.\r\nA successful response will be returned in JSON. If the request failed, the response will contain an error code and a message to help understand what went wrong."
        protocol: !<!Protocols> {}
    language: !<!Languages> 
      default:
        name: ''
        description: ''
    protocol: !<!Protocols> {}
security: !<!Security> 
  authenticationRequired: true
language: !<!Languages> 
  default:
    name: ComputerVision
    description: ''
protocol: !<!Protocols> 
  http: !<!HttpModel> {}
