// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace AnomalyDetector.Models
{
    /// <summary> The SeriesResult. </summary>
    public partial class SeriesResult
    {
        /// <summary> Initializes a new instance of SeriesResult. </summary>
        internal SeriesResult()
        {
            TimestampList = new ChangeTrackingList<DateTimeOffset>();
            ValueList = new ChangeTrackingList<double>();
            IsAnomalyList = new ChangeTrackingList<bool>();
            TrendChangeList = new ChangeTrackingList<bool>();
            PeriodList = new ChangeTrackingList<int>();
            ExpectedValueList = new ChangeTrackingList<double>();
            LowerBoundaryList = new ChangeTrackingList<double>();
            UpperBoundaryList = new ChangeTrackingList<double>();
        }

        /// <summary> Initializes a new instance of SeriesResult. </summary>
        /// <param name="series"> . </param>
        /// <param name="timestampList"> timestamps of the series. </param>
        /// <param name="valueList"> values of the series. </param>
        /// <param name="isAnomalyList"> whether points of the series are anomalies. </param>
        /// <param name="trendChangeList"> whether points of the series are trend change points. </param>
        /// <param name="periodList"> period calculated on each point of the series. </param>
        /// <param name="expectedValueList"> expected values of the series given by smart detector. </param>
        /// <param name="lowerBoundaryList"> lower boundary list of the series given by smart detector. </param>
        /// <param name="upperBoundaryList"> upper boundary list of the series given by smart detector. </param>
        internal SeriesResult(SeriesIdentity series, IReadOnlyList<DateTimeOffset> timestampList, IReadOnlyList<double> valueList, IReadOnlyList<bool> isAnomalyList, IReadOnlyList<bool> trendChangeList, IReadOnlyList<int> periodList, IReadOnlyList<double> expectedValueList, IReadOnlyList<double> lowerBoundaryList, IReadOnlyList<double> upperBoundaryList)
        {
            Series = series;
            TimestampList = timestampList;
            ValueList = valueList;
            IsAnomalyList = isAnomalyList;
            TrendChangeList = trendChangeList;
            PeriodList = periodList;
            ExpectedValueList = expectedValueList;
            LowerBoundaryList = lowerBoundaryList;
            UpperBoundaryList = upperBoundaryList;
        }

        public SeriesIdentity Series { get; }
        /// <summary> timestamps of the series. </summary>
        public IReadOnlyList<DateTimeOffset> TimestampList { get; }
        /// <summary> values of the series. </summary>
        public IReadOnlyList<double> ValueList { get; }
        /// <summary> whether points of the series are anomalies. </summary>
        public IReadOnlyList<bool> IsAnomalyList { get; }
        /// <summary> whether points of the series are trend change points. </summary>
        public IReadOnlyList<bool> TrendChangeList { get; }
        /// <summary> period calculated on each point of the series. </summary>
        public IReadOnlyList<int> PeriodList { get; }
        /// <summary> expected values of the series given by smart detector. </summary>
        public IReadOnlyList<double> ExpectedValueList { get; }
        /// <summary> lower boundary list of the series given by smart detector. </summary>
        public IReadOnlyList<double> LowerBoundaryList { get; }
        /// <summary> upper boundary list of the series given by smart detector. </summary>
        public IReadOnlyList<double> UpperBoundaryList { get; }
    }
}
