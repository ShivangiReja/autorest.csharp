// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using Azure.Core;

namespace AnomalyDetector.Models
{
    public partial class AlertResult
    {
        internal static AlertResult DeserializeAlertResult(JsonElement element)
        {
            string alertId = default;
            DateTimeOffset? timestamp = default;
            DateTimeOffset? createdTime = default;
            DateTimeOffset? modifiedTime = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("alertId"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    alertId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("timestamp"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    timestamp = property.Value.GetDateTimeOffset("O");
                    continue;
                }
                if (property.NameEquals("createdTime"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    createdTime = property.Value.GetDateTimeOffset("O");
                    continue;
                }
                if (property.NameEquals("modifiedTime"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    modifiedTime = property.Value.GetDateTimeOffset("O");
                    continue;
                }
            }
            return new AlertResult(alertId, timestamp, createdTime, modifiedTime);
        }
    }
}
