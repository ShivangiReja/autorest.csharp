// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace AnomalyDetector.Models
{
    /// <summary> The ValueCondition. </summary>
    public partial class ValueCondition
    {
        /// <summary> Initializes a new instance of ValueCondition. </summary>
        /// <param name="direction"> . </param>
        public ValueCondition(Direction direction)
        {
            Direction = direction;
        }

        /// <summary> Initializes a new instance of ValueCondition. </summary>
        /// <param name="lower">
        /// lower bound
        /// 
        /// 
        /// 
        /// should be specified when direction is Both or Down.
        /// </param>
        /// <param name="upper">
        /// upper bound
        /// 
        /// 
        /// 
        /// should be specified when direction is Both or Up.
        /// </param>
        /// <param name="direction"> . </param>
        /// <param name="metricId"> the other metric unique id used for value filter. </param>
        /// <param name="triggerForMissing">
        /// trigger alert when the corresponding point is missing in the other metric
        /// 
        /// 
        /// 
        /// should be specified only when using other metric to filter.
        /// </param>
        internal ValueCondition(double? lower, double? upper, Direction direction, Guid? metricId, bool? triggerForMissing)
        {
            Lower = lower;
            Upper = upper;
            Direction = direction;
            MetricId = metricId;
            TriggerForMissing = triggerForMissing;
        }

        /// <summary>
        /// lower bound
        /// 
        /// 
        /// 
        /// should be specified when direction is Both or Down.
        /// </summary>
        public double? Lower { get; set; }
        /// <summary>
        /// upper bound
        /// 
        /// 
        /// 
        /// should be specified when direction is Both or Up.
        /// </summary>
        public double? Upper { get; set; }
        public Direction Direction { get; set; }
        /// <summary> the other metric unique id used for value filter. </summary>
        public Guid? MetricId { get; set; }
        /// <summary>
        /// trigger alert when the corresponding point is missing in the other metric
        /// 
        /// 
        /// 
        /// should be specified only when using other metric to filter.
        /// </summary>
        public bool? TriggerForMissing { get; set; }
    }
}
