// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace AnomalyDetector.Models
{
    public partial class HardThresholdCondition : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(LowerBound))
            {
                if (LowerBound != null)
                {
                    writer.WritePropertyName("lowerBound");
                    writer.WriteNumberValue(LowerBound.Value);
                }
                else
                {
                    writer.WriteNull("lowerBound");
                }
            }
            if (Optional.IsDefined(UpperBound))
            {
                if (UpperBound != null)
                {
                    writer.WritePropertyName("upperBound");
                    writer.WriteNumberValue(UpperBound.Value);
                }
                else
                {
                    writer.WriteNull("upperBound");
                }
            }
            writer.WritePropertyName("anomalyDetectorDirection");
            writer.WriteStringValue(AnomalyDetectorDirection.ToString());
            writer.WritePropertyName("suppressCondition");
            writer.WriteObjectValue(SuppressCondition);
            writer.WriteEndObject();
        }

        internal static HardThresholdCondition DeserializeHardThresholdCondition(JsonElement element)
        {
            Optional<double?> lowerBound = default;
            Optional<double?> upperBound = default;
            AnomalyDetectorDirection anomalyDetectorDirection = default;
            SuppressCondition suppressCondition = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("lowerBound"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        lowerBound = null;
                        continue;
                    }
                    lowerBound = property.Value.GetDouble();
                    continue;
                }
                if (property.NameEquals("upperBound"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        upperBound = null;
                        continue;
                    }
                    upperBound = property.Value.GetDouble();
                    continue;
                }
                if (property.NameEquals("anomalyDetectorDirection"))
                {
                    anomalyDetectorDirection = new AnomalyDetectorDirection(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("suppressCondition"))
                {
                    suppressCondition = SuppressCondition.DeserializeSuppressCondition(property.Value);
                    continue;
                }
            }
            return new HardThresholdCondition(Optional.ToNullable(lowerBound), Optional.ToNullable(upperBound), anomalyDetectorDirection, suppressCondition);
        }
    }
}
