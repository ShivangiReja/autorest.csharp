// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace AnomalyDetector.Models
{
    /// <summary> The IncidentResult. </summary>
    public partial class IncidentResult
    {
        /// <summary> Initializes a new instance of IncidentResult. </summary>
        internal IncidentResult()
        {
        }

        /// <summary> Initializes a new instance of IncidentResult. </summary>
        /// <param name="metricId">
        /// metric unique id
        /// 
        /// 
        /// 
        /// only return for alerting incident result.
        /// </param>
        /// <param name="anomalyDetectionConfigurationId">
        /// anomaly detection configuration unique id
        /// 
        /// 
        /// 
        /// only return for alerting incident result.
        /// </param>
        /// <param name="incidentId"> incident id. </param>
        /// <param name="startTime"> incident start time. </param>
        /// <param name="lastTime"> incident last time. </param>
        /// <param name="rootNode"> . </param>
        /// <param name="property"> . </param>
        internal IncidentResult(Guid? metricId, Guid? anomalyDetectionConfigurationId, string incidentId, DateTimeOffset? startTime, DateTimeOffset? lastTime, SeriesIdentity rootNode, IncidentProperty property)
        {
            MetricId = metricId;
            AnomalyDetectionConfigurationId = anomalyDetectionConfigurationId;
            IncidentId = incidentId;
            StartTime = startTime;
            LastTime = lastTime;
            RootNode = rootNode;
            Property = property;
        }

        /// <summary>
        /// metric unique id
        /// 
        /// 
        /// 
        /// only return for alerting incident result.
        /// </summary>
        public Guid? MetricId { get; }
        /// <summary>
        /// anomaly detection configuration unique id
        /// 
        /// 
        /// 
        /// only return for alerting incident result.
        /// </summary>
        public Guid? AnomalyDetectionConfigurationId { get; }
        /// <summary> incident id. </summary>
        public string IncidentId { get; }
        /// <summary> incident start time. </summary>
        public DateTimeOffset? StartTime { get; }
        /// <summary> incident last time. </summary>
        public DateTimeOffset? LastTime { get; }
        public SeriesIdentity RootNode { get; }
        public IncidentProperty Property { get; }
    }
}
