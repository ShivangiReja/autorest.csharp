// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace AnomalyDetector.Models
{
    public partial class MetricDataItem
    {
        internal static MetricDataItem DeserializeMetricDataItem(JsonElement element)
        {
            Optional<MetricSeriesItem> id = default;
            Optional<IReadOnlyList<DateTimeOffset>> timestampList = default;
            Optional<IReadOnlyList<double>> valueList = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("id"))
                {
                    id = MetricSeriesItem.DeserializeMetricSeriesItem(property.Value);
                    continue;
                }
                if (property.NameEquals("timestampList"))
                {
                    List<DateTimeOffset> array = new List<DateTimeOffset>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(item.GetDateTimeOffset("O"));
                    }
                    timestampList = array;
                    continue;
                }
                if (property.NameEquals("valueList"))
                {
                    List<double> array = new List<double>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(item.GetDouble());
                    }
                    valueList = array;
                    continue;
                }
            }
            return new MetricDataItem(id.Value, Optional.ToList(timestampList), Optional.ToList(valueList));
        }
    }
}
