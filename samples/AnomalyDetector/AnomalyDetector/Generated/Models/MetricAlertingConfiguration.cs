// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace AnomalyDetector.Models
{
    /// <summary> The MetricAlertingConfiguration. </summary>
    public partial class MetricAlertingConfiguration
    {
        /// <summary> Initializes a new instance of MetricAlertingConfiguration. </summary>
        /// <param name="anomalyDetectionConfigurationId"> Anomaly detection configuration unique id. </param>
        /// <param name="anomalyScopeType"> . </param>
        /// <param name="negationOperation"> Negation operation. </param>
        public MetricAlertingConfiguration(Guid anomalyDetectionConfigurationId, AnomalyScope anomalyScopeType, bool negationOperation)
        {
            AnomalyDetectionConfigurationId = anomalyDetectionConfigurationId;
            AnomalyScopeType = anomalyScopeType;
            NegationOperation = negationOperation;
        }

        /// <summary> Initializes a new instance of MetricAlertingConfiguration. </summary>
        /// <param name="anomalyDetectionConfigurationId"> Anomaly detection configuration unique id. </param>
        /// <param name="anomalyScopeType"> . </param>
        /// <param name="negationOperation"> Negation operation. </param>
        /// <param name="dimensionAnomalyScope"> . </param>
        /// <param name="topNAnomalyScope"> . </param>
        /// <param name="severityFilter"> . </param>
        /// <param name="snoozeFilter"> . </param>
        /// <param name="valueFilter"> . </param>
        internal MetricAlertingConfiguration(Guid anomalyDetectionConfigurationId, AnomalyScope anomalyScopeType, bool negationOperation, DimensionGroupIdentity dimensionAnomalyScope, TopNGroupScope topNAnomalyScope, SeverityCondition severityFilter, AlertSnoozeCondition snoozeFilter, ValueCondition valueFilter)
        {
            AnomalyDetectionConfigurationId = anomalyDetectionConfigurationId;
            AnomalyScopeType = anomalyScopeType;
            NegationOperation = negationOperation;
            DimensionAnomalyScope = dimensionAnomalyScope;
            TopNAnomalyScope = topNAnomalyScope;
            SeverityFilter = severityFilter;
            SnoozeFilter = snoozeFilter;
            ValueFilter = valueFilter;
        }

        /// <summary> Anomaly detection configuration unique id. </summary>
        public Guid AnomalyDetectionConfigurationId { get; set; }
        public AnomalyScope AnomalyScopeType { get; set; }
        /// <summary> Negation operation. </summary>
        public bool NegationOperation { get; set; }
        public DimensionGroupIdentity DimensionAnomalyScope { get; set; }
        public TopNGroupScope TopNAnomalyScope { get; set; }
        public SeverityCondition SeverityFilter { get; set; }
        public AlertSnoozeCondition SnoozeFilter { get; set; }
        public ValueCondition ValueFilter { get; set; }
    }
}
