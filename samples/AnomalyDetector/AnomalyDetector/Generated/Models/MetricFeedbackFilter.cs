// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace AnomalyDetector.Models
{
    /// <summary> The MetricFeedbackFilter. </summary>
    internal partial class MetricFeedbackFilter
    {
        /// <summary> Initializes a new instance of MetricFeedbackFilter. </summary>
        /// <param name="metricId"> filter feedbacks by metric id. </param>
        internal MetricFeedbackFilter(Guid metricId)
        {
            MetricId = metricId;
        }

        /// <summary> Initializes a new instance of MetricFeedbackFilter. </summary>
        /// <param name="feedbackType"> . </param>
        /// <param name="metricId"> filter feedbacks by metric id. </param>
        /// <param name="dimensionFilter"> . </param>
        /// <param name="startTime"> filter feedbacks which startTime equals or larger than this timestamp. </param>
        /// <param name="endTime"> filter feedbacks which endTime equals or smaller than this timestamp. </param>
        /// <param name="userPrincipal"> filter feedbacks given by this user. </param>
        internal MetricFeedbackFilter(FeedbackType feedbackType, Guid metricId, FeedbackDimensionFilter dimensionFilter, DateTimeOffset? startTime, DateTimeOffset? endTime, string userPrincipal)
        {
            FeedbackType = feedbackType;
            MetricId = metricId;
            DimensionFilter = dimensionFilter;
            StartTime = startTime;
            EndTime = endTime;
            UserPrincipal = userPrincipal;
        }

        internal FeedbackType FeedbackType { get; set; }
        /// <summary> filter feedbacks by metric id. </summary>
        public Guid MetricId { get; }
        public FeedbackDimensionFilter DimensionFilter { get; }
        /// <summary> filter feedbacks which startTime equals or larger than this timestamp. </summary>
        public DateTimeOffset? StartTime { get; }
        /// <summary> filter feedbacks which endTime equals or smaller than this timestamp. </summary>
        public DateTimeOffset? EndTime { get; }
        /// <summary> filter feedbacks given by this user. </summary>
        public string UserPrincipal { get; }
    }
}
