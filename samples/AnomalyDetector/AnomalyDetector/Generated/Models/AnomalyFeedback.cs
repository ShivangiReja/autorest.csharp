// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace AnomalyDetector.Models
{
    /// <summary> The AnomalyFeedback. </summary>
    internal partial class AnomalyFeedback : MetricFeedback
    {
        /// <summary> Initializes a new instance of AnomalyFeedback. </summary>
        /// <param name="metricId"> metric unique id. </param>
        /// <param name="startTime"> the start timestamp of feedback timerange. </param>
        /// <param name="endTime"> the end timestamp of feedback timerange, when equals to startTime means only one timestamp. </param>
        /// <param name="value"> . </param>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        internal AnomalyFeedback(Guid metricId, DateTimeOffset startTime, DateTimeOffset endTime, AnomalyFeedbackValue value) : base(metricId)
        {
            if (value == null)
            {
                throw new ArgumentNullException(nameof(value));
            }

            StartTime = startTime;
            EndTime = endTime;
            Value = value;
            FeedbackType = new FeedbackType("AnomalyFeedback");
        }

        /// <summary> the start timestamp of feedback timerange. </summary>
        public DateTimeOffset StartTime { get; }
        /// <summary> the end timestamp of feedback timerange, when equals to startTime means only one timestamp. </summary>
        public DateTimeOffset EndTime { get; }
        public AnomalyFeedbackValue Value { get; }
        public MetricAnomalyFeedbackSourceInfo SourceInfo { get; }
    }
}
